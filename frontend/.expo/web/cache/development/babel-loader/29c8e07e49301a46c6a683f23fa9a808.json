{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Divider, Text, TouchableRipple } from \"react-native-paper\";\nimport { useAppTheme } from \"../../../theme\";\nimport { formatDate, getIconWithActivityType, getNameWithActivityType, minutesPerKilometer, secondsToMinutes } from \"../../../utils/helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ActivityListItem(props) {\n  var activityInfo = props.activityInfo,\n    _onPress = props.onPress;\n  var id = activityInfo.id,\n    activityName = activityInfo.activityName,\n    activityNote = activityInfo.activityNote,\n    duration = activityInfo.duration,\n    kcal = activityInfo.kcal,\n    totalDistance = activityInfo.totalDistance,\n    startTime = activityInfo.startTime,\n    endTime = activityInfo.endTime,\n    type = activityInfo.type;\n  var theme = useAppTheme();\n  return _jsxs(_Fragment, {\n    children: [_jsx(Divider, {\n      bold: true\n    }), _jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return _onPress();\n      },\n      children: _jsxs(View, {\n        style: styles(theme).listItemContainer,\n        children: [_jsxs(View, {\n          style: styles(theme).listItemTilte,\n          children: [_jsx(Avatar.Icon, {\n            size: 40,\n            icon: getIconWithActivityType(type)\n          }), _jsxs(View, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              flex: 1\n            },\n            children: [_jsxs(View, {\n              style: {\n                marginLeft: 12\n              },\n              children: [_jsx(Text, {\n                variant: \"titleMedium\",\n                style: {\n                  fontWeight: \"700\"\n                },\n                children: activityName\n              }), _jsx(Text, {\n                variant: \"bodyMedium\",\n                children: formatDate(endTime)\n              })]\n            }), _jsx(View, {\n              style: {\n                justifyContent: \"flex-end\",\n                flex: 1\n              },\n              children: _jsx(Text, {\n                variant: \"bodyMedium\",\n                style: {\n                  alignSelf: \"flex-end\"\n                },\n                children: getNameWithActivityType(type)\n              })\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles(theme).listItemValue,\n          children: [_jsxs(View, {\n            style: styles(theme).listItemValueBox,\n            children: [_jsx(Text, {\n              variant: \"titleMedium\",\n              style: {\n                textAlign: \"center\",\n                color: theme.colors.secondary\n              },\n              children: (totalDistance / 1000.0).toFixed(2)\n            }), _jsx(Text, {\n              variant: \"bodyMedium\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Kilometers\"\n            })]\n          }), _jsxs(View, {\n            style: styles(theme).listItemValueBox,\n            children: [_jsx(Text, {\n              variant: \"titleMedium\",\n              style: {\n                textAlign: \"center\",\n                color: theme.colors.secondary\n              },\n              children: minutesPerKilometer(duration, totalDistance)\n            }), _jsx(Text, {\n              variant: \"bodyMedium\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Avg Pace\"\n            })]\n          }), _jsxs(View, {\n            style: styles(theme).listItemValueBox,\n            children: [_jsx(Text, {\n              variant: \"titleMedium\",\n              style: {\n                textAlign: \"center\",\n                color: theme.colors.secondary\n              },\n              children: secondsToMinutes(duration)\n            }), _jsx(Text, {\n              variant: \"bodyMedium\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Minutes\"\n            })]\n          })]\n        })]\n      })\n    }, id)]\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    listItemContainer: {\n      paddingVertical: 15,\n      paddingHorizontal: 8\n    },\n    listItemTilte: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"row\"\n    },\n    listItemValue: {\n      marginTop: 10,\n      display: \"flex\",\n      flexDirection: \"row\",\n      textAlign: \"center\"\n    },\n    listItemValueBox: {\n      width: \"33.333%\"\n    }\n  });\n};","map":{"version":3,"names":["Avatar","Divider","Text","TouchableRipple","useAppTheme","formatDate","getIconWithActivityType","getNameWithActivityType","minutesPerKilometer","secondsToMinutes","ActivityListItem","props","activityInfo","onPress","id","activityName","activityNote","duration","kcal","totalDistance","startTime","endTime","type","theme","styles","listItemContainer","listItemTilte","display","flexDirection","flex","marginLeft","fontWeight","justifyContent","alignSelf","listItemValue","listItemValueBox","textAlign","color","colors","secondary","toFixed","StyleSheet","create","paddingVertical","paddingHorizontal","alignItems","marginTop","width"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Activity/comp/ActivityListItem.tsx"],"sourcesContent":["import { StyleSheet, View } from \"react-native\";\nimport { Avatar, Divider, Text, TouchableRipple } from \"react-native-paper\";\nimport { ActivityInfo, ActivityType } from \"../../../lib/activity/activity_pb\";\nimport { AppTheme, useAppTheme } from \"../../../theme\";\nimport {\n  formatDate,\n  getIconWithActivityType,\n  getNameWithActivityType,\n  minutesPerKilometer,\n  secondsToMinutes,\n} from \"../../../utils/helpers\";\n\ninterface ActivityListItemProps {\n  activityInfo: ActivityInfo.AsObject;\n  onPress: Function;\n}\n\nexport default function ActivityListItem(props: ActivityListItemProps) {\n  const { activityInfo, onPress } = props;\n  const {\n    id,\n    activityName,\n    activityNote,\n    duration,\n    kcal,\n    totalDistance,\n    startTime,\n    endTime,\n    type,\n  } = activityInfo;\n  const theme = useAppTheme();\n\n  return (\n    <>\n      <Divider bold />\n      <TouchableRipple key={id} onPress={() => onPress()}>\n        <View style={styles(theme).listItemContainer}>\n          <View style={styles(theme).listItemTilte}>\n            <Avatar.Icon size={40} icon={getIconWithActivityType(type)} />\n            <View\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flex: 1,\n              }}\n            >\n              <View style={{ marginLeft: 12 }}>\n                <Text variant=\"titleMedium\" style={{ fontWeight: \"700\" }}>\n                  {activityName}\n                </Text>\n                <Text variant=\"bodyMedium\">{formatDate(endTime)}</Text>\n              </View>\n              <View\n                style={{\n                  justifyContent: \"flex-end\",\n                  flex: 1,\n                }}\n              >\n                <Text variant=\"bodyMedium\" style={{ alignSelf: \"flex-end\" }}>\n                  {getNameWithActivityType(type)}\n                </Text>\n              </View>\n            </View>\n          </View>\n          <View style={styles(theme).listItemValue}>\n            <View style={styles(theme).listItemValueBox}>\n              <Text\n                variant=\"titleMedium\"\n                style={{\n                  textAlign: \"center\",\n                  color: theme.colors.secondary,\n                }}\n              >\n                {(totalDistance / 1000.0).toFixed(2)}\n              </Text>\n              <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\n                Kilometers\n              </Text>\n            </View>\n            <View style={styles(theme).listItemValueBox}>\n              <Text\n                variant=\"titleMedium\"\n                style={{\n                  textAlign: \"center\",\n                  color: theme.colors.secondary,\n                }}\n              >\n                {minutesPerKilometer(duration, totalDistance)}\n              </Text>\n              <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\n                Avg Pace\n              </Text>\n            </View>\n            <View style={styles(theme).listItemValueBox}>\n              <Text\n                variant=\"titleMedium\"\n                style={{\n                  textAlign: \"center\",\n                  color: theme.colors.secondary,\n                }}\n              >\n                {secondsToMinutes(duration)}\n              </Text>\n              <Text variant=\"bodyMedium\" style={{ textAlign: \"center\" }}>\n                Minutes\n              </Text>\n            </View>\n          </View>\n        </View>\n      </TouchableRipple>\n    </>\n  );\n}\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    listItemContainer: {\n      paddingVertical: 15,\n      paddingHorizontal: 8,\n    },\n    listItemTilte: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"row\",\n    },\n    listItemValue: {\n      marginTop: 10,\n      display: \"flex\",\n      flexDirection: \"row\",\n      textAlign: \"center\",\n    },\n\n    listItemValueBox: {\n      width: \"33.333%\",\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}