{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { NotificationClient } from \"../../../lib/notification/NotificationServiceClientPb\";\nimport { SaveExpoPushTokenRequest } from \"../../../lib/notification/notification_pb\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nvar rpcNotificationClient = function (_gRPCClientAbstract) {\n  _inherits(rpcNotificationClient, _gRPCClientAbstract);\n  var _super = _createSuper(rpcNotificationClient);\n  function rpcNotificationClient(config) {\n    _classCallCheck(this, rpcNotificationClient);\n    config.serviceName = \"NOTIFICATION\";\n    return _super.call(this, NotificationClient, config);\n  }\n  _createClass(rpcNotificationClient, [{\n    key: \"checkIfExistOrSaveExpoPushToken\",\n    value: function () {\n      var _checkIfExistOrSaveExpoPushToken = _asyncToGenerator(function* (param) {\n        var req = new SaveExpoPushTokenRequest();\n        req.setExpoPushToken(param.expoPushToken);\n        req.setUserId(param.userId);\n        return yield this.gRPCClientRequest(\"checkIfExistOrSaveExpoPushToken\", req);\n      });\n      function checkIfExistOrSaveExpoPushToken(_x) {\n        return _checkIfExistOrSaveExpoPushToken.apply(this, arguments);\n      }\n      return checkIfExistOrSaveExpoPushToken;\n    }()\n  }]);\n  return rpcNotificationClient;\n}(gRPCClientAbstract);\nexport default rpcNotificationClient;","map":{"version":3,"names":["NotificationClient","SaveExpoPushTokenRequest","gRPCClientAbstract","rpcNotificationClient","config","serviceName","param","req","setExpoPushToken","expoPushToken","setUserId","userId","gRPCClientRequest"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/utils/grpc/client/notification.ts"],"sourcesContent":["import { NotificationClient } from \"../../../lib/notification/NotificationServiceClientPb\";\nimport {\n PushNotiRequest,\n SaveExpoPushTokenRequest\n} from \"../../../lib/notification/notification_pb\";\n\nimport { GRPCClientConfig } from \"../abstract/types\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nimport { Empty } from \"google-protobuf/google/protobuf/empty_pb\";\n\nclass rpcNotificationClient extends gRPCClientAbstract {\n  constructor(config: GRPCClientConfig) {\n    config.serviceName = \"NOTIFICATION\";\n    super(NotificationClient, config);\n  }\n\n//   async signUp(param: SignUpRequest.AsObject) {\n//     const req = new SignUpRequest();\n//     req.setUserName(param.userName);\n//     req.setPassword(param.password);\n//     req.setDisplayName(param.displayName);\n\n//     return await this.gRPCClientRequest<SignUpReply.AsObject>(\"signUp\", req);\n//   }\n\n//   async pushNotification(param: PushNotiRequest.AsObject) {\n//     const req = new PushNotiRequest()\n//     req.\n//     return await this.gRPCClientRequest<Empty.AsObject>(\"pushNotification\", req);\n//   }\n\n  async checkIfExistOrSaveExpoPushToken(param: SaveExpoPushTokenRequest.AsObject) {\n    const req = new SaveExpoPushTokenRequest()\n    req.setExpoPushToken(param.expoPushToken)\n    req.setUserId(param.userId)\n    return await this.gRPCClientRequest<Empty.AsObject>(\"checkIfExistOrSaveExpoPushToken\", req);\n  }\n\n//   async logOut() {\n//     const req = new Empty();\n//     return await this.gRPCClientRequest<Empty.AsObject>(\"logOut\", req);\n//   }\n\n//   async getMe() {\n//     const req = new Empty();\n//     return await this.gRPCClientRequest<MeReply.AsObject>(\"me\", req);\n//   }\n\n//   async updateHealthInfo(param: HealthRecordRequest.AsObject) {\n//     const req = new HealthRecordRequest();\n//     req.setAge(param.age);\n//     req.setHeight(param.height);\n//     req.setWeight(param.weight);\n//     return await this.gRPCClientRequest<Empty.AsObject>(\"setHealthRecord\", req);\n//   }\n}\n\nexport default rpcNotificationClient;"],"mappings":";;;;;;;;AAAA,SAASA,kBAAkB;AAC3B,SAECC,wBAAwB;AAIzB,OAAOC,kBAAkB;AAA+B,IAGlDC,qBAAqB;EAAA;EAAA;EACzB,+BAAYC,MAAwB,EAAE;IAAA;IACpCA,MAAM,CAACC,WAAW,GAAG,cAAc;IAAC,yBAC9BL,kBAAkB,EAAEI,MAAM;EAClC;EAAC;IAAA;IAAA;MAAA,yDAiBD,WAAsCE,KAAwC,EAAE;QAC9E,IAAMC,GAAG,GAAG,IAAIN,wBAAwB,EAAE;QAC1CM,GAAG,CAACC,gBAAgB,CAACF,KAAK,CAACG,aAAa,CAAC;QACzCF,GAAG,CAACG,SAAS,CAACJ,KAAK,CAACK,MAAM,CAAC;QAC3B,aAAa,IAAI,CAACC,iBAAiB,CAAiB,iCAAiC,EAAEL,GAAG,CAAC;MAC7F,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EA1BiCL,kBAAkB;AA+CtD,eAAeC,qBAAqB"},"metadata":{},"sourceType":"module"}