{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { selectToggleSlice, switchNightMode } from \"../../redux/features/toggle/slice\";\nimport { logoutThunk } from \"../../redux/features/user/thunk\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { useAppTheme } from \"../../theme\";\nimport SettingItem from \"./comp/SettingItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AppSetting(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var theme = useAppTheme();\n  var dispatch = useAppDispatch();\n  var handleLogout = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      dispatch(logoutThunk());\n      alert(\"Logged out!\");\n    });\n    return function handleLogout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var _useAppSelector = useAppSelector(selectToggleSlice),\n    isNightMode = _useAppSelector.isNightMode;\n  var handleChangeNightMode = function handleChangeNightMode() {\n    dispatch(switchNightMode());\n  };\n  return _jsx(View, {\n    style: styles(theme).container,\n    children: _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [_jsxs(View, {\n        style: styles(theme).settingGroup,\n        children: [_jsx(SettingItem, {\n          left: \"Profile\",\n          topDivider: true,\n          onPress: function onPress() {\n            navigation.navigate(\"ProfileSetting\");\n          }\n        }), _jsx(SettingItem, {\n          left: \"Units of Measure\",\n          onPress: function onPress() {}\n        }), _jsx(SettingItem, {\n          left: \"Night mode\",\n          right: isNightMode ? \"Yes\" : \"No\",\n          onPress: handleChangeNightMode\n        })]\n      }), _jsxs(View, {\n        style: styles(theme).settingGroup,\n        children: [_jsx(SettingItem, {\n          left: \"Notification\",\n          topDivider: true,\n          onPress: function onPress() {}\n        }), _jsx(SettingItem, {\n          left: \"Privacy\",\n          onPress: function onPress() {}\n        })]\n      }), _jsxs(View, {\n        style: styles(theme).settingGroup,\n        children: [_jsx(SettingItem, {\n          left: \"Country/Region\",\n          topDivider: true,\n          onPress: function onPress() {}\n        }), _jsx(SettingItem, {\n          left: \"Language\",\n          onPress: function onPress() {}\n        })]\n      }), _jsxs(View, {\n        style: styles(theme).settingGroup,\n        children: [_jsx(SettingItem, {\n          left: \"About this Version\",\n          topDivider: true,\n          onPress: function onPress() {}\n        }), _jsx(SettingItem, {\n          left: \"Terms of Use\",\n          onPress: function onPress() {}\n        }), _jsx(SettingItem, {\n          left: \"Privacy Policy\",\n          onPress: function onPress() {}\n        }), _jsx(SettingItem, {\n          left: \"Contact Us\",\n          onPress: function onPress() {}\n        })]\n      }), _jsx(View, {\n        style: styles(theme).settingGroup,\n        children: _jsx(SettingItem, {\n          left: \"Delete Account\",\n          topDivider: true,\n          color: theme.colors.error,\n          onPress: function onPress() {}\n        })\n      }), _jsx(View, {\n        style: styles(theme).settingGroup,\n        children: _jsx(SettingItem, {\n          left: \"Log Out\",\n          topDivider: true,\n          color: theme.colors.error,\n          onPress: handleLogout\n        })\n      })]\n    })\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.surfaceVariant\n    },\n    settingGroup: {\n      marginTop: 20\n    }\n  });\n};","map":{"version":3,"names":["selectToggleSlice","switchNightMode","logoutThunk","useAppDispatch","useAppSelector","useAppTheme","SettingItem","AppSetting","navigation","route","theme","dispatch","handleLogout","alert","isNightMode","handleChangeNightMode","styles","container","settingGroup","navigate","colors","error","StyleSheet","create","flex","backgroundColor","surfaceVariant","marginTop"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Profile/AppSetting.tsx"],"sourcesContent":["import { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { ScrollView, StyleSheet, View } from \"react-native\";\nimport { RootBaseStackParamList } from \"../../navigators/BaseStack\";\nimport {\n  selectToggleSlice,\n  switchNightMode,\n} from \"../../redux/features/toggle/slice\";\nimport { logoutThunk } from \"../../redux/features/user/thunk\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { AppTheme, useAppTheme } from \"../../theme\";\nimport SettingItem from \"./comp/SettingItem\";\n\nexport default function AppSetting({\n  navigation,\n  route,\n}: NativeStackScreenProps<RootBaseStackParamList, \"AppSetting\">) {\n  const theme = useAppTheme();\n  const dispatch = useAppDispatch();\n  const handleLogout = async () => {\n    dispatch(logoutThunk());\n    alert(\"Logged out!\");\n  };\n  const { isNightMode } = useAppSelector(selectToggleSlice);\n\n  const handleChangeNightMode = () => {\n    dispatch(switchNightMode());\n  };\n  return (\n    <View style={styles(theme).container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View style={styles(theme).settingGroup}>\n          <SettingItem\n            left=\"Profile\"\n            topDivider\n            onPress={() => {\n              navigation.navigate(\"ProfileSetting\");\n            }}\n          />\n          <SettingItem left=\"Units of Measure\" onPress={() => {}} />\n          <SettingItem\n            left=\"Night mode\"\n            right={isNightMode ? \"Yes\" : \"No\"}\n            onPress={handleChangeNightMode}\n          />\n        </View>\n        <View style={styles(theme).settingGroup}>\n          <SettingItem left=\"Notification\" topDivider onPress={() => {}} />\n          <SettingItem left=\"Privacy\" onPress={() => {}} />\n        </View>\n        <View style={styles(theme).settingGroup}>\n          <SettingItem left=\"Country/Region\" topDivider onPress={() => {}} />\n          <SettingItem left=\"Language\" onPress={() => {}} />\n        </View>\n        <View style={styles(theme).settingGroup}>\n          <SettingItem\n            left=\"About this Version\"\n            topDivider\n            onPress={() => {}}\n          />\n          <SettingItem left=\"Terms of Use\" onPress={() => {}} />\n          <SettingItem left=\"Privacy Policy\" onPress={() => {}} />\n          <SettingItem left=\"Contact Us\" onPress={() => {}} />\n        </View>\n        <View style={styles(theme).settingGroup}>\n          <SettingItem\n            left=\"Delete Account\"\n            topDivider\n            color={theme.colors.error}\n            onPress={() => {}}\n          />\n        </View>\n        <View style={styles(theme).settingGroup}>\n          <SettingItem\n            left=\"Log Out\"\n            topDivider\n            color={theme.colors.error}\n            onPress={handleLogout}\n          />\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.surfaceVariant,\n    },\n    settingGroup: {\n      marginTop: 20,\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}