{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { CustomNavBar } from \"../comp/NavBar\";\nimport ActivityDetail from \"../screens/Activity/ActivityDetail\";\nimport ActivityList from \"../screens/Activity/ActivityList\";\nimport AppSetting from \"../screens/Profile/AppSetting\";\nimport ProfileSetting from \"../screens/Profile/ProfileSetting\";\nimport HomeTabs from \"./HomeTab\";\nimport Login from \"../screens/Authentication/Login\";\nimport Signup from \"../screens/Authentication/Signup\";\nimport Intro from \"../screens/Authentication/Intro\";\nimport GetInfo from \"../screens/Authentication/GetInfo\";\nimport RunResult from \"../screens/Run/RunResult\";\nimport { useAppDispatch, useAppSelector } from \"../redux/store\";\nimport { selectUserSlice } from \"../redux/features/user/slice\";\nimport { useEffect } from \"react\";\nimport { getMeThunk } from \"../redux/features/user/thunk\";\nimport NotificationList from \"../screens/Profile/NotificationList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport var BaseStack = function BaseStack() {\n  var dispatch = useAppDispatch();\n  var _useAppSelector = useAppSelector(selectUserSlice),\n    isSignedIn = _useAppSelector.isSignedIn;\n  var getMe = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$dispatch$unwra = yield dispatch(getMeThunk()).unwrap(),\n        response = _yield$dispatch$unwra.response,\n        error = _yield$dispatch$unwra.error;\n      if (error) {\n        alert(\"Un authenticated!\");\n      }\n    });\n    return function getMe() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getMe();\n  }, []);\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      header: CustomNavBar\n    },\n    children: isSignedIn ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"HomeTabs\",\n        component: HomeTabs,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"ActivityList\",\n        options: {\n          title: \"All activities\",\n          headerBackVisible: true\n        },\n        component: ActivityList\n      }), _jsx(Stack.Screen, {\n        name: \"ActivityDetail\",\n        options: {\n          title: \"Detail\",\n          headerBackVisible: true\n        },\n        component: ActivityDetail\n      }), _jsx(Stack.Screen, {\n        name: \"RunResult\",\n        options: {\n          title: \"Run Result\",\n          headerBackVisible: true\n        },\n        component: RunResult\n      }), _jsx(Stack.Screen, {\n        name: \"AppSetting\",\n        options: {\n          title: \"Settings\",\n          headerBackVisible: true\n        },\n        component: AppSetting\n      }), _jsx(Stack.Screen, {\n        name: \"ProfileSetting\",\n        options: {\n          title: \"Profile settings\",\n          headerBackVisible: true\n        },\n        component: ProfileSetting\n      }), _jsx(Stack.Screen, {\n        name: \"NotificationList\",\n        options: {\n          title: \"Notifications\",\n          headerBackVisible: true\n        },\n        component: NotificationList\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Intro\",\n        options: {\n          title: \"Intro\",\n          headerShown: false\n        },\n        component: Intro\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        options: {\n          title: \"Login\",\n          headerShown: false\n        },\n        component: Login\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        options: {\n          title: \"Create new account\",\n          headerShown: false\n        },\n        component: Signup\n      }), _jsx(Stack.Screen, {\n        name: \"GetInfo\",\n        options: {\n          title: \"Info\",\n          headerShown: false\n        },\n        component: GetInfo\n      })]\n    })\n  });\n};","map":{"version":3,"names":["createNativeStackNavigator","CustomNavBar","ActivityDetail","ActivityList","AppSetting","ProfileSetting","HomeTabs","Login","Signup","Intro","GetInfo","RunResult","useAppDispatch","useAppSelector","selectUserSlice","useEffect","getMeThunk","NotificationList","Stack","BaseStack","dispatch","isSignedIn","getMe","unwrap","response","error","alert","header","headerShown","title","headerBackVisible"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/navigators/BaseStack.tsx"],"sourcesContent":["import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ExampleScreen from \"../screens/ExampleScreen\";\nimport { CustomNavBar } from \"../comp/NavBar\";\nimport ActivityDetail from \"../screens/Activity/ActivityDetail\";\nimport ActivityList from \"../screens/Activity/ActivityList\";\nimport AppSetting from \"../screens/Profile/AppSetting\";\nimport ProfileSetting from \"../screens/Profile/ProfileSetting\";\nimport HomeTabs from \"./HomeTab\";\nimport Login from \"../screens/Authentication/Login\";\nimport Signup from \"../screens/Authentication/Signup\";\nimport Intro from \"../screens/Authentication/Intro\";\nimport GetInfo from \"../screens/Authentication/GetInfo\";\nimport RunResult from \"../screens/Run/RunResult\";\nimport RunHome from \"../screens/Run/RunHome\";\nimport { notificationClient } from \"../utils/grpc\";\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { Subscription } from 'expo-modules-core';\nimport * as google_protobuf_timestamp_pb from \"google-protobuf/google/protobuf/timestamp_pb\";\nimport {\n  CreateActivityInfoRequest,\n  CreateActivityInfoReply,\n  ActivityInfo,\n  TrackPoint,\n} from \"../lib/activity/activity_pb\";\nimport { useAppDispatch, useAppSelector } from \"../redux/store\";\nimport {\n  isUserSliceLoading,\n  selectUserSlice,\n} from \"../redux/features/user/slice\";\nimport { View, Platform  } from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { getMeThunk } from \"../redux/features/user/thunk\";\nimport ComingSoon from \"../screens/ComingSoon\";\nimport { ExpoPushTokenRequest } from \"../lib/notification/notification_pb\";\nimport NotificationList from \"../screens/Profile/NotificationList\";\nimport SwipeGesture from \"../screens/Profile/SwipeGesture\";\n\nexport type RootBaseStackParamList = {\n  // Home tabs\n  HomeTabs: undefined;\n\n  // Activity\n  ActivityDetail: {\n    activityId: number;\n  };\n  ActivityList: {};\n\n  // Run\n  RunResult: {\n    display: {\n      distance: string;\n      time: string;\n      pace: string;\n      kcal: string;\n    };\n    savingInfo: {\n      duration: number;\n      kcal: number;\n      totalDistance: number;\n      routeList: Array<TrackPoint.AsObject>;\n      startTime: google_protobuf_timestamp_pb.Timestamp.AsObject;\n      endTime: google_protobuf_timestamp_pb.Timestamp.AsObject;\n    };\n    // pass function to reset\n    resetRunInfo: () => void;\n  };\n\n  // Profile\n  ProfileSetting: undefined;\n  AppSetting: undefined;\n\n  // Notification\n  NotificationList: {};\n\n  // Auth\n  Login: undefined;\n  Signup: undefined;\n  Intro: undefined;\n  GetInfo: undefined;\n};\n\nconst Stack = createNativeStackNavigator<RootBaseStackParamList>();\n\nexport const BaseStack = () => {\n  \n  const dispatch = useAppDispatch();\n  // const loading = useAppSelector(isUserSliceLoading);\n  const { isSignedIn } = useAppSelector(selectUserSlice);\n  \n\n \n\n  const getMe = async () => {\n    const { response ,error } = await dispatch(getMeThunk()).unwrap();\n    if (error) {\n      alert(\"Un authenticated!\");\n    }\n  };\n\n  useEffect(() => {\n    getMe();\n  }, []);\n\n  // if (loading) {\n  //   return (\n  //     <View>\n  //       <Text>Loading</Text>\n  //     </View>\n  //   );\n  // }\n\n  return (\n    <Stack.Navigator screenOptions={{ header: CustomNavBar }}>\n      {isSignedIn ? (\n        <>\n          <Stack.Screen\n            name=\"HomeTabs\"\n            component={HomeTabs}\n            options={{ headerShown: false }}\n          />\n          <Stack.Screen\n            name=\"ActivityList\"\n            options={{\n              title: \"All activities\",\n              headerBackVisible: true,\n            }}\n            component={ActivityList}\n          />\n          <Stack.Screen\n            name=\"ActivityDetail\"\n            options={{\n              title: \"Detail\",\n              headerBackVisible: true,\n            }}\n            component={ActivityDetail}\n          />\n          <Stack.Screen\n            name=\"RunResult\"\n            options={{\n              title: \"Run Result\",\n              headerBackVisible: true,\n            }}\n            component={RunResult}\n          />\n          <Stack.Screen\n            name=\"AppSetting\"\n            options={{\n              title: \"Settings\",\n              headerBackVisible: true,\n            }}\n            component={AppSetting}\n          />\n          <Stack.Screen\n            name=\"ProfileSetting\"\n            options={{\n              title: \"Profile settings\",\n              headerBackVisible: true,\n            }}\n            component={ProfileSetting}\n          />\n          <Stack.Screen\n            name=\"NotificationList\"\n            options={{\n              title: \"Notifications\",\n              headerBackVisible: true,\n            }}\n            component={NotificationList}\n          />\n        </>\n      ) : (\n        <>\n          <Stack.Screen\n            name=\"Intro\"\n            options={{\n              title: \"Intro\",\n              headerShown: false,\n            }}\n            component={Intro}\n          />\n          <Stack.Screen\n            name=\"Login\"\n            options={{\n              title: \"Login\",\n              headerShown: false,\n            }}\n            component={Login}\n          />\n          <Stack.Screen\n            name=\"Signup\"\n            options={{\n              title: \"Create new account\",\n              headerShown: false,\n            }}\n            component={Signup}\n          />\n          <Stack.Screen\n            name=\"GetInfo\"\n            options={{\n              title: \"Info\",\n              headerShown: false,\n            }}\n            component={GetInfo}\n          />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}