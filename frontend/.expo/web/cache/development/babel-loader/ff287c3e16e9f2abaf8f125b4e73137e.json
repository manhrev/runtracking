{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { ActivityClient } from \"../../../lib/activity/ActivityServiceClientPb\";\nimport { CreateActivityInfoRequest, ListActivityInfoRequest, ActivityInfo, TrackPoint, GetActivityStatisticRequest } from \"../../../lib/activity/activity_pb\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nimport { Timestamp } from \"google-protobuf/google/protobuf/timestamp_pb\";\nvar rpcActivityClient = function (_gRPCClientAbstract) {\n  _inherits(rpcActivityClient, _gRPCClientAbstract);\n  var _super = _createSuper(rpcActivityClient);\n  function rpcActivityClient(config) {\n    _classCallCheck(this, rpcActivityClient);\n    config.serviceName = \"ACTIVITY\";\n    return _super.call(this, ActivityClient, config);\n  }\n  _createClass(rpcActivityClient, [{\n    key: \"createActivityInfo\",\n    value: function () {\n      var _createActivityInfo = _asyncToGenerator(function* (activityInfoObj) {\n        var _activityInfoObj$endT, _activityInfoObj$star;\n        var route = [];\n        activityInfoObj == null ? void 0 : activityInfoObj.routeList.forEach(function (pointObject) {\n          var _pointObject$createdA;\n          var point = new TrackPoint();\n          point.setAltitude(pointObject.altitude).setLatitude(pointObject.latitude).setLongtitude(pointObject.longtitude).setCreatedAt(new Timestamp().setSeconds(((_pointObject$createdA = pointObject.createdAt) == null ? void 0 : _pointObject$createdA.seconds) || 0)).setIsStopPoint(pointObject.isStopPoint);\n          route.push(point);\n        });\n        var activityInfo = new ActivityInfo();\n        activityInfo.setRouteList(route).setActivityNote((activityInfoObj == null ? void 0 : activityInfoObj.activityNote) || \"\").setActivityName((activityInfoObj == null ? void 0 : activityInfoObj.activityName) || \"\").setDuration((activityInfoObj == null ? void 0 : activityInfoObj.duration) || 0).setEndTime(new Timestamp().setSeconds((activityInfoObj == null ? void 0 : (_activityInfoObj$endT = activityInfoObj.endTime) == null ? void 0 : _activityInfoObj$endT.seconds) || 0)).setStartTime(new Timestamp().setSeconds((activityInfoObj == null ? void 0 : (_activityInfoObj$star = activityInfoObj.startTime) == null ? void 0 : _activityInfoObj$star.seconds) || 0)).setKcal((activityInfoObj == null ? void 0 : activityInfoObj.kcal) || 0).setTotalDistance((activityInfoObj == null ? void 0 : activityInfoObj.totalDistance) || 0).setType((activityInfoObj == null ? void 0 : activityInfoObj.type) || 0);\n        var req = new CreateActivityInfoRequest();\n        req.setActivityInfo(activityInfo);\n        return yield this.gRPCClientRequest(\"createActivityInfo\", req);\n      });\n      function createActivityInfo(_x) {\n        return _createActivityInfo.apply(this, arguments);\n      }\n      return createActivityInfo;\n    }()\n  }, {\n    key: \"listActivityInfo\",\n    value: function () {\n      var _listActivityInfo = _asyncToGenerator(function* (params) {\n        var activityType = params.activityType,\n          ascending = params.ascending,\n          limit = params.limit,\n          offset = params.offset,\n          sortBy = params.sortBy,\n          from = params.from,\n          to = params.to;\n        var req = new ListActivityInfoRequest();\n        req.setLimit(limit).setOffset(offset).setActivityType(activityType).setAscending(ascending).setLimit(limit).setSortBy(sortBy).setFrom(from ? new Timestamp().setSeconds((from == null ? void 0 : from.seconds) || 0) : undefined).setTo(to ? new Timestamp().setSeconds((to == null ? void 0 : to.seconds) || 0) : undefined);\n        return yield this.gRPCClientRequest(\"listActivityInfo\", req);\n      });\n      function listActivityInfo(_x2) {\n        return _listActivityInfo.apply(this, arguments);\n      }\n      return listActivityInfo;\n    }()\n  }, {\n    key: \"getActivityStatistic\",\n    value: function () {\n      var _getActivityStatistic = _asyncToGenerator(function* (param) {\n        var groupBy = param.groupBy,\n          type = param.type,\n          tz = param.tz,\n          from = param.from,\n          to = param.to;\n        var req = new GetActivityStatisticRequest();\n        req.setGroupBy(groupBy).setType(type).setTz(tz).setFrom(from ? new Timestamp().setSeconds((from == null ? void 0 : from.seconds) || 0) : undefined).setTo(to ? new Timestamp().setSeconds((to == null ? void 0 : to.seconds) || 0) : undefined);\n        return yield this.gRPCClientRequest(\"getActivityStatistic\", req);\n      });\n      function getActivityStatistic(_x3) {\n        return _getActivityStatistic.apply(this, arguments);\n      }\n      return getActivityStatistic;\n    }()\n  }]);\n  return rpcActivityClient;\n}(gRPCClientAbstract);\nexport default rpcActivityClient;","map":{"version":3,"names":["ActivityClient","CreateActivityInfoRequest","ListActivityInfoRequest","ActivityInfo","TrackPoint","GetActivityStatisticRequest","gRPCClientAbstract","Timestamp","rpcActivityClient","config","serviceName","activityInfoObj","route","routeList","forEach","pointObject","point","setAltitude","altitude","setLatitude","latitude","setLongtitude","longtitude","setCreatedAt","setSeconds","createdAt","seconds","setIsStopPoint","isStopPoint","push","activityInfo","setRouteList","setActivityNote","activityNote","setActivityName","activityName","setDuration","duration","setEndTime","endTime","setStartTime","startTime","setKcal","kcal","setTotalDistance","totalDistance","setType","type","req","setActivityInfo","gRPCClientRequest","params","activityType","ascending","limit","offset","sortBy","from","to","setLimit","setOffset","setActivityType","setAscending","setSortBy","setFrom","undefined","setTo","param","groupBy","tz","setGroupBy","setTz"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/utils/grpc/client/activity.ts"],"sourcesContent":["import { ActivityClient } from \"../../../lib/activity/ActivityServiceClientPb\";\n\nimport {\n  CreateActivityInfoRequest,\n  CreateActivityInfoReply,\n  ListActivityInfoRequest,\n  ListActivityInfoReply,\n  ActivityInfo,\n  TrackPoint,\n  GetActivityStatisticRequest,\n  GetActivityStatisticReply,\n} from \"../../../lib/activity/activity_pb\";\n\nimport { GRPCClientConfig } from \"../abstract/types\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nimport { Timestamp } from \"google-protobuf/google/protobuf/timestamp_pb\";\n\nclass rpcActivityClient extends gRPCClientAbstract {\n  constructor(config: GRPCClientConfig) {\n    config.serviceName = \"ACTIVITY\";\n    super(ActivityClient, config);\n  }\n\n  //   async signUp(username: string, password: string) {\n  //     const req = new SignUpRequest();\n  //     req.setUserName(username);\n  //     req.setPassword(password);\n  //     return await this.gRPCClientRequest<SignUpReply.AsObject>(\"signUp\", req);\n  //   }\n\n  async createActivityInfo(activityInfoObj: ActivityInfo.AsObject) {\n    const route: Array<TrackPoint> = [];\n    activityInfoObj?.routeList.forEach((pointObject) => {\n      const point = new TrackPoint();\n      point\n        .setAltitude(pointObject.altitude)\n        .setLatitude(pointObject.latitude)\n        .setLongtitude(pointObject.longtitude)\n        .setCreatedAt(\n          new Timestamp().setSeconds(pointObject.createdAt?.seconds || 0)\n        )\n        .setIsStopPoint(pointObject.isStopPoint);\n      route.push(point);\n    });\n\n    const activityInfo = new ActivityInfo();\n    activityInfo\n      .setRouteList(route)\n      .setActivityNote(activityInfoObj?.activityNote || \"\")\n      .setActivityName(activityInfoObj?.activityName || \"\")\n      .setDuration(activityInfoObj?.duration || 0)\n      .setEndTime(\n        new Timestamp().setSeconds(activityInfoObj?.endTime?.seconds || 0)\n      )\n      .setStartTime(\n        new Timestamp().setSeconds(activityInfoObj?.startTime?.seconds || 0)\n      )\n      .setKcal(activityInfoObj?.kcal || 0)\n      .setTotalDistance(activityInfoObj?.totalDistance || 0)\n      .setType(activityInfoObj?.type || 0);\n\n    const req = new CreateActivityInfoRequest();\n    req.setActivityInfo(activityInfo);\n    return await this.gRPCClientRequest<CreateActivityInfoReply.AsObject>(\n      \"createActivityInfo\",\n      req\n    );\n  }\n\n  async listActivityInfo(params: ListActivityInfoRequest.AsObject) {\n    const { activityType, ascending, limit, offset, sortBy, from, to } = params;\n    const req = new ListActivityInfoRequest();\n    req\n      .setLimit(limit)\n      .setOffset(offset)\n      .setActivityType(activityType)\n      .setAscending(ascending)\n      .setLimit(limit)\n      .setSortBy(sortBy)\n      .setFrom(\n        from ? new Timestamp().setSeconds(from?.seconds || 0) : undefined\n      )\n      .setTo(to ? new Timestamp().setSeconds(to?.seconds || 0) : undefined);\n    return await this.gRPCClientRequest<ListActivityInfoReply.AsObject>(\n      \"listActivityInfo\",\n      req\n    );\n  }\n\n  async getActivityStatistic(param: GetActivityStatisticRequest.AsObject) {\n    const { groupBy, type, tz, from, to } = param;\n    const req = new GetActivityStatisticRequest();\n    req\n      .setGroupBy(groupBy)\n      .setType(type)\n      .setTz(tz)\n      .setFrom(\n        from ? new Timestamp().setSeconds(from?.seconds || 0) : undefined\n      )\n      .setTo(to ? new Timestamp().setSeconds(to?.seconds || 0) : undefined);\n\n    return await this.gRPCClientRequest<GetActivityStatisticReply.AsObject>(\n      \"getActivityStatistic\",\n      req\n    );\n  }\n}\n\nexport default rpcActivityClient;\n"],"mappings":";;;;;;;;AAAA,SAASA,cAAc;AAEvB,SACEC,yBAAyB,EAEzBC,uBAAuB,EAEvBC,YAAY,EACZC,UAAU,EACVC,2BAA2B;AAK7B,OAAOC,kBAAkB;AACzB,SAASC,SAAS,QAAQ,8CAA8C;AAAC,IAEnEC,iBAAiB;EAAA;EAAA;EACrB,2BAAYC,MAAwB,EAAE;IAAA;IACpCA,MAAM,CAACC,WAAW,GAAG,UAAU;IAAC,yBAC1BV,cAAc,EAAES,MAAM;EAC9B;EAAC;IAAA;IAAA;MAAA,4CASD,WAAyBE,eAAsC,EAAE;QAAA;QAC/D,IAAMC,KAAwB,GAAG,EAAE;QACnCD,eAAe,oBAAfA,eAAe,CAAEE,SAAS,CAACC,OAAO,CAAC,UAACC,WAAW,EAAK;UAAA;UAClD,IAAMC,KAAK,GAAG,IAAIZ,UAAU,EAAE;UAC9BY,KAAK,CACFC,WAAW,CAACF,WAAW,CAACG,QAAQ,CAAC,CACjCC,WAAW,CAACJ,WAAW,CAACK,QAAQ,CAAC,CACjCC,aAAa,CAACN,WAAW,CAACO,UAAU,CAAC,CACrCC,YAAY,CACX,IAAIhB,SAAS,EAAE,CAACiB,UAAU,CAAC,0BAAAT,WAAW,CAACU,SAAS,qBAArB,sBAAuBC,OAAO,KAAI,CAAC,CAAC,CAChE,CACAC,cAAc,CAACZ,WAAW,CAACa,WAAW,CAAC;UAC1ChB,KAAK,CAACiB,IAAI,CAACb,KAAK,CAAC;QACnB,CAAC,CAAC;QAEF,IAAMc,YAAY,GAAG,IAAI3B,YAAY,EAAE;QACvC2B,YAAY,CACTC,YAAY,CAACnB,KAAK,CAAC,CACnBoB,eAAe,CAAC,CAAArB,eAAe,oBAAfA,eAAe,CAAEsB,YAAY,KAAI,EAAE,CAAC,CACpDC,eAAe,CAAC,CAAAvB,eAAe,oBAAfA,eAAe,CAAEwB,YAAY,KAAI,EAAE,CAAC,CACpDC,WAAW,CAAC,CAAAzB,eAAe,oBAAfA,eAAe,CAAE0B,QAAQ,KAAI,CAAC,CAAC,CAC3CC,UAAU,CACT,IAAI/B,SAAS,EAAE,CAACiB,UAAU,CAAC,CAAAb,eAAe,6CAAfA,eAAe,CAAE4B,OAAO,qBAAxB,sBAA0Bb,OAAO,KAAI,CAAC,CAAC,CACnE,CACAc,YAAY,CACX,IAAIjC,SAAS,EAAE,CAACiB,UAAU,CAAC,CAAAb,eAAe,6CAAfA,eAAe,CAAE8B,SAAS,qBAA1B,sBAA4Bf,OAAO,KAAI,CAAC,CAAC,CACrE,CACAgB,OAAO,CAAC,CAAA/B,eAAe,oBAAfA,eAAe,CAAEgC,IAAI,KAAI,CAAC,CAAC,CACnCC,gBAAgB,CAAC,CAAAjC,eAAe,oBAAfA,eAAe,CAAEkC,aAAa,KAAI,CAAC,CAAC,CACrDC,OAAO,CAAC,CAAAnC,eAAe,oBAAfA,eAAe,CAAEoC,IAAI,KAAI,CAAC,CAAC;QAEtC,IAAMC,GAAG,GAAG,IAAI/C,yBAAyB,EAAE;QAC3C+C,GAAG,CAACC,eAAe,CAACnB,YAAY,CAAC;QACjC,aAAa,IAAI,CAACoB,iBAAiB,CACjC,oBAAoB,EACpBF,GAAG,CACJ;MACH,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,0CAED,WAAuBG,MAAwC,EAAE;QAC/D,IAAQC,YAAY,GAAiDD,MAAM,CAAnEC,YAAY;UAAEC,SAAS,GAAsCF,MAAM,CAArDE,SAAS;UAAEC,KAAK,GAA+BH,MAAM,CAA1CG,KAAK;UAAEC,MAAM,GAAuBJ,MAAM,CAAnCI,MAAM;UAAEC,MAAM,GAAeL,MAAM,CAA3BK,MAAM;UAAEC,IAAI,GAASN,MAAM,CAAnBM,IAAI;UAAEC,EAAE,GAAKP,MAAM,CAAbO,EAAE;QAChE,IAAMV,GAAG,GAAG,IAAI9C,uBAAuB,EAAE;QACzC8C,GAAG,CACAW,QAAQ,CAACL,KAAK,CAAC,CACfM,SAAS,CAACL,MAAM,CAAC,CACjBM,eAAe,CAACT,YAAY,CAAC,CAC7BU,YAAY,CAACT,SAAS,CAAC,CACvBM,QAAQ,CAACL,KAAK,CAAC,CACfS,SAAS,CAACP,MAAM,CAAC,CACjBQ,OAAO,CACNP,IAAI,GAAG,IAAIlD,SAAS,EAAE,CAACiB,UAAU,CAAC,CAAAiC,IAAI,oBAAJA,IAAI,CAAE/B,OAAO,KAAI,CAAC,CAAC,GAAGuC,SAAS,CAClE,CACAC,KAAK,CAACR,EAAE,GAAG,IAAInD,SAAS,EAAE,CAACiB,UAAU,CAAC,CAAAkC,EAAE,oBAAFA,EAAE,CAAEhC,OAAO,KAAI,CAAC,CAAC,GAAGuC,SAAS,CAAC;QACvE,aAAa,IAAI,CAACf,iBAAiB,CACjC,kBAAkB,EAClBF,GAAG,CACJ;MACH,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,8CAED,WAA2BmB,KAA2C,EAAE;QACtE,IAAQC,OAAO,GAAyBD,KAAK,CAArCC,OAAO;UAAErB,IAAI,GAAmBoB,KAAK,CAA5BpB,IAAI;UAAEsB,EAAE,GAAeF,KAAK,CAAtBE,EAAE;UAAEZ,IAAI,GAASU,KAAK,CAAlBV,IAAI;UAAEC,EAAE,GAAKS,KAAK,CAAZT,EAAE;QACnC,IAAMV,GAAG,GAAG,IAAI3C,2BAA2B,EAAE;QAC7C2C,GAAG,CACAsB,UAAU,CAACF,OAAO,CAAC,CACnBtB,OAAO,CAACC,IAAI,CAAC,CACbwB,KAAK,CAACF,EAAE,CAAC,CACTL,OAAO,CACNP,IAAI,GAAG,IAAIlD,SAAS,EAAE,CAACiB,UAAU,CAAC,CAAAiC,IAAI,oBAAJA,IAAI,CAAE/B,OAAO,KAAI,CAAC,CAAC,GAAGuC,SAAS,CAClE,CACAC,KAAK,CAACR,EAAE,GAAG,IAAInD,SAAS,EAAE,CAACiB,UAAU,CAAC,CAAAkC,EAAE,oBAAFA,EAAE,CAAEhC,OAAO,KAAI,CAAC,CAAC,GAAGuC,SAAS,CAAC;QAEvE,aAAa,IAAI,CAACf,iBAAiB,CACjC,sBAAsB,EACtBF,GAAG,CACJ;MACH,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EAxF6B1C,kBAAkB;AA2FlD,eAAeE,iBAAiB"},"metadata":{},"sourceType":"module"}