{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text } from \"react-native-paper\";\nimport { useAppTheme } from \"../../theme\";\nimport { useCallback, useState } from \"react\";\nimport UpperRightMenu from \"../../comp/UpperRightMenu\";\nimport { useFocusEffect, useIsFocused } from \"@react-navigation/native\";\nimport { baseStyles } from \"../baseStyle\";\nimport ActivityListItem from \"./comp/ActivityListItem\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { listActivityInfoThunk } from \"../../redux/features/activityList/thunk\";\nimport { ActivitySortBy, ActivityType } from \"../../lib/activity/activity_pb\";\nimport { isActivityListLoading, selectActivityList } from \"../../redux/features/activityList/slice\";\nimport { useSelector } from \"react-redux\";\nimport StatisticSection from \"./comp/StatisticSection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get(\"window\").width;\nexport default function Activity(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var dispatch = useAppDispatch();\n  var theme = useAppTheme();\n  var isFocused = useIsFocused();\n  var _useState = useState(\"week\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    filterByValue = _useState2[0],\n    setFilterByValue = _useState2[1];\n  var _useAppSelector = useAppSelector(selectActivityList),\n    activityList = _useAppSelector.activityList;\n  var isLoading = useSelector(isActivityListLoading);\n  var fetchListActivity = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$dispatch = yield dispatch(listActivityInfoThunk({\n          activityType: ActivityType.ACTIVITY_TYPE_UNSPECIFIED,\n          ascending: false,\n          limit: 10,\n          offset: 0,\n          sortBy: ActivitySortBy.ACTIVITY_SORT_BY_END_TIME\n        })),\n        payload = _yield$dispatch.payload;\n    });\n    return function fetchListActivity() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(useCallback(function () {\n    fetchListActivity();\n  }, []));\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: baseStyles(theme).homeContainer,\n      children: _jsx(View, {\n        style: baseStyles(theme).innerWrapper,\n        children: _jsxs(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          children: [_jsx(StatisticSection, {}), _jsxs(View, {\n            style: styles(theme).recentActivityContainer,\n            children: [_jsx(Text, {\n              variant: \"headlineSmall\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: \"Recent activities\"\n            }), activityList.slice(0, 3).map(function (activity) {\n              return _jsx(ActivityListItem, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"ActivityDetail\", {\n                    activityId: activity.id\n                  });\n                },\n                activityInfo: activity\n              }, activity.id);\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: function onPress() {\n                return navigation.navigate(\"ActivityList\", {});\n              },\n              style: {\n                marginTop: 10\n              },\n              loading: isLoading,\n              children: \"View all activities\"\n            })]\n          })]\n        })\n      })\n    }), isFocused && _jsx(UpperRightMenu, {\n      menuList: [{\n        menuItem: \"act 1\",\n        callback: function callback() {\n          console.log(\"menu 1 clicked\");\n        },\n        icon: \"egg\"\n      }, {\n        menuItem: \"act 2\",\n        callback: function callback() {}\n      }, {\n        menuItem: \"act 3\",\n        callback: function callback() {}\n      }]\n    })]\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    recentActivityContainer: {\n      paddingVertical: 20\n    }\n  });\n};","map":{"version":3,"names":["Button","Text","useAppTheme","useCallback","useState","UpperRightMenu","useFocusEffect","useIsFocused","baseStyles","ActivityListItem","useAppDispatch","useAppSelector","listActivityInfoThunk","ActivitySortBy","ActivityType","isActivityListLoading","selectActivityList","useSelector","StatisticSection","windowWidth","Dimensions","get","width","Activity","navigation","route","dispatch","theme","isFocused","filterByValue","setFilterByValue","activityList","isLoading","fetchListActivity","activityType","ACTIVITY_TYPE_UNSPECIFIED","ascending","limit","offset","sortBy","ACTIVITY_SORT_BY_END_TIME","payload","homeContainer","innerWrapper","styles","recentActivityContainer","fontWeight","slice","map","activity","navigate","activityId","id","marginTop","menuItem","callback","console","log","icon","StyleSheet","create","paddingVertical"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Activity/ActivityHome.tsx"],"sourcesContent":["import { Dimensions, ScrollView, StyleSheet, View } from \"react-native\";\nimport { Button, IconButton, SegmentedButtons, Text } from \"react-native-paper\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { AppTheme, useAppTheme } from \"../../theme\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport UpperRightMenu from \"../../comp/UpperRightMenu\";\nimport { useFocusEffect, useIsFocused } from \"@react-navigation/native\";\n\nimport { baseStyles } from \"../baseStyle\";\nimport { BarChart } from \"react-native-chart-kit\";\nimport ActivityListItem from \"./comp/ActivityListItem\";\nimport { RootHomeTabsParamList } from \"../../navigators/HomeTab\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { listActivityInfoThunk } from \"../../redux/features/activityList/thunk\";\nimport { ActivitySortBy, ActivityType } from \"../../lib/activity/activity_pb\";\nimport {\n  isActivityListLoading,\n  selectActivityList,\n} from \"../../redux/features/activityList/slice\";\nimport { useSelector } from \"react-redux\";\nimport StatisticSection from \"./comp/StatisticSection\";\nimport { getMeThunk } from \"../../redux/features/user/thunk\";\n\nconst windowWidth = Dimensions.get(\"window\").width;\n\nexport default function Activity({\n  navigation,\n  route,\n}: NativeStackScreenProps<RootHomeTabsParamList, \"ActivityHome\">) {\n  const dispatch = useAppDispatch();\n  const theme = useAppTheme();\n  const isFocused = useIsFocused();\n  const [filterByValue, setFilterByValue] = useState(\"week\");\n  const { activityList } = useAppSelector(selectActivityList);\n  const isLoading = useSelector(isActivityListLoading);\n  const fetchListActivity = async () => {\n    const { payload } = await dispatch(\n      listActivityInfoThunk({\n        activityType: ActivityType.ACTIVITY_TYPE_UNSPECIFIED,\n        ascending: false,\n        limit: 10,\n        offset: 0,\n        sortBy: ActivitySortBy.ACTIVITY_SORT_BY_END_TIME,\n      })\n    );\n  };\n\n  useFocusEffect(\n    useCallback(() => {\n      fetchListActivity();\n    }, [])\n  );\n  return (\n    <>\n      <View style={baseStyles(theme).homeContainer}>\n        <View style={baseStyles(theme).innerWrapper}>\n          <ScrollView showsVerticalScrollIndicator={false}>\n            <StatisticSection />\n            <View style={styles(theme).recentActivityContainer}>\n              <Text variant=\"headlineSmall\" style={{ fontWeight: \"bold\" }}>\n                Recent activities\n              </Text>\n              {activityList.slice(0, 3).map((activity) => {\n                return (\n                  <ActivityListItem\n                    key={activity.id}\n                    onPress={() =>\n                      navigation.navigate(\"ActivityDetail\", {\n                        activityId: activity.id,\n                      })\n                    }\n                    activityInfo={activity}\n                  />\n                );\n              })}\n              <Button\n                mode=\"contained\"\n                onPress={() => navigation.navigate(\"ActivityList\", {})}\n                style={{ marginTop: 10 }}\n                loading={isLoading}\n              >\n                View all activities\n              </Button>\n            </View>\n          </ScrollView>\n        </View>\n      </View>\n      {isFocused && (\n        <UpperRightMenu\n          menuList={[\n            {\n              menuItem: \"act 1\",\n              callback: () => {\n                console.log(\"menu 1 clicked\");\n              },\n              icon: \"egg\",\n            },\n            {\n              menuItem: \"act 2\",\n              callback: () => {},\n            },\n            {\n              menuItem: \"act 3\",\n              callback: () => {},\n            },\n          ]}\n        />\n      )}\n    </>\n  );\n}\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    recentActivityContainer: {\n      paddingVertical: 20,\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}