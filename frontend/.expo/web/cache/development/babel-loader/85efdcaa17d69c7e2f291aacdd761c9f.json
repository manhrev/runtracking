{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"action\", \"duration\", \"onDismiss\", \"children\", \"elevation\", \"wrapperStyle\", \"style\", \"theme\"],\n  _excluded2 = [\"style\", \"label\", \"onPress\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nimport Button from \"./Button/Button\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n    action = _ref.action,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n    onDismiss = _ref.onDismiss,\n    children = _ref.children,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,\n    wrapperStyle = _ref.wrapperStyle,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(0.0)),\n    opacity = _React$useRef.current;\n  var _React$useState = React.useState(!visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hidden = _React$useState2[0],\n    setHidden = _React$useState2[1];\n  var hideTimeout = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n          if (!isInfinity) {\n            hideTimeout.current = setTimeout(onDismiss, duration);\n          }\n        }\n      });\n    } else {\n      if (hideTimeout.current) {\n        clearTimeout(hideTimeout.current);\n      }\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) {\n          setHidden(true);\n        }\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n  var colors = theme.colors,\n    roundness = theme.roundness,\n    isV3 = theme.isV3;\n  if (hidden) {\n    return null;\n  }\n  var _ref4 = action || {},\n    actionStyle = _ref4.style,\n    actionLabel = _ref4.label,\n    onPressAction = _ref4.onPress,\n    actionProps = _objectWithoutProperties(_ref4, _excluded2);\n  var marginRight = action ? 0 : 16;\n  var textColor = theme.isV3 ? theme.colors.inversePrimary : theme.colors.accent;\n  var renderChildrenWithWrapper = function renderChildrenWithWrapper() {\n    var viewStyles = [styles.content, {\n      marginRight: marginRight,\n      color: colors === null || colors === void 0 ? void 0 : colors.surface\n    }];\n    if (typeof children === 'string') {\n      return React.createElement(Text, {\n        style: viewStyles\n      }, children);\n    }\n    return React.createElement(View, {\n      style: viewStyles\n    }, React.createElement(View, null, children));\n  };\n  return React.createElement(SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperStyle]\n  }, React.createElement(Surface, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    style: [!isV3 && styles.elevation, styles.container, {\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, {\n      backgroundColor: colors === null || colors === void 0 ? void 0 : colors.onSurface\n    }, style]\n  }, isV3 && {\n    elevation: elevation\n  }, rest), renderChildrenWithWrapper(), action ? React.createElement(Button, _extends({\n    onPress: function onPress() {\n      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction();\n      onDismiss();\n    },\n    style: [styles.button, actionStyle],\n    textColor: textColor,\n    compact: true,\n    mode: \"text\"\n  }, actionProps), actionLabel) : null));\n};\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flex: 1\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6\n  },\n  elevation: {\n    elevation: 6\n  }\n});\nexport default withInternalTheme(Snackbar);","map":{"version":3,"sources":["Snackbar.tsx"],"names":["React","withInternalTheme","Button","Surface","Text","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","visible","action","duration","onDismiss","children","elevation","wrapperStyle","style","theme","rest","current","opacity","useRef","Animated","Value","hidden","setHidden","useState","hideTimeout","undefined","scale","animation","useEffect","clearTimeout","useLayoutEffect","timing","toValue","easing","Easing","out","ease","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","colors","roundness","isV3","actionStyle","label","actionLabel","onPress","onPressAction","actionProps","marginRight","textColor","inversePrimary","accent","renderChildrenWithWrapper","viewStyles","styles","content","color","surface","wrapper","container","borderRadius","transform","interpolate","inputRange","outputRange","backgroundColor","onSurface","button","StyleSheet","create","position","bottom","width","flexDirection","justifyContent","alignItems","margin","marginLeft","marginVertical","flex","marginHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport Button from './Button/Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: Omit<React.ComponentProps<typeof Button>, 'children'> & {\n    label: string;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Snackbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  elevation = 2,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const [hidden, setHidden] = React.useState<boolean>(!visible);\n\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (!isInfinity) {\n            hideTimeout.current = setTimeout(\n              onDismiss,\n              duration\n            ) as unknown as NodeJS.Timeout;\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) {\n        clearTimeout(hideTimeout.current);\n      }\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          setHidden(true);\n        }\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness, isV3 } = theme;\n\n  if (hidden) {\n    return null;\n  }\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    ...actionProps\n  } = action || {};\n\n  const marginRight = action ? 0 : 16;\n  const textColor = theme.isV3\n    ? theme.colors.inversePrimary\n    : theme.colors.accent;\n\n  const renderChildrenWithWrapper = () => {\n    const viewStyles = [\n      styles.content,\n      { marginRight, color: colors?.surface },\n    ];\n\n    if (typeof children === 'string') {\n      return <Text style={viewStyles}>{children}</Text>;\n    }\n\n    return (\n      <View style={viewStyles}>\n        {/* View is added to allow multiple lines support for Text component as children */}\n        <View>{children}</View>\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            !isV3 && styles.elevation,\n            styles.container,\n            {\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            { backgroundColor: colors?.onSurface },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...(isV3 && { elevation })}\n        {...rest}\n      >\n        {renderChildrenWithWrapper()}\n        {action ? (\n          <Button\n            onPress={() => {\n              onPressAction?.();\n              onDismiss();\n            }}\n            style={[styles.button, actionStyle]}\n            textColor={textColor}\n            compact\n            mode=\"text\"\n            {...actionProps}\n          >\n            {actionLabel}\n          </Button>\n        ) : null}\n      </Surface>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n  elevation: {\n    elevation: 6,\n  },\n});\n\nexport default withInternalTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}