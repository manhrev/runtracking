{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { NotificationClient } from \"../../../lib/notification/NotificationServiceClientPb\";\nimport { ExpoPushTokenRequest, ListNotificationInfoRequest, IdRequest, UpdateNotificationInfoRequest } from \"../../../lib/notification/notification_pb\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nvar rpcNotificationClient = function (_gRPCClientAbstract) {\n  _inherits(rpcNotificationClient, _gRPCClientAbstract);\n  var _super = _createSuper(rpcNotificationClient);\n  function rpcNotificationClient(config) {\n    _classCallCheck(this, rpcNotificationClient);\n    config.serviceName = \"NOTIFICATION\";\n    return _super.call(this, NotificationClient, config);\n  }\n  _createClass(rpcNotificationClient, [{\n    key: \"checkIfExistOrSaveExpoPushToken\",\n    value: function () {\n      var _checkIfExistOrSaveExpoPushToken = _asyncToGenerator(function* (param) {\n        var req = new ExpoPushTokenRequest();\n        req.setExpoPushToken(param.expoPushToken);\n        req.setUserId(param.userId);\n        return yield this.gRPCClientRequest(\"checkIfExistOrSaveExpoPushToken\", req);\n      });\n      function checkIfExistOrSaveExpoPushToken(_x) {\n        return _checkIfExistOrSaveExpoPushToken.apply(this, arguments);\n      }\n      return checkIfExistOrSaveExpoPushToken;\n    }()\n  }, {\n    key: \"removeExpoPushToken\",\n    value: function () {\n      var _removeExpoPushToken = _asyncToGenerator(function* (param) {\n        var req = new ExpoPushTokenRequest();\n        req.setExpoPushToken(param.expoPushToken);\n        req.setUserId(param.userId);\n        return yield this.gRPCClientRequest(\"removeExpoPushToken\", req);\n      });\n      function removeExpoPushToken(_x2) {\n        return _removeExpoPushToken.apply(this, arguments);\n      }\n      return removeExpoPushToken;\n    }()\n  }, {\n    key: \"listNotificationInfo\",\n    value: function () {\n      var _listNotificationInfo = _asyncToGenerator(function* (param) {\n        var limit = param.limit,\n          offset = param.offset;\n        var req = new ListNotificationInfoRequest();\n        req.setLimit(limit).setOffset(offset);\n        return yield this.gRPCClientRequest(\"listNotificationInfo\", req);\n      });\n      function listNotificationInfo(_x3) {\n        return _listNotificationInfo.apply(this, arguments);\n      }\n      return listNotificationInfo;\n    }()\n  }, {\n    key: \"deleteNotificationInfo\",\n    value: function () {\n      var _deleteNotificationInfo = _asyncToGenerator(function* (param) {\n        var id = param.id;\n        var req = new IdRequest();\n        req.setId(id);\n        return yield this.gRPCClientRequest(\"deleteNotificationInfo\", req);\n      });\n      function deleteNotificationInfo(_x4) {\n        return _deleteNotificationInfo.apply(this, arguments);\n      }\n      return deleteNotificationInfo;\n    }()\n  }, {\n    key: \"updateNotificationInfo\",\n    value: function () {\n      var _updateNotificationInfo = _asyncToGenerator(function* (param) {\n        var id = param.id,\n          isSeen = param.isSeen;\n        var req = new UpdateNotificationInfoRequest();\n        req.setId(id).setIsSeen(isSeen);\n        return yield this.gRPCClientRequest(\"updateNotificationInfo\", req);\n      });\n      function updateNotificationInfo(_x5) {\n        return _updateNotificationInfo.apply(this, arguments);\n      }\n      return updateNotificationInfo;\n    }()\n  }]);\n  return rpcNotificationClient;\n}(gRPCClientAbstract);\nexport default rpcNotificationClient;","map":{"version":3,"names":["NotificationClient","ExpoPushTokenRequest","ListNotificationInfoRequest","IdRequest","UpdateNotificationInfoRequest","gRPCClientAbstract","rpcNotificationClient","config","serviceName","param","req","setExpoPushToken","expoPushToken","setUserId","userId","gRPCClientRequest","limit","offset","setLimit","setOffset","id","setId","isSeen","setIsSeen"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/utils/grpc/client/notification.ts"],"sourcesContent":["import { NotificationClient } from \"../../../lib/notification/NotificationServiceClientPb\";\nimport {\n PushNotiRequest,\n ExpoPushTokenRequest,\n ListNotificationInfoRequest,\n ListNotificationInfoReply,\n IdRequest,\n IdReply,\n UpdateNotificationInfoRequest,\n UpdateNotificationInfoReply\n} from \"../../../lib/notification/notification_pb\";\n\nimport { GRPCClientConfig } from \"../abstract/types\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nimport { Empty } from \"google-protobuf/google/protobuf/empty_pb\";\nimport { ListActivityInfoReply } from \"../../../lib/activity/activity_pb\";\n\nclass rpcNotificationClient extends gRPCClientAbstract {\n  constructor(config: GRPCClientConfig) {\n    config.serviceName = \"NOTIFICATION\";\n    super(NotificationClient, config);\n  }\n\n  async checkIfExistOrSaveExpoPushToken(param: ExpoPushTokenRequest.AsObject) {\n    const req = new ExpoPushTokenRequest()\n    req.setExpoPushToken(param.expoPushToken)\n    req.setUserId(param.userId)\n    return await this.gRPCClientRequest<Empty.AsObject>(\"checkIfExistOrSaveExpoPushToken\", req);\n  }\n\n  async removeExpoPushToken(param: ExpoPushTokenRequest.AsObject) {\n    const req = new ExpoPushTokenRequest()\n    req.setExpoPushToken(param.expoPushToken)\n    req.setUserId(param.userId)\n    return await this.gRPCClientRequest<Empty.AsObject>(\"removeExpoPushToken\", req);\n  }\n\n  async listNotificationInfo(param: ListNotificationInfoRequest.AsObject) {\n    const{limit, offset, } = param\n    const req = new ListNotificationInfoRequest()\n    req.setLimit(limit)\n      .setOffset(offset)\n\n    return await this.gRPCClientRequest<ListNotificationInfoReply.AsObject>(\"listNotificationInfo\", req);\n  }\n\n  async deleteNotificationInfo(param: IdRequest.AsObject) {\n    const{id } = param\n    const req = new IdRequest()\n    req.setId(id)\n\n    return await this.gRPCClientRequest<IdReply.AsObject>(\"deleteNotificationInfo\", req);\n  }\n\n  async updateNotificationInfo(param: UpdateNotificationInfoRequest.AsObject) {\n    const{id, isSeen} = param\n    const req = new UpdateNotificationInfoRequest()\n    req.setId(id).setIsSeen(isSeen)\n\n    return await this.gRPCClientRequest<UpdateNotificationInfoReply.AsObject>(\"updateNotificationInfo\", req);\n  }\n\n\n//   async logOut() {\n//     const req = new Empty();\n//     return await this.gRPCClientRequest<Empty.AsObject>(\"logOut\", req);\n//   }\n\n//   async getMe() {\n//     const req = new Empty();\n//     return await this.gRPCClientRequest<MeReply.AsObject>(\"me\", req);\n//   }\n\n//   async updateHealthInfo(param: HealthRecordRequest.AsObject) {\n//     const req = new HealthRecordRequest();\n//     req.setAge(param.age);\n//     req.setHeight(param.height);\n//     req.setWeight(param.weight);\n//     return await this.gRPCClientRequest<Empty.AsObject>(\"setHealthRecord\", req);\n//   }\n}\n\nexport default rpcNotificationClient;"],"mappings":";;;;;;;;AAAA,SAASA,kBAAkB;AAC3B,SAECC,oBAAoB,EACpBC,2BAA2B,EAE3BC,SAAS,EAETC,6BAA6B;AAK9B,OAAOC,kBAAkB;AAA+B,IAIlDC,qBAAqB;EAAA;EAAA;EACzB,+BAAYC,MAAwB,EAAE;IAAA;IACpCA,MAAM,CAACC,WAAW,GAAG,cAAc;IAAC,yBAC9BR,kBAAkB,EAAEO,MAAM;EAClC;EAAC;IAAA;IAAA;MAAA,yDAED,WAAsCE,KAAoC,EAAE;QAC1E,IAAMC,GAAG,GAAG,IAAIT,oBAAoB,EAAE;QACtCS,GAAG,CAACC,gBAAgB,CAACF,KAAK,CAACG,aAAa,CAAC;QACzCF,GAAG,CAACG,SAAS,CAACJ,KAAK,CAACK,MAAM,CAAC;QAC3B,aAAa,IAAI,CAACC,iBAAiB,CAAiB,iCAAiC,EAAEL,GAAG,CAAC;MAC7F,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,6CAED,WAA0BD,KAAoC,EAAE;QAC9D,IAAMC,GAAG,GAAG,IAAIT,oBAAoB,EAAE;QACtCS,GAAG,CAACC,gBAAgB,CAACF,KAAK,CAACG,aAAa,CAAC;QACzCF,GAAG,CAACG,SAAS,CAACJ,KAAK,CAACK,MAAM,CAAC;QAC3B,aAAa,IAAI,CAACC,iBAAiB,CAAiB,qBAAqB,EAAEL,GAAG,CAAC;MACjF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,8CAED,WAA2BD,KAA2C,EAAE;QACtE,IAAMO,KAAK,GAAcP,KAAK,CAAxBO,KAAK;UAAEC,MAAM,GAAMR,KAAK,CAAjBQ,MAAM;QACnB,IAAMP,GAAG,GAAG,IAAIR,2BAA2B,EAAE;QAC7CQ,GAAG,CAACQ,QAAQ,CAACF,KAAK,CAAC,CAChBG,SAAS,CAACF,MAAM,CAAC;QAEpB,aAAa,IAAI,CAACF,iBAAiB,CAAqC,sBAAsB,EAAEL,GAAG,CAAC;MACtG,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gDAED,WAA6BD,KAAyB,EAAE;QACtD,IAAMW,EAAE,GAAKX,KAAK,CAAZW,EAAE;QACR,IAAMV,GAAG,GAAG,IAAIP,SAAS,EAAE;QAC3BO,GAAG,CAACW,KAAK,CAACD,EAAE,CAAC;QAEb,aAAa,IAAI,CAACL,iBAAiB,CAAmB,wBAAwB,EAAEL,GAAG,CAAC;MACtF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gDAED,WAA6BD,KAA6C,EAAE;QAC1E,IAAMW,EAAE,GAAYX,KAAK,CAAnBW,EAAE;UAAEE,MAAM,GAAIb,KAAK,CAAfa,MAAM;QAChB,IAAMZ,GAAG,GAAG,IAAIN,6BAA6B,EAAE;QAC/CM,GAAG,CAACW,KAAK,CAACD,EAAE,CAAC,CAACG,SAAS,CAACD,MAAM,CAAC;QAE/B,aAAa,IAAI,CAACP,iBAAiB,CAAuC,wBAAwB,EAAEL,GAAG,CAAC;MAC1G,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EA3CiCL,kBAAkB;AAiEtD,eAAeC,qBAAqB"},"metadata":{},"sourceType":"module"}