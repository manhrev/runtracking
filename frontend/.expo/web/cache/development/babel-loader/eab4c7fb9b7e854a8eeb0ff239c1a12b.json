{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusCode as grpcStatusCode } from \"grpc-web\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var KEY_ACCESS_TOKEN = \"accessToken\";\nexport var QUERY_PARAM_ACCESS_TOKEN = \"token\";\nexport var EXPO_PUSH_TOKEN = \"expoPushToken\";\nexport var IGNORE_TOAST_CODES = [grpcStatusCode.UNAUTHENTICATED];\nvar gRPCClientAbstract = function () {\n  function gRPCClientAbstract(Client, config) {\n    _classCallCheck(this, gRPCClientAbstract);\n    this.client = null;\n    this.clientName = \"\";\n    this.clientName = (Client == null ? void 0 : Client.name) || \"NoClientName\";\n    this.client = new Client(config.hostname);\n    this.onError = config.onError;\n    this.serviceName = config.serviceName || \"UNNAMED\";\n  }\n  _createClass(gRPCClientAbstract, [{\n    key: \"logFuncName\",\n    value: function logFuncName(funcName) {\n      return this.clientName + \".\" + funcName;\n    }\n  }, {\n    key: \"gRPCClientRequest\",\n    value: function () {\n      var _gRPCClientRequest = _asyncToGenerator(function* (func, request) {\n        var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var access_token = \"\";\n        try {\n          var token = yield AsyncStorage.getItem(KEY_ACCESS_TOKEN);\n          if (token != null) {\n            access_token = token;\n          }\n        } catch (e) {\n          console.log(\"Cannot connect to async storage\");\n        }\n        try {\n          option = _objectSpread(_objectSpread({}, option), {}, {\n            Authorization: \"Bearer \" + access_token\n          });\n          console.log(\"%c gRPCClientRequest -> [\" + this.logFuncName(func) + \"] -> REQUEST:\", \"background-color: #deeb34; color: #000; font-size: 14px\");\n          console.log(\">>> request:\", request.toObject());\n          console.log(\">>> option:\", option);\n          var response = yield this.client[func](request, option);\n          console.log(\"%c>>>>> gRPCClientResponse -> [\" + this.logFuncName(func) + \"] -> SUCCESS:\", \"background-color: #23d947; color: #000; font-size: 14px\", response.toObject());\n          return {\n            error: null,\n            response: response.toObject()\n          };\n        } catch (error) {\n          switch (error == null ? void 0 : error.code) {\n            case grpcStatusCode.UNAUTHENTICATED:\n              console.log(\"%c>>>>> gRPCClientResponse -> [\" + this.logFuncName(func) + \"] -> ERROR -> UNAUTHENTICATED: \", \"background-color: #c0392b; color: #000; font-size: 14px\", error);\n              break;\n            case grpcStatusCode.UNKNOWN:\n            case grpcStatusCode.UNIMPLEMENTED:\n            case grpcStatusCode.INVALID_ARGUMENT:\n            case grpcStatusCode.NOT_FOUND:\n              console.log(\"%c>>>>> gRPCClientResponse -> [\" + this.logFuncName(func) + \"] -> ERROR: \", \"background-color: #c0392b; color: #000; font-size: 14px\", error);\n              break;\n            default:\n              console.log(\"%c>>>>> gRPCClientResponse  -> [\" + this.logFuncName(func) + \"] -> ERROR: \", \"background-color: #c0392b; color: #000; font-size: 14px\", error);\n              break;\n          }\n          this.onError && this.onError(error, this.serviceName);\n          return {\n            error: error,\n            response: null\n          };\n        }\n      });\n      function gRPCClientRequest(_x, _x2) {\n        return _gRPCClientRequest.apply(this, arguments);\n      }\n      return gRPCClientRequest;\n    }()\n  }]);\n  return gRPCClientAbstract;\n}();\nexport default gRPCClientAbstract;","map":{"version":3,"names":["StatusCode","grpcStatusCode","AsyncStorage","KEY_ACCESS_TOKEN","QUERY_PARAM_ACCESS_TOKEN","EXPO_PUSH_TOKEN","IGNORE_TOAST_CODES","UNAUTHENTICATED","gRPCClientAbstract","Client","config","client","clientName","name","hostname","onError","serviceName","funcName","func","request","option","access_token","token","getItem","e","console","log","Authorization","logFuncName","toObject","response","error","code","UNKNOWN","UNIMPLEMENTED","INVALID_ARGUMENT","NOT_FOUND"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/utils/grpc/abstract/gRPCClient.ts"],"sourcesContent":["import { StatusCode as grpcStatusCode } from \"grpc-web\";\n\nimport { GRPCClientResponse, ErrorHandler, GRPCClientConfig } from \"./types\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const KEY_ACCESS_TOKEN = \"accessToken\";\nexport const QUERY_PARAM_ACCESS_TOKEN = \"token\";\nexport const EXPO_PUSH_TOKEN = \"expoPushToken\"\nexport const IGNORE_TOAST_CODES = [grpcStatusCode.UNAUTHENTICATED];\n\nclass gRPCClientAbstract {\n  client: any = null;\n  clientName: string = \"\";\n  serviceName: string;\n  onError?: ErrorHandler;\n\n  constructor(Client: any, config: GRPCClientConfig) {\n    this.clientName = Client?.name || \"NoClientName\";\n    this.client = new Client(config.hostname);\n    this.onError = config.onError;\n    this.serviceName = config.serviceName || \"UNNAMED\";\n  }\n\n  logFuncName(funcName: string) {\n    return `${this.clientName}.${funcName}`;\n  }\n\n  async gRPCClientRequest<T>(\n    func: string,\n    request: any,\n    option: any = {}\n  ): Promise<GRPCClientResponse<T>> {\n    var access_token = \"\";\n    try {\n      const token = await AsyncStorage.getItem(KEY_ACCESS_TOKEN);\n      if (token != null) {\n        access_token = token;\n      }\n    } catch (e) {\n      console.log(\"Cannot connect to async storage\");\n    }\n\n    try {\n      option = { ...option, Authorization: `Bearer ${access_token}` };\n\n      console.log(\n        `%c gRPCClientRequest -> [${this.logFuncName(func)}] -> REQUEST:`,\n        \"background-color: #deeb34; color: #000; font-size: 14px\"\n      );\n      console.log(\">>> request:\", request.toObject());\n      console.log(\">>> option:\", option);\n\n      const response = await this.client[func](request, option);\n\n      console.log(\n        `%c>>>>> gRPCClientResponse -> [${this.logFuncName(func)}] -> SUCCESS:`,\n        \"background-color: #23d947; color: #000; font-size: 14px\",\n        response.toObject()\n      );\n\n      return {\n        error: null,\n        response: response.toObject(),\n      };\n    } catch (error: any) {\n      switch (error?.code) {\n        case grpcStatusCode.UNAUTHENTICATED:\n          console.log(\n            `%c>>>>> gRPCClientResponse -> [${this.logFuncName(\n              func\n            )}] -> ERROR -> UNAUTHENTICATED: `,\n            \"background-color: #c0392b; color: #000; font-size: 14px\",\n            error\n          );\n          break;\n\n        case grpcStatusCode.UNKNOWN:\n        case grpcStatusCode.UNIMPLEMENTED:\n        case grpcStatusCode.INVALID_ARGUMENT:\n        case grpcStatusCode.NOT_FOUND:\n          console.log(\n            `%c>>>>> gRPCClientResponse -> [${this.logFuncName(\n              func\n            )}] -> ERROR: `,\n            \"background-color: #c0392b; color: #000; font-size: 14px\",\n            error\n          );\n          break;\n\n        default:\n          console.log(\n            `%c>>>>> gRPCClientResponse  -> [${this.logFuncName(\n              func\n            )}] -> ERROR: `,\n            \"background-color: #c0392b; color: #000; font-size: 14px\",\n            error\n          );\n          break;\n      }\n\n      this.onError && this.onError(error, this.serviceName);\n\n      return {\n        error,\n        response: null,\n      };\n    }\n  }\n}\n\nexport default gRPCClientAbstract;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}