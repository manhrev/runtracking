{"ast":null,"code":"export var handlePress = function handlePress(_ref) {\n  var onPress = _ref.onPress,\n    value = _ref.value,\n    onValueChange = _ref.onValueChange;\n  if (onPress && onValueChange) {\n    console.warn(\"onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead\");\n  }\n  onValueChange ? onValueChange(value) : onPress === null || onPress === void 0 ? void 0 : onPress();\n};\nexport var isChecked = function isChecked(_ref2) {\n  var value = _ref2.value,\n    status = _ref2.status,\n    contextValue = _ref2.contextValue;\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};","map":{"version":3,"sources":["utils.ts"],"names":["handlePress","onPress","value","onValueChange","console","warn","isChecked","status","contextValue","undefined"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAG,IAAA,EAQrB;EARsB,IAC1BC,OAAO,GAOR,IAAA,CAPCA,OAAO;IACPC,KAAK,GAMN,IAAA,CANCA,KAAK;IACLC,aAAAA,GAKD,IAAA,CALCA,aAAAA;EAMA,IAAIF,OAAO,IAAIE,aAAa,EAAE;IAC5BC,OAAO,CAACC,IAAI,4FAEX;EACH;EAEAF,aAAa,GAAGA,aAAa,CAACD,KAAK,CAAC,GAAGD,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,EAAI;AACpD,CAAC;AAED,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAS,CAAG,KAAA,EAQnB;EARoB,IACxBJ,KAAK,GAON,KAAA,CAPCA,KAAK;IACLK,MAAM,GAMP,KAAA,CANCA,MAAM;IACNC,YAAAA,GAKD,KAAA,CALCA,YAAAA;EAMA,IAAIA,YAAY,KAAKC,SAAS,IAAID,YAAY,KAAK,IAAI,EAAE;IACvD,OAAOA,YAAY,KAAKN,KAAK,GAAG,SAAS,GAAG,WAAW;EACzD,CAAC,MAAM;IACL,OAAOK,MAAM;EACf;AACF,CAAC","sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n}: {\n  onPress?: () => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.();\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}