{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport store, { useAppDispatch } from \"./src/redux/store\";\nimport { BaseStack } from \"./src/navigators/BaseStack\";\nimport { lightTheme, darkTheme } from \"./src/theme\";\nimport { selectToggleSlice } from \"./src/redux/features/toggle/slice\";\nimport { useAppSelector } from \"./src/redux/store\";\nimport { useEffect } from \"react\";\nimport * as Notifications from 'expo-notifications';\nimport { listLastNotificationInfoThunk } from \"./src/redux/features/notification/thunk\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  usePushNotifications();\n  return _jsx(ReduxProvider, {\n    store: store,\n    children: _jsx(AppInsideRedux, {})\n  });\n}\nfunction AppInsideRedux() {\n  var _useAppSelector = useAppSelector(selectToggleSlice),\n    isNightMode = _useAppSelector.isNightMode;\n  return _jsx(PaperProvider, {\n    theme: isNightMode ? darkTheme : lightTheme,\n    children: _jsx(NavigationContainer, {\n      theme: isNightMode ? darkTheme : lightTheme,\n      children: _jsx(BaseStack, {})\n    })\n  });\n}\nexport var usePushNotifications = function usePushNotifications() {\n  return useEffect(function () {\n    var dispatch = useAppDispatch();\n    Notifications.setNotificationHandler({\n      handleNotification: function () {\n        var _handleNotification = _asyncToGenerator(function* () {\n          return {\n            shouldShowAlert: true,\n            shouldPlaySound: true,\n            shouldSetBadge: true\n          };\n        });\n        function handleNotification() {\n          return _handleNotification.apply(this, arguments);\n        }\n        return handleNotification;\n      }()\n    });\n    var fetchLastNotificationInfo = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var res = yield dispatch(listLastNotificationInfoThunk({\n          limit: 1,\n          offset: 0\n        }));\n        if (!res.payload.error) {}\n      });\n      return function fetchLastNotificationInfo() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var responseSubscription = Notifications.addNotificationResponseReceivedListener(function (notification) {});\n    var notficationSubscription = Notifications.addNotificationReceivedListener(function (notification) {});\n    return function () {\n      notficationSubscription.remove();\n      responseSubscription.remove();\n    };\n  }, []);\n};","map":{"version":3,"names":["NavigationContainer","Provider","PaperProvider","ReduxProvider","store","useAppDispatch","BaseStack","lightTheme","darkTheme","selectToggleSlice","useAppSelector","useEffect","Notifications","listLastNotificationInfoThunk","App","usePushNotifications","AppInsideRedux","isNightMode","dispatch","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","fetchLastNotificationInfo","res","limit","offset","payload","error","responseSubscription","addNotificationResponseReceivedListener","notification","notficationSubscription","addNotificationReceivedListener","remove"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/App.tsx"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nimport store, { useAppDispatch } from \"./src/redux/store\";\nimport { BaseStack } from \"./src/navigators/BaseStack\";\nimport { lightTheme, darkTheme } from \"./src/theme\";\nimport { selectToggleSlice } from \"./src/redux/features/toggle/slice\";\nimport { useAppSelector } from \"./src/redux/store\";\nimport { useEffect } from \"react\";\nimport * as Notifications from 'expo-notifications';\nimport { Subscription } from 'expo-modules-core';\nimport {listLastNotificationInfoThunk}  from \"./src/redux/features/notification/thunk\";\nexport default function App() {\n  usePushNotifications()\n  return (\n    <ReduxProvider store={store}>\n      <AppInsideRedux />\n    </ReduxProvider>\n  );\n}\n\nfunction AppInsideRedux() {\n  const { isNightMode } = useAppSelector(selectToggleSlice);\n  return (\n    <PaperProvider theme={isNightMode ? darkTheme : lightTheme}>\n      <NavigationContainer theme={isNightMode ? darkTheme : lightTheme}>\n        <BaseStack />\n      </NavigationContainer>\n    </PaperProvider>\n  );\n}\n\nexport const usePushNotifications = () => useEffect(() => {\n  const dispatch = useAppDispatch()\n  Notifications.setNotificationHandler({\n      handleNotification: async () => ({\n          shouldShowAlert: true,\n          shouldPlaySound: true,\n          shouldSetBadge: true,\n      }),\n  });\n\n  const fetchLastNotificationInfo = async() => {\n    const res: any = await dispatch(listLastNotificationInfoThunk({\n      limit: 1,\n      offset: 0\n    }))\n\n    if(!res.payload.error){\n        // setCurrentOffset(currentOffset + 1)\n    }\n  }\n \n  const responseSubscription = Notifications.addNotificationResponseReceivedListener(notification => {\n      // handleNotificationPressed(notification);\n  });\n  const notficationSubscription = Notifications.addNotificationReceivedListener(notification => {\n      // handleNotificationReceived(notification);\n      \n  });\n  return () => {\n      notficationSubscription.remove();\n      responseSubscription.remove();\n  }\n}, [])"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAC9D,SAASD,QAAQ,IAAIE,aAAa,QAAQ,aAAa;AAEvD,OAAOC,KAAK,IAAIC,cAAc;AAC9B,SAASC,SAAS;AAClB,SAASC,UAAU,EAAEC,SAAS;AAC9B,SAASC,iBAAiB;AAC1B,SAASC,cAAc;AACvB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,aAAa,MAAM,oBAAoB;AAEnD,SAAQC,6BAA6B;AAAkD;AACvF,eAAe,SAASC,GAAG,GAAG;EAC5BC,oBAAoB,EAAE;EACtB,OACE,KAAC,aAAa;IAAC,KAAK,EAAEX,KAAM;IAAA,UAC1B,KAAC,cAAc;EAAG,EACJ;AAEpB;AAEA,SAASY,cAAc,GAAG;EACxB,sBAAwBN,cAAc,CAACD,iBAAiB,CAAC;IAAjDQ,WAAW,mBAAXA,WAAW;EACnB,OACE,KAAC,aAAa;IAAC,KAAK,EAAEA,WAAW,GAAGT,SAAS,GAAGD,UAAW;IAAA,UACzD,KAAC,mBAAmB;MAAC,KAAK,EAAEU,WAAW,GAAGT,SAAS,GAAGD,UAAW;MAAA,UAC/D,KAAC,SAAS;IAAG;EACO,EACR;AAEpB;AAEA,OAAO,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAoB;EAAA,OAASJ,SAAS,CAAC,YAAM;IACxD,IAAMO,QAAQ,GAAGb,cAAc,EAAE;IACjCO,aAAa,CAACO,sBAAsB,CAAC;MACjCC,kBAAkB;QAAA,4CAAE;UAAA,OAAa;YAC7BC,eAAe,EAAE,IAAI;YACrBC,eAAe,EAAE,IAAI;YACrBC,cAAc,EAAE;UACpB,CAAC;QAAA,CAAC;QAAA;UAAA;QAAA;QAAA;MAAA;IACN,CAAC,CAAC;IAEF,IAAMC,yBAAyB;MAAA,6BAAG,aAAW;QAC3C,IAAMC,GAAQ,SAASP,QAAQ,CAACL,6BAA6B,CAAC;UAC5Da,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACV,CAAC,CAAC,CAAC;QAEH,IAAG,CAACF,GAAG,CAACG,OAAO,CAACC,KAAK,EAAC,CAEtB;MACF,CAAC;MAAA,gBATKL,yBAAyB;QAAA;MAAA;IAAA,GAS9B;IAED,IAAMM,oBAAoB,GAAGlB,aAAa,CAACmB,uCAAuC,CAAC,UAAAC,YAAY,EAAI,CAEnG,CAAC,CAAC;IACF,IAAMC,uBAAuB,GAAGrB,aAAa,CAACsB,+BAA+B,CAAC,UAAAF,YAAY,EAAI,CAG9F,CAAC,CAAC;IACF,OAAO,YAAM;MACTC,uBAAuB,CAACE,MAAM,EAAE;MAChCL,oBAAoB,CAACK,MAAM,EAAE;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AAAA"},"metadata":{},"sourceType":"module"}