{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BarChart } from \"react-native-chart-kit\";\nimport { ActivityIndicator, IconButton, Menu, SegmentedButtons, Text } from \"react-native-paper\";\nimport { ActivityType, GetActivityStatisticRequest } from \"../../../lib/activity/activity_pb\";\nimport { selectActivityStatisticList, isActivityStatisticListLoading } from \"../../../redux/features/activityStatistic/slice\";\nimport { getActivityStatisticThunk } from \"../../../redux/features/activityStatistic/thunk\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/store\";\nimport { useAppTheme } from \"../../../theme\";\nimport { getNameWithActivityType, minutesPerKilometer, secondsToHours } from \"../../../utils/helpers\";\nimport moment from \"moment\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get(\"window\").width;\nvar weekLabels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\nconsole.log(moment().endOf(\"month\").endOf(\"day\").unix());\nexport default function StatisticSection() {\n  var _useState = useState(getDaysArrayThisWeek()),\n    _useState2 = _slicedToArray(_useState, 2),\n    momentList = _useState2[0],\n    setMomentList = _useState2[1];\n  var theme = useAppTheme();\n  var dispatch = useAppDispatch();\n  var loading = useAppSelector(isActivityStatisticListLoading);\n  var _useAppSelector = useAppSelector(selectActivityStatisticList),\n    activityStatisticList = _useAppSelector.activityStatisticList;\n  var _useState3 = useState(\"week\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filterByValue = _useState4[0],\n    setFilterByValue = _useState4[1];\n  var _useState5 = useState(ActivityType.ACTIVITY_TYPE_RUNNING),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activityType = _useState6[0],\n    setActivityType = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    visible = _useState8[0],\n    setVisible = _useState8[1];\n  var openActivityTypeMenu = function openActivityTypeMenu() {\n    return setVisible(true);\n  };\n  var closeActivityTypeMenu = function closeActivityTypeMenu() {\n    return setVisible(false);\n  };\n  var generalInfo = getGeneralInfo(activityStatisticList);\n  var fetchActivityStatistic = function () {\n    var _ref = _asyncToGenerator(function* (from, to) {\n      var req = {\n        from: from,\n        to: to,\n        groupBy: getGroupByType(filterByValue),\n        type: activityType,\n        tz: 7\n      };\n      var _yield$dispatch$unwra = yield dispatch(getActivityStatisticThunk(req)).unwrap(),\n        response = _yield$dispatch$unwra.response;\n    });\n    return function fetchActivityStatistic(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(useCallback(function () {\n    var from = undefined;\n    var to = undefined;\n    switch (filterByValue) {\n      case \"week\":\n        from = {\n          seconds: moment().isoWeekday(1).startOf(\"day\").unix(),\n          nanos: 0\n        };\n        to = {\n          seconds: moment().isoWeekday(7).endOf(\"day\").unix(),\n          nanos: 0\n        };\n        setMomentList(getDaysArrayThisWeek);\n        break;\n      case \"month\":\n        from = {\n          seconds: moment().startOf(\"month\").startOf(\"day\").unix(),\n          nanos: 0\n        };\n        to = {\n          seconds: moment().endOf(\"month\").endOf(\"day\").unix(),\n          nanos: 0\n        };\n        setMomentList(getDaysArrayThisMonth);\n        break;\n    }\n    fetchActivityStatistic(from, to);\n  }, [filterByValue, activityType]));\n  return _jsx(View, {\n    style: styles(theme).analyticContainer,\n    children: _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        variant: \"headlineSmall\",\n        style: {\n          fontWeight: \"bold\",\n          textAlignVertical: \"center\"\n        },\n        children: \"General statistics\"\n      }), _jsx(SegmentedButtons, {\n        style: {\n          marginTop: 10,\n          alignSelf: \"center\"\n        },\n        value: filterByValue,\n        onValueChange: setFilterByValue,\n        density: \"medium\",\n        buttons: [{\n          value: \"week\",\n          label: \"Week\"\n        }, {\n          value: \"month\",\n          label: \"Month\"\n        }, {\n          value: \"year\",\n          label: \"Year\"\n        }, {\n          value: \"all\",\n          label: \"All\"\n        }]\n      }), _jsxs(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        children: [_jsxs(Text, {\n          variant: \"bodyLarge\",\n          style: {\n            fontWeight: \"bold\",\n            textAlignVertical: \"center\",\n            color: theme.colors.secondary\n          },\n          children: [\"Activity type: \", getNameWithActivityType(activityType)]\n        }), _jsxs(Menu, {\n          visible: visible,\n          onDismiss: closeActivityTypeMenu,\n          anchor: _jsx(IconButton, {\n            icon: \"cog\",\n            iconColor: theme.colors.primary,\n            size: 18,\n            onPress: openActivityTypeMenu\n          }),\n          children: [_jsx(Menu.Item, {\n            onPress: function onPress() {\n              setActivityType(ActivityType.ACTIVITY_TYPE_RUNNING);\n              closeActivityTypeMenu();\n            },\n            title: getNameWithActivityType(ActivityType.ACTIVITY_TYPE_RUNNING)\n          }), _jsx(Menu.Item, {\n            onPress: function onPress() {\n              setActivityType(ActivityType.ACTIVITY_TYPE_CYCLING);\n              closeActivityTypeMenu();\n            },\n            title: getNameWithActivityType(ActivityType.ACTIVITY_TYPE_CYCLING)\n          }), _jsx(Menu.Item, {\n            onPress: function onPress() {\n              setActivityType(ActivityType.ACTIVITY_TYPE_WALKING);\n              closeActivityTypeMenu();\n            },\n            title: getNameWithActivityType(ActivityType.ACTIVITY_TYPE_WALKING)\n          })]\n        })]\n      }), !loading && _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles(theme).generalInfoContainter,\n          children: [_jsxs(View, {\n            style: {\n              justifyContent: \"center\"\n            },\n            children: [_jsxs(Text, {\n              variant: \"displayMedium\",\n              children: [(generalInfo.totalDistance / 1000.0).toFixed(1), \" km\"]\n            }), _jsx(Text, {\n              variant: \"bodyMedium\",\n              style: {\n                marginTop: -5,\n                alignSelf: \"center\"\n              },\n              children: \"Total distance\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              alignItems: \"flex-end\"\n            },\n            children: [_jsx(Text, {\n              variant: \"bodyLarge\",\n              children: generalInfo.numberOfActivity\n            }), _jsx(Text, {\n              variant: \"bodyLarge\",\n              children: minutesPerKilometer(generalInfo.totalDuration, generalInfo.totalDistance)\n            }), _jsx(Text, {\n              variant: \"bodyLarge\",\n              children: secondsToHours(generalInfo.totalDuration)\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              variant: \"bodyLarge\",\n              children: \"Activities\"\n            }), _jsx(Text, {\n              variant: \"bodyLarge\",\n              children: \"Avg. pace\"\n            }), _jsx(Text, {\n              variant: \"bodyLarge\",\n              children: \"Hours\"\n            })]\n          })]\n        }), _jsx(BarChart, {\n          yAxisSuffix: \"\",\n          data: {\n            labels: convertMomentListToDayInMonthList(momentList),\n            datasets: [{\n              data: mapData(activityStatisticList, momentList)\n            }]\n          },\n          width: windowWidth - 20,\n          height: 200,\n          yAxisLabel: \"\",\n          chartConfig: {\n            backgroundColor: theme.colors.elevation.level4,\n            backgroundGradientFrom: theme.colors.secondaryContainer,\n            backgroundGradientTo: theme.colors.tertiaryContainer,\n            decimalPlaces: 0,\n            color: function color() {\n              return theme.colors.primary;\n            },\n            style: {\n              borderRadius: 16\n            }\n          },\n          style: {\n            borderRadius: 16,\n            alignSelf: \"center\"\n          },\n          withInnerLines: false,\n          showValuesOnTopOfBars: true\n        })]\n      }), loading && _jsx(ActivityIndicator, {\n        animating: true,\n        style: {\n          paddingVertical: 141,\n          backgroundColor: theme.colors.elevation.level1\n        }\n      })]\n    })\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    analyticContainer: {\n      paddingTop: 20\n    },\n    generalInfoContainter: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      backgroundColor: theme.colors.elevation.level1,\n      marginBottom: 14,\n      borderRadius: 15,\n      paddingVertical: 10\n    }\n  });\n};\nfunction getGroupByType(filterByValue) {\n  switch (filterByValue) {\n    case \"week\":\n      return GetActivityStatisticRequest.GroupBy.GROUP_BY_DAY;\n    case \"month\":\n      return GetActivityStatisticRequest.GroupBy.GROUP_BY_DAY;\n    case \"year\":\n      return GetActivityStatisticRequest.GroupBy.GORUP_BY_MONTH;\n    case \"all\":\n      return GetActivityStatisticRequest.GroupBy.GORUP_BY_YEAR;\n    default:\n      return GetActivityStatisticRequest.GroupBy.GROUP_BY_DAY;\n  }\n}\nfunction getGeneralInfo(list) {\n  var info = {\n    numberOfActivity: 0,\n    totalDistance: 0,\n    totalDuration: 0\n  };\n  list.forEach(function (data) {\n    info.numberOfActivity += data.numberOfActivities;\n    info.totalDistance += data.totalDistance;\n    info.totalDuration += data.totalDuration;\n  });\n  return info;\n}\nfunction getDaysArrayThisMonth() {\n  var daysInMonth = moment().daysInMonth();\n  var arrDays = [];\n  while (daysInMonth) {\n    var current = moment().date(daysInMonth);\n    arrDays.push(current);\n    daysInMonth--;\n  }\n  return arrDays.reverse();\n}\nfunction getDaysArrayThisWeek() {\n  var thisDayInWeek = moment().isoWeekday();\n  var thisDayInMonth = Number(moment().format(\"D\"));\n  var arrDays = [];\n  var endDayThisWeek = thisDayInMonth - thisDayInWeek + 7;\n  for (var i = 0; i < 7; i++) {\n    var current = moment().date(endDayThisWeek);\n    arrDays.push(current);\n    endDayThisWeek--;\n  }\n  return arrDays.reverse();\n}\nfunction convertMomentListToDayInMonthList(t) {\n  var list = [];\n  t.forEach(function (d) {\n    list.push(d.format(\"D\"));\n  });\n  return list;\n}\nfunction mapData(indata, momentList) {\n  var data = _toConsumableArray(indata);\n  var retData = [];\n  var i = 0;\n  momentList.forEach(function (mom) {\n    var _data$i$datetime;\n    if (data.length == i) {\n      retData.push(0);\n      return;\n    }\n    var endTime = moment.unix(((_data$i$datetime = data[i].datetime) == null ? void 0 : _data$i$datetime.seconds) || 0);\n    if (mom.isSame(endTime, \"day\")) {\n      retData.push(data[i].numberOfActivities);\n      i++;\n    } else {\n      retData.push(0);\n    }\n  });\n  return retData;\n}","map":{"version":3,"names":["useCallback","useState","BarChart","ActivityIndicator","IconButton","Menu","SegmentedButtons","Text","ActivityType","GetActivityStatisticRequest","selectActivityStatisticList","isActivityStatisticListLoading","getActivityStatisticThunk","useAppDispatch","useAppSelector","useAppTheme","getNameWithActivityType","minutesPerKilometer","secondsToHours","moment","useFocusEffect","windowWidth","Dimensions","get","width","weekLabels","console","log","endOf","unix","StatisticSection","getDaysArrayThisWeek","momentList","setMomentList","theme","dispatch","loading","activityStatisticList","filterByValue","setFilterByValue","ACTIVITY_TYPE_RUNNING","activityType","setActivityType","visible","setVisible","openActivityTypeMenu","closeActivityTypeMenu","generalInfo","getGeneralInfo","fetchActivityStatistic","from","to","req","groupBy","getGroupByType","type","tz","unwrap","response","undefined","seconds","isoWeekday","startOf","nanos","getDaysArrayThisMonth","styles","analyticContainer","fontWeight","textAlignVertical","marginTop","alignSelf","value","label","display","flexDirection","justifyContent","color","colors","secondary","primary","ACTIVITY_TYPE_CYCLING","ACTIVITY_TYPE_WALKING","generalInfoContainter","totalDistance","toFixed","alignItems","numberOfActivity","totalDuration","labels","convertMomentListToDayInMonthList","datasets","data","mapData","backgroundColor","elevation","level4","backgroundGradientFrom","secondaryContainer","backgroundGradientTo","tertiaryContainer","decimalPlaces","style","borderRadius","paddingVertical","level1","StyleSheet","create","paddingTop","marginBottom","GroupBy","GROUP_BY_DAY","GORUP_BY_MONTH","GORUP_BY_YEAR","list","info","forEach","numberOfActivities","daysInMonth","arrDays","current","date","push","reverse","thisDayInWeek","thisDayInMonth","Number","format","endDayThisWeek","i","t","d","indata","retData","mom","length","endTime","datetime","isSame"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Activity/comp/StatisticSection.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport { BarChart } from \"react-native-chart-kit\";\nimport {\n  ActivityIndicator,\n  Button,\n  Divider,\n  IconButton,\n  Menu,\n  Provider,\n  SegmentedButtons,\n  Text,\n} from \"react-native-paper\";\n\nimport {\n  ActivityStatisticData,\n  ActivityType,\n  GetActivityStatisticRequest,\n} from \"../../../lib/activity/activity_pb\";\nimport {\n  selectActivityStatisticList,\n  isActivityStatisticListLoading,\n} from \"../../../redux/features/activityStatistic/slice\";\nimport { getActivityStatisticThunk } from \"../../../redux/features/activityStatistic/thunk\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/store\";\nimport { AppTheme, useAppTheme } from \"../../../theme\";\nimport {\n  getNameWithActivityType,\n  minutesPerKilometer,\n  secondsToHours,\n} from \"../../../utils/helpers\";\nimport moment from \"moment\";\nimport { Timestamp } from \"google-protobuf/google/protobuf/timestamp_pb\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nconst windowWidth = Dimensions.get(\"window\").width;\nconst weekLabels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\nconsole.log(moment().endOf(\"month\").endOf(\"day\").unix());\n\ninterface GeneralInfo {\n  numberOfActivity: number;\n  totalDistance: number;\n  totalDuration: number;\n}\n\nexport default function StatisticSection() {\n  const [momentList, setMomentList] = useState<moment.Moment[]>(\n    getDaysArrayThisWeek()\n  );\n\n  const theme = useAppTheme();\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector(isActivityStatisticListLoading);\n  const { activityStatisticList } = useAppSelector(selectActivityStatisticList);\n\n  const [filterByValue, setFilterByValue] = useState(\"week\");\n  const [activityType, setActivityType] = useState(\n    ActivityType.ACTIVITY_TYPE_RUNNING\n  );\n  const [visible, setVisible] = useState(false);\n  const openActivityTypeMenu = () => setVisible(true);\n  const closeActivityTypeMenu = () => setVisible(false);\n\n  // Total dist, total activities, hours, avg pace\n  const generalInfo = getGeneralInfo(activityStatisticList);\n\n  const fetchActivityStatistic = async (\n    from: Timestamp.AsObject | undefined,\n    to: Timestamp.AsObject | undefined\n  ) => {\n    const req: GetActivityStatisticRequest.AsObject = {\n      from: from,\n      to: to,\n      groupBy: getGroupByType(filterByValue),\n      type: activityType,\n      tz: 7,\n    };\n    const { response } = await dispatch(\n      getActivityStatisticThunk(req)\n    ).unwrap();\n  };\n  useFocusEffect(\n    useCallback(() => {\n      let from: Timestamp.AsObject | undefined = undefined;\n      let to: Timestamp.AsObject | undefined = undefined;\n      switch (filterByValue) {\n        case \"week\":\n          from = {\n            seconds: moment().isoWeekday(1).startOf(\"day\").unix(),\n            nanos: 0,\n          };\n          to = {\n            seconds: moment().isoWeekday(7).endOf(\"day\").unix(),\n            nanos: 0,\n          };\n          setMomentList(getDaysArrayThisWeek);\n          break;\n        case \"month\":\n          from = {\n            seconds: moment().startOf(\"month\").startOf(\"day\").unix(),\n            nanos: 0,\n          };\n          to = {\n            seconds: moment().endOf(\"month\").endOf(\"day\").unix(),\n            nanos: 0,\n          };\n          setMomentList(getDaysArrayThisMonth);\n          break;\n      }\n      fetchActivityStatistic(from, to);\n    }, [filterByValue, activityType])\n  );\n  return (\n    <View style={styles(theme).analyticContainer}>\n      <>\n        <Text\n          variant=\"headlineSmall\"\n          style={{ fontWeight: \"bold\", textAlignVertical: \"center\" }}\n        >\n          General statistics\n        </Text>\n        <SegmentedButtons\n          style={{ marginTop: 10, alignSelf: \"center\" }}\n          value={filterByValue}\n          onValueChange={setFilterByValue}\n          density=\"medium\"\n          buttons={[\n            {\n              value: \"week\",\n              label: \"Week\",\n            },\n            {\n              value: \"month\",\n              label: \"Month\",\n            },\n            {\n              value: \"year\",\n              label: \"Year\",\n            },\n            { value: \"all\", label: \"All\" },\n          ]}\n        />\n        <View\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Text\n            variant=\"bodyLarge\"\n            style={{\n              fontWeight: \"bold\",\n              textAlignVertical: \"center\",\n              color: theme.colors.secondary,\n            }}\n          >\n            Activity type: {getNameWithActivityType(activityType)}\n          </Text>\n          <Menu\n            visible={visible}\n            onDismiss={closeActivityTypeMenu}\n            anchor={\n              <IconButton\n                icon=\"cog\"\n                iconColor={theme.colors.primary}\n                size={18}\n                onPress={openActivityTypeMenu}\n              />\n            }\n          >\n            <Menu.Item\n              onPress={() => {\n                setActivityType(ActivityType.ACTIVITY_TYPE_RUNNING);\n                closeActivityTypeMenu();\n              }}\n              title={getNameWithActivityType(\n                ActivityType.ACTIVITY_TYPE_RUNNING\n              )}\n            />\n            <Menu.Item\n              onPress={() => {\n                setActivityType(ActivityType.ACTIVITY_TYPE_CYCLING);\n                closeActivityTypeMenu();\n              }}\n              title={getNameWithActivityType(\n                ActivityType.ACTIVITY_TYPE_CYCLING\n              )}\n            />\n            <Menu.Item\n              onPress={() => {\n                setActivityType(ActivityType.ACTIVITY_TYPE_WALKING);\n                closeActivityTypeMenu();\n              }}\n              title={getNameWithActivityType(\n                ActivityType.ACTIVITY_TYPE_WALKING\n              )}\n            />\n          </Menu>\n        </View>\n        {!loading && (\n          <>\n            <View style={styles(theme).generalInfoContainter}>\n              <View style={{ justifyContent: \"center\" }}>\n                <Text variant=\"displayMedium\">\n                  {(generalInfo.totalDistance / 1000.0).toFixed(1)} km\n                </Text>\n                <Text\n                  variant=\"bodyMedium\"\n                  style={{ marginTop: -5, alignSelf: \"center\" }}\n                >\n                  Total distance\n                </Text>\n              </View>\n              <View style={{ alignItems: \"flex-end\" }}>\n                <Text variant=\"bodyLarge\">{generalInfo.numberOfActivity}</Text>\n                <Text variant=\"bodyLarge\">\n                  {minutesPerKilometer(\n                    generalInfo.totalDuration,\n                    generalInfo.totalDistance\n                  )}\n                </Text>\n                <Text variant=\"bodyLarge\">\n                  {secondsToHours(generalInfo.totalDuration)}\n                </Text>\n              </View>\n              <View>\n                <Text variant=\"bodyLarge\">Activities</Text>\n                <Text variant=\"bodyLarge\">Avg. pace</Text>\n                <Text variant=\"bodyLarge\">Hours</Text>\n              </View>\n            </View>\n\n            <BarChart\n              yAxisSuffix=\"\"\n              data={{\n                labels: convertMomentListToDayInMonthList(momentList),\n\n                datasets: [\n                  {\n                    data: mapData(activityStatisticList, momentList),\n                  },\n                ],\n              }}\n              width={windowWidth - 20}\n              height={200}\n              yAxisLabel={\"\"}\n              chartConfig={{\n                backgroundColor: theme.colors.elevation.level4,\n                backgroundGradientFrom: theme.colors.secondaryContainer,\n                backgroundGradientTo: theme.colors.tertiaryContainer,\n                decimalPlaces: 0,\n                color: () => theme.colors.primary,\n                style: {\n                  borderRadius: 16,\n                },\n              }}\n              style={{\n                borderRadius: 16,\n                alignSelf: \"center\",\n              }}\n              withInnerLines={false}\n              showValuesOnTopOfBars\n            />\n          </>\n        )}\n        {loading && (\n          <ActivityIndicator\n            animating={true}\n            style={{\n              paddingVertical: 141,\n              backgroundColor: theme.colors.elevation.level1,\n            }}\n          />\n        )}\n      </>\n    </View>\n  );\n}\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    analyticContainer: {\n      paddingTop: 20,\n    },\n    generalInfoContainter: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      backgroundColor: theme.colors.elevation.level1,\n      marginBottom: 14,\n      borderRadius: 15,\n      paddingVertical: 10,\n    },\n  });\n\nfunction getGroupByType(\n  filterByValue: \"week\" | \"month\" | \"year\" | \"all\" | string\n) {\n  switch (filterByValue) {\n    case \"week\":\n      return GetActivityStatisticRequest.GroupBy.GROUP_BY_DAY;\n    case \"month\":\n      return GetActivityStatisticRequest.GroupBy.GROUP_BY_DAY;\n    case \"year\":\n      return GetActivityStatisticRequest.GroupBy.GORUP_BY_MONTH;\n    case \"all\":\n      return GetActivityStatisticRequest.GroupBy.GORUP_BY_YEAR;\n    default:\n      return GetActivityStatisticRequest.GroupBy.GROUP_BY_DAY;\n  }\n}\n\nfunction getGeneralInfo(list: ActivityStatisticData.AsObject[]): GeneralInfo {\n  const info: GeneralInfo = {\n    numberOfActivity: 0,\n    totalDistance: 0,\n    totalDuration: 0,\n  };\n  list.forEach((data) => {\n    info.numberOfActivity += data.numberOfActivities;\n    info.totalDistance += data.totalDistance;\n    info.totalDuration += data.totalDuration;\n  });\n  return info;\n}\n\nfunction getDaysArrayThisMonth() {\n  var daysInMonth = moment().daysInMonth();\n  var arrDays = [];\n\n  while (daysInMonth) {\n    var current = moment().date(daysInMonth);\n    arrDays.push(current);\n    daysInMonth--;\n  }\n\n  return arrDays.reverse();\n}\n\nfunction getDaysArrayThisWeek() {\n  var thisDayInWeek = moment().isoWeekday();\n  var thisDayInMonth = Number(moment().format(\"D\"));\n  var arrDays = [];\n  var endDayThisWeek = thisDayInMonth - thisDayInWeek + 7;\n  for (let i = 0; i < 7; i++) {\n    var current = moment().date(endDayThisWeek);\n    arrDays.push(current);\n    endDayThisWeek--;\n  }\n\n  // while (daysInMonth) {\n  //   var current = moment().date(daysInMonth);\n  //   arrDays.push(current);\n  //   daysInMonth--;\n  // }\n\n  return arrDays.reverse();\n}\n\nfunction convertMomentListToDayInMonthList(t: moment.Moment[]): string[] {\n  let list: string[] = [];\n  t.forEach((d) => {\n    list.push(d.format(\"D\"));\n  });\n  return list;\n}\n\nfunction mapData(\n  indata: Array<ActivityStatisticData.AsObject>,\n  momentList: moment.Moment[]\n): number[] {\n  let data = [...indata];\n\n  let retData: number[] = [];\n  let i = 0;\n  momentList.forEach((mom) => {\n    if (data.length == i) {\n      retData.push(0);\n      return;\n    }\n    let endTime = moment.unix(data[i].datetime?.seconds || 0);\n\n    if (mom.isSame(endTime, \"day\")) {\n      retData.push(data[i].numberOfActivities);\n      i++;\n    } else {\n      retData.push(0);\n    }\n  });\n  return retData;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}