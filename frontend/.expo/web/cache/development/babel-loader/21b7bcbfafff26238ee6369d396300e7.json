{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Rect, Text } from \"react-native-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CIRCLE_WIDTH = 16;\nvar PADDING_LEFT = 4;\nvar CHARACTER_WIDTH = 6;\nexport var LegendItem = function LegendItem(props) {\n  var baseLegendItemX = props.baseLegendItemX,\n    index = props.index;\n  var centerAlignedCircle = props.legendOffset / 2 - CIRCLE_WIDTH / 2;\n  var centerAlignedText = props.legendOffset * 0.65;\n  var textLengthOffset = props.legendText.length * CHARACTER_WIDTH / 2;\n  var legendItemNumber = index + 1;\n  return _jsxs(_Fragment, {\n    children: [_jsx(Rect, {\n      width: CIRCLE_WIDTH,\n      height: CIRCLE_WIDTH,\n      fill: props.iconColor,\n      rx: 8,\n      ry: 8,\n      x: baseLegendItemX * legendItemNumber - (CIRCLE_WIDTH + textLengthOffset),\n      y: centerAlignedCircle\n    }), _jsx(Text, _objectSpread(_objectSpread({\n      x: baseLegendItemX * legendItemNumber + (PADDING_LEFT - textLengthOffset),\n      y: centerAlignedText\n    }, props.labelProps), {}, {\n      children: props.legendText\n    }))]\n  });\n};","map":{"version":3,"sources":["../../src/line-chart/LegendItem.tsx"],"names":[],"mappings":";;;AAAA,OAAO,KAAK,MAAM,OAAO;AACzB,SAAgB,IAAI,EAAE,IAAI,QAAmB,kBAAkB;AAAC;AAAA;AAAA;AAEhE,IAAM,YAAY,GAAG,EAAE;AACvB,IAAM,YAAY,GAAG,CAAC;AACtB,IAAM,eAAe,GAAG,CAAC;AAWzB,OAAO,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,KAAsB,EAAA;EACvC,IAAA,eAAe,GAAY,KAAK,CAAA,eAAjB;IAAE,KAAK,GAAK,KAAK,CAAA,KAAV;EAG9B,IAAM,mBAAmB,GAAG,KAAK,CAAC,YAAY,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC;EAErE,IAAM,iBAAiB,GAAG,KAAK,CAAC,YAAY,GAAG,IAAI;EAEnD,IAAM,gBAAgB,GAAI,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,eAAe,GAAI,CAAC;EACxE,IAAM,gBAAgB,GAAG,KAAK,GAAG,CAAC;EAElC,OACE;IAAA,WACE,KAAC,IAAI;MACH,KAAK,EAAE,YAAa;MACpB,MAAM,EAAE,YAAa;MACrB,IAAI,EAAE,KAAK,CAAC,SAAU;MACtB,EAAE,EAAE,CAAE;MACN,EAAE,EAAE,CAAE;MACN,CAAC,EACC,eAAe,GAAG,gBAAgB,IAAI,YAAY,GAAG,gBAAgB,CACtE;MACD,CAAC,EAAE;IAAoB,EAEzB,EAAA,KAAC,IAAI;MACH,CAAC,EACC,eAAe,GAAG,gBAAgB,IAAI,YAAY,GAAG,gBAAgB,CACtE;MACD,CAAC,EAAE;IAAkB,GACjB,KAAK,CAAC,UAAU;MAAA,UAEnB,KAAK,CAAC;IAAU,GAErB;EAAA,EAAG;AAEP,CAAC","sourcesContent":["import React from \"react\";\nimport { Color, Rect, Text, TextProps } from \"react-native-svg\";\n\nconst CIRCLE_WIDTH = 16;\nconst PADDING_LEFT = 4;\nconst CHARACTER_WIDTH = 6;\n\nexport type LegendItemProps = {\n  baseLegendItemX: number;\n  index: number;\n  legendOffset: number;\n  legendText: string;\n  iconColor: Color;\n  labelProps: TextProps;\n};\n\nexport const LegendItem = (props: LegendItemProps) => {\n  const { baseLegendItemX, index } = props;\n  /* half the height of the legend Rect, minus half the height of the circle to align the\n     circle from its center, rather than its top. */\n  const centerAlignedCircle = props.legendOffset / 2 - CIRCLE_WIDTH / 2;\n  // 65% of the legend container height centers the text in relation to the circles\n  const centerAlignedText = props.legendOffset * 0.65;\n  // to center the legendItem on the baseLegendItemX\n  const textLengthOffset = (props.legendText.length * CHARACTER_WIDTH) / 2;\n  const legendItemNumber = index + 1;\n\n  return (\n    <>\n      <Rect\n        width={CIRCLE_WIDTH}\n        height={CIRCLE_WIDTH}\n        fill={props.iconColor}\n        rx={8}\n        ry={8}\n        x={\n          baseLegendItemX * legendItemNumber - (CIRCLE_WIDTH + textLengthOffset)\n        }\n        y={centerAlignedCircle}\n      />\n      <Text\n        x={\n          baseLegendItemX * legendItemNumber + (PADDING_LEFT - textLengthOffset)\n        }\n        y={centerAlignedText}\n        {...props.labelProps}\n      >\n        {props.legendText}\n      </Text>\n    </>\n  );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}