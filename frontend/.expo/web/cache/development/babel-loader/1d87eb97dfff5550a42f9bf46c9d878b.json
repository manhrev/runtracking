{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { AuthClient } from \"../../../lib/auth/AuthServiceClientPb\";\nimport { LoginRequest, SignUpRequest, HealthRecordRequest } from \"../../../lib/auth/auth_pb\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nimport { Empty } from \"google-protobuf/google/protobuf/empty_pb\";\nvar rpcAuthClient = function (_gRPCClientAbstract) {\n  _inherits(rpcAuthClient, _gRPCClientAbstract);\n  var _super = _createSuper(rpcAuthClient);\n  function rpcAuthClient(config) {\n    _classCallCheck(this, rpcAuthClient);\n    config.serviceName = \"AUTH\";\n    return _super.call(this, AuthClient, config);\n  }\n  _createClass(rpcAuthClient, [{\n    key: \"signUp\",\n    value: function () {\n      var _signUp = _asyncToGenerator(function* (param) {\n        var req = new SignUpRequest();\n        req.setUserName(param.userName);\n        req.setPassword(param.password);\n        req.setDisplayName(param.displayName);\n        return yield this.gRPCClientRequest(\"signUp\", req);\n      });\n      function signUp(_x) {\n        return _signUp.apply(this, arguments);\n      }\n      return signUp;\n    }()\n  }, {\n    key: \"logIn\",\n    value: function () {\n      var _logIn = _asyncToGenerator(function* (param) {\n        var req = new LoginRequest();\n        req.setUserName(param.userName);\n        req.setPassword(param.password);\n        return yield this.gRPCClientRequest(\"login\", req);\n      });\n      function logIn(_x2) {\n        return _logIn.apply(this, arguments);\n      }\n      return logIn;\n    }()\n  }, {\n    key: \"logOut\",\n    value: function () {\n      var _logOut = _asyncToGenerator(function* () {\n        var req = new Empty();\n        return yield this.gRPCClientRequest(\"logOut\", req);\n      });\n      function logOut() {\n        return _logOut.apply(this, arguments);\n      }\n      return logOut;\n    }()\n  }, {\n    key: \"getMe\",\n    value: function () {\n      var _getMe = _asyncToGenerator(function* () {\n        var req = new Empty();\n        return yield this.gRPCClientRequest(\"me\", req);\n      });\n      function getMe() {\n        return _getMe.apply(this, arguments);\n      }\n      return getMe;\n    }()\n  }, {\n    key: \"updateHealthInfo\",\n    value: function () {\n      var _updateHealthInfo = _asyncToGenerator(function* (param) {\n        var req = new HealthRecordRequest();\n        req.setAge(param.age);\n        req.setHeight(param.height);\n        req.setWeight(param.weight);\n        return yield this.gRPCClientRequest(\"setHealthRecord\", req);\n      });\n      function updateHealthInfo(_x3) {\n        return _updateHealthInfo.apply(this, arguments);\n      }\n      return updateHealthInfo;\n    }()\n  }]);\n  return rpcAuthClient;\n}(gRPCClientAbstract);\nexport default rpcAuthClient;","map":{"version":3,"names":["AuthClient","LoginRequest","SignUpRequest","HealthRecordRequest","gRPCClientAbstract","Empty","rpcAuthClient","config","serviceName","param","req","setUserName","userName","setPassword","password","setDisplayName","displayName","gRPCClientRequest","setAge","age","setHeight","height","setWeight","weight"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/utils/grpc/client/auth.ts"],"sourcesContent":["import { AuthClient } from \"../../../lib/auth/AuthServiceClientPb\";\nimport {\n  LoginRequest,\n  LoginReply,\n  SignUpRequest,\n  SignUpReply,\n  MeReply,\n  HealthRecordRequest,\n} from \"../../../lib/auth/auth_pb\";\n\nimport { GRPCClientConfig } from \"../abstract/types\";\nimport gRPCClientAbstract from \"../abstract/gRPCClient\";\nimport { Empty } from \"google-protobuf/google/protobuf/empty_pb\";\n\nclass rpcAuthClient extends gRPCClientAbstract {\n  constructor(config: GRPCClientConfig) {\n    config.serviceName = \"AUTH\";\n    super(AuthClient, config);\n  }\n\n  async signUp(param: SignUpRequest.AsObject) {\n    const req = new SignUpRequest();\n    req.setUserName(param.userName);\n    req.setPassword(param.password);\n    req.setDisplayName(param.displayName);\n\n    return await this.gRPCClientRequest<SignUpReply.AsObject>(\"signUp\", req);\n  }\n\n  async logIn(param: LoginRequest.AsObject) {\n    const req = new LoginRequest();\n    req.setUserName(param.userName);\n    req.setPassword(param.password);\n    return await this.gRPCClientRequest<LoginReply.AsObject>(\"login\", req);\n  }\n\n  async logOut() {\n    const req = new Empty();\n    return await this.gRPCClientRequest<Empty.AsObject>(\"logOut\", req);\n  }\n\n  async getMe() {\n    const req = new Empty();\n    return await this.gRPCClientRequest<MeReply.AsObject>(\"me\", req);\n  }\n\n  async updateHealthInfo(param: HealthRecordRequest.AsObject) {\n    const req = new HealthRecordRequest();\n    req.setAge(param.age);\n    req.setHeight(param.height);\n    req.setWeight(param.weight);\n    return await this.gRPCClientRequest<Empty.AsObject>(\"setHealthRecord\", req);\n  }\n}\n\nexport default rpcAuthClient;\n"],"mappings":";;;;;;;;AAAA,SAASA,UAAU;AACnB,SACEC,YAAY,EAEZC,aAAa,EAGbC,mBAAmB;AAIrB,OAAOC,kBAAkB;AACzB,SAASC,KAAK,QAAQ,0CAA0C;AAAC,IAE3DC,aAAa;EAAA;EAAA;EACjB,uBAAYC,MAAwB,EAAE;IAAA;IACpCA,MAAM,CAACC,WAAW,GAAG,MAAM;IAAC,yBACtBR,UAAU,EAAEO,MAAM;EAC1B;EAAC;IAAA;IAAA;MAAA,gCAED,WAAaE,KAA6B,EAAE;QAC1C,IAAMC,GAAG,GAAG,IAAIR,aAAa,EAAE;QAC/BQ,GAAG,CAACC,WAAW,CAACF,KAAK,CAACG,QAAQ,CAAC;QAC/BF,GAAG,CAACG,WAAW,CAACJ,KAAK,CAACK,QAAQ,CAAC;QAC/BJ,GAAG,CAACK,cAAc,CAACN,KAAK,CAACO,WAAW,CAAC;QAErC,aAAa,IAAI,CAACC,iBAAiB,CAAuB,QAAQ,EAAEP,GAAG,CAAC;MAC1E,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,+BAED,WAAYD,KAA4B,EAAE;QACxC,IAAMC,GAAG,GAAG,IAAIT,YAAY,EAAE;QAC9BS,GAAG,CAACC,WAAW,CAACF,KAAK,CAACG,QAAQ,CAAC;QAC/BF,GAAG,CAACG,WAAW,CAACJ,KAAK,CAACK,QAAQ,CAAC;QAC/B,aAAa,IAAI,CAACG,iBAAiB,CAAsB,OAAO,EAAEP,GAAG,CAAC;MACxE,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gCAED,aAAe;QACb,IAAMA,GAAG,GAAG,IAAIL,KAAK,EAAE;QACvB,aAAa,IAAI,CAACY,iBAAiB,CAAiB,QAAQ,EAAEP,GAAG,CAAC;MACpE,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,+BAED,aAAc;QACZ,IAAMA,GAAG,GAAG,IAAIL,KAAK,EAAE;QACvB,aAAa,IAAI,CAACY,iBAAiB,CAAmB,IAAI,EAAEP,GAAG,CAAC;MAClE,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,0CAED,WAAuBD,KAAmC,EAAE;QAC1D,IAAMC,GAAG,GAAG,IAAIP,mBAAmB,EAAE;QACrCO,GAAG,CAACQ,MAAM,CAACT,KAAK,CAACU,GAAG,CAAC;QACrBT,GAAG,CAACU,SAAS,CAACX,KAAK,CAACY,MAAM,CAAC;QAC3BX,GAAG,CAACY,SAAS,CAACb,KAAK,CAACc,MAAM,CAAC;QAC3B,aAAa,IAAI,CAACN,iBAAiB,CAAiB,iBAAiB,EAAEP,GAAG,CAAC;MAC7E,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EAtCyBN,kBAAkB;AAyC9C,eAAeE,aAAa"},"metadata":{},"sourceType":"module"}