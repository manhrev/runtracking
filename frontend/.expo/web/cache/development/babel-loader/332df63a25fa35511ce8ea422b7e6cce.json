{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Divider, IconButton, Text, Dialog, Portal } from \"react-native-paper\";\nimport { useAppTheme } from \"../../theme\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MapView, { Marker, Polyline } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { getDistance } from \"geolib\";\nimport Monitor from \"./comp/Monitor\";\nimport * as google_protobuf_timestamp_pb from \"google-protobuf/google/protobuf/timestamp_pb\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Run(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var theme = useAppTheme();\n  var _useState = useState([{\n      latitude: 0,\n      longtitude: 0,\n      isStopPoint: false,\n      altitude: 0,\n      createdAt: {\n        seconds: 0,\n        nanos: 0\n      }\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    coordinates = _useState2[0],\n    setCoordinates = _useState2[1];\n  var _useState3 = useState({\n      latitude: 0,\n      longtitude: 0,\n      isStopPoint: false,\n      altitude: 0,\n      createdAt: {\n        seconds: 0,\n        nanos: 0\n      }\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    location = _useState4[0],\n    setLocation = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    focusMode = _useState6[0],\n    setFocusMode = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    totalDistance = _useState8[0],\n    setTotalDistance = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    totalTime = _useState10[0],\n    setTotalTime = _useState10[1];\n  var _useState11 = useState(\"ready\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    userState = _useState12[0],\n    setUserState = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    pace = _useState14[0],\n    setPace = _useState14[1];\n  var _useState15 = useState({\n      seconds: 0,\n      nanos: 0\n    }),\n    _useState16 = _slicedToArray(_useState15, 2),\n    startTime = _useState16[0],\n    setStartTime = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    visible = _useState18[0],\n    setVisible = _useState18[1];\n  var showDialog = function showDialog() {\n    setVisible(true);\n  };\n  var hideDialog = function hideDialog() {\n    setVisible(false);\n  };\n  useEffect(function () {\n    if (coordinates.length == 1 && coordinates[0].latitude == 0 && coordinates[0].longtitude == 0) {\n      setCoordinates([{\n        latitude: location.latitude,\n        longtitude: location.longtitude,\n        isStopPoint: true,\n        altitude: 0,\n        createdAt: location.createdAt\n      }]);\n    } else if (userState == \"running\") {\n      setCoordinates([].concat(_toConsumableArray(coordinates), [location]));\n      if (coordinates.length > 1 && !coordinates[coordinates.length - 2].isStopPoint) {\n        var pointA = {\n          latitude: coordinates[coordinates.length - 2].latitude,\n          longitude: coordinates[coordinates.length - 2].longtitude\n        };\n        var pointB = {\n          latitude: coordinates[coordinates.length - 1].latitude,\n          longitude: coordinates[coordinates.length - 1].longtitude\n        };\n        var distance = getDistance(pointA, pointB);\n        setTotalDistance(totalDistance + distance);\n      }\n    }\n    console.log(\"=>>>> Distance: \", totalDistance);\n    console.log(\"State: \", userState);\n    if (focusMode) {\n      getLocation();\n    }\n  }, [location]);\n  useEffect(function () {\n    var interval = setInterval(function () {\n      if (userState == \"running\") {\n        if (totalDistance == 0) setPace(0);else {\n          var _pace = totalTime / totalDistance * 1000;\n          setPace(Math.floor(_pace));\n        }\n        setTotalTime(totalTime + 1);\n      }\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [totalTime, userState]);\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== \"granted\") {\n        console.log(\"Permission to access location was denied\");\n        return;\n      }\n      yield Location.watchPositionAsync({\n        accuracy: Location.Accuracy.High,\n        distanceInterval: 1\n      }, function (location) {\n        var timeNow = new google_protobuf_timestamp_pb.Timestamp();\n        timeNow.fromDate(new Date());\n        setLocation({\n          latitude: location.coords.latitude,\n          longtitude: location.coords.longitude,\n          isStopPoint: false,\n          altitude: 0,\n          createdAt: {\n            seconds: timeNow.getSeconds(),\n            nanos: timeNow.getNanos()\n          }\n        });\n      });\n    })();\n  }, []);\n  var mapRef = useRef(null);\n  var getLocation = function getLocation() {\n    if (mapRef.current) {\n      mapRef.current.animateToRegion({\n        latitude: location.latitude,\n        longitude: location.longtitude,\n        latitudeDelta: 0.002,\n        longitudeDelta: 0.003\n      });\n    }\n  };\n  var startOrPause = function startOrPause() {\n    if (userState == \"ready\") {\n      setUserState(\"running\");\n      var timeNow = new google_protobuf_timestamp_pb.Timestamp();\n      timeNow.fromDate(new Date());\n      setStartTime({\n        seconds: timeNow.getSeconds(),\n        nanos: timeNow.getNanos()\n      });\n    } else if (userState == \"running\") {\n      setUserState(\"paused\");\n      if (coordinates.length > 0) {\n        var lastCoordinate = {\n          latitude: coordinates[coordinates.length - 1].latitude,\n          longtitude: coordinates[coordinates.length - 1].longtitude,\n          isStopPoint: true,\n          altitude: 0,\n          createdAt: coordinates[coordinates.length - 1].createdAt\n        };\n        setCoordinates([].concat(_toConsumableArray(coordinates), [lastCoordinate]));\n      }\n    } else if (userState == \"paused\") {\n      setUserState(\"running\");\n    }\n  };\n  var stopRun = function stopRun() {\n    setUserState(\"paused\");\n    var timeNow = new google_protobuf_timestamp_pb.Timestamp();\n    timeNow.fromDate(new Date());\n    navigation.navigate(\"RunResult\", {\n      display: {\n        distance: formatForDisplay(\"distance-km\", totalDistance),\n        time: formatForDisplay(\"time\", totalTime),\n        pace: formatForDisplay(\"pace\", pace),\n        kcal: \"0\"\n      },\n      savingInfo: {\n        duration: totalTime,\n        kcal: 0,\n        totalDistance: totalDistance,\n        routeList: coordinates,\n        startTime: {\n          seconds: startTime.seconds,\n          nanos: startTime.nanos\n        },\n        endTime: {\n          seconds: timeNow.getSeconds(),\n          nanos: timeNow.getNanos()\n        }\n      },\n      resetRunInfo: resetRunInfo\n    });\n  };\n  var arrayToMultiPolyline = function arrayToMultiPolyline(coordinates) {\n    var multiPolyline = [];\n    var polyline = [];\n    coordinates.forEach(function (coordinate) {\n      if (!coordinate.isStopPoint) {\n        polyline.push({\n          latitude: coordinate.latitude,\n          longitude: coordinate.longtitude\n        });\n      } else {\n        multiPolyline.push(polyline);\n        polyline = [];\n      }\n    });\n    multiPolyline.push(polyline);\n    return multiPolyline;\n  };\n  var formatForDisplay = function formatForDisplay(type, value) {\n    if (type == \"time\") {\n      var timeMin = Math.floor(value / 60) < 10 ? \"0\" + Math.floor(value / 60) : Math.floor(value / 60);\n      var timeSec = (\"0\" + value % 60).slice(-2);\n      return timeMin + \":\" + timeSec;\n    } else if (type == \"distance\") {\n      return value / 1000 < 10 ? \"0\" + (value / 1000).toFixed(2).replace(\".\", \":\") : (value / 1000).toFixed(2).replace(\".\", \":\");\n    } else if (type == \"distance-km\") {\n      return (value / 1000).toFixed(2);\n    } else if (type == \"pace\") {\n      if (value == 0) return \"00:00\";\n      var paceMin = Math.floor(value / 60) < 10 ? \"0\" + Math.floor(value / 60) : Math.floor(value / 60);\n      var paceSec = (\"0\" + value % 60).slice(-2);\n      return paceMin + \":\" + paceSec;\n    }\n    return \"Wrong type\";\n  };\n  var resetRunInfo = function resetRunInfo() {\n    setTotalTime(0);\n    setTotalDistance(0);\n    setPace(0);\n    setCoordinates([]);\n    setUserState(\"ready\");\n    setStartTime({\n      seconds: 0,\n      nanos: 0\n    });\n    setFocusMode(false);\n    setVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles(theme).container,\n    children: [_jsx(Portal, {\n      children: _jsxs(Dialog, {\n        visible: visible,\n        onDismiss: hideDialog,\n        children: [_jsx(Dialog.Title, {\n          children: \"Alert\"\n        }), _jsx(Dialog.Content, {\n          children: _jsx(Text, {\n            children: \"Do you want to restart your activity ?\"\n          })\n        }), _jsxs(Dialog.Actions, {\n          children: [_jsx(Button, {\n            onPress: resetRunInfo,\n            children: \" Yes \"\n          }), _jsx(Button, {\n            onPress: hideDialog,\n            children: \" No \"\n          })]\n        })]\n      })\n    }), _jsx(Monitor, {\n      userState: userState == \"ready\" ? \"Ready\" : userState == \"running\" ? \"Running\" : \"Paused\",\n      displayTime: formatForDisplay(\"time\", totalTime),\n      displayDistance: formatForDisplay(\"distance\", totalDistance),\n      displayPace: formatForDisplay(\"pace\", pace),\n      displayKcal: 0\n    }), _jsx(Divider, {\n      style: {\n        height: 1\n      }\n    }), _jsxs(MapView, {\n      ref: mapRef,\n      style: styles(theme).map,\n      initialRegion: {\n        latitude: 10.87839,\n        longitude: 106.80632,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: [_jsx(Marker, {\n        coordinate: {\n          latitude: location.latitude,\n          longitude: location.longtitude\n        },\n        title: \"Your Location\",\n        pinColor: \"purple\"\n      }), arrayToMultiPolyline(coordinates).map(function (polyline, index) {\n        return _jsx(Polyline, {\n          coordinates: polyline,\n          strokeColor: \"#f00\",\n          strokeWidth: 4\n        }, index);\n      })]\n    }), _jsx(IconButton, {\n      style: styles(theme).resetBtn,\n      disabled: userState == \"ready\",\n      icon: userState == \"ready\" ? \"restart-off\" : \"restart\",\n      mode: \"outlined\",\n      size: 26,\n      iconColor: \"black\",\n      containerColor: \"white\",\n      onPress: function onPress() {\n        return showDialog();\n      }\n    }), _jsx(IconButton, {\n      style: styles(theme).focusBtn,\n      icon: \"image-filter-center-focus-strong\",\n      mode: \"outlined\",\n      size: 26,\n      iconColor: focusMode ? \"red\" : \"black\",\n      containerColor: \"white\",\n      onPress: function onPress() {\n        return setFocusMode(!focusMode);\n      }\n    }), _jsx(IconButton, {\n      style: styles(theme).getLocationBtn,\n      icon: \"crosshairs-gps\",\n      mode: \"outlined\",\n      size: 26,\n      iconColor: \"black\",\n      containerColor: \"white\",\n      onPress: function onPress() {\n        return getLocation();\n      }\n    }), _jsx(IconButton, {\n      style: styles(theme).startBtn,\n      icon: userState == \"ready\" || userState == \"paused\" ? \"arrow-right-drop-circle\" : \"pause-circle\",\n      mode: \"outlined\",\n      size: 36,\n      iconColor: \"green\",\n      containerColor: \"white\",\n      onPress: function onPress() {\n        return startOrPause();\n      }\n    }), userState == \"paused\" ? _jsx(IconButton, {\n      style: styles(theme).stopBtn,\n      icon: \"stop\",\n      mode: \"outlined\",\n      size: 36,\n      iconColor: \"red\",\n      containerColor: \"white\",\n      onPress: function onPress() {\n        return stopRun();\n      }\n    }) : null]\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    map: {\n      flex: 1\n    },\n    getLocationBtn: {\n      position: \"absolute\",\n      bottom: \"10%\",\n      right: \"1%\",\n      alignSelf: \"flex-end\"\n    },\n    startBtn: {\n      position: \"absolute\",\n      bottom: \"10%\",\n      left: \"1%\",\n      alignSelf: \"flex-start\"\n    },\n    stopBtn: {\n      position: \"absolute\",\n      bottom: \"10%\",\n      left: \"15%\",\n      alignSelf: \"flex-start\"\n    },\n    focusBtn: {\n      position: \"absolute\",\n      bottom: \"20%\",\n      right: \"1%\",\n      alignSelf: \"flex-end\"\n    },\n    resetBtn: {\n      position: \"absolute\",\n      bottom: \"50%\",\n      right: \"1%\",\n      alignSelf: \"flex-end\"\n    }\n  });\n};","map":{"version":3,"names":["Button","Divider","IconButton","Text","Dialog","Portal","useAppTheme","React","useState","useEffect","useRef","MapView","Marker","Polyline","Location","getDistance","Monitor","google_protobuf_timestamp_pb","Run","navigation","route","theme","latitude","longtitude","isStopPoint","altitude","createdAt","seconds","nanos","coordinates","setCoordinates","location","setLocation","focusMode","setFocusMode","totalDistance","setTotalDistance","totalTime","setTotalTime","userState","setUserState","pace","setPace","startTime","setStartTime","visible","setVisible","showDialog","hideDialog","length","pointA","longitude","pointB","distance","console","log","getLocation","interval","setInterval","Math","floor","clearInterval","requestForegroundPermissionsAsync","status","watchPositionAsync","accuracy","Accuracy","High","distanceInterval","timeNow","Timestamp","fromDate","Date","coords","getSeconds","getNanos","mapRef","current","animateToRegion","latitudeDelta","longitudeDelta","startOrPause","lastCoordinate","stopRun","navigate","display","formatForDisplay","time","kcal","savingInfo","duration","routeList","endTime","resetRunInfo","arrayToMultiPolyline","multiPolyline","polyline","forEach","coordinate","push","type","value","timeMin","timeSec","slice","toFixed","replace","paceMin","paceSec","styles","container","height","map","index","resetBtn","focusBtn","getLocationBtn","startBtn","stopBtn","StyleSheet","create","flex","position","bottom","right","alignSelf","left"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Run/RunHome.tsx"],"sourcesContent":["import { Dimensions, ScrollView, StyleSheet, View } from \"react-native\";\nimport {\n  Button,\n  Divider,\n  IconButton,\n  SegmentedButtons,\n  Text,\n  Dialog,\n  Portal,\n  Paragraph,\n} from \"react-native-paper\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { AppTheme, useAppTheme } from \"../../theme\";\nimport { baseStyles } from \"../baseStyle\";\nimport { RootHomeTabsParamList } from \"../../navigators/HomeTab\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MapView, { Marker, Polyline } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { getDistance } from \"geolib\";\nimport Monitor from \"./comp/Monitor\";\n\nimport { TrackPoint } from \"../../lib/activity/activity_pb\";\nimport * as google_protobuf_timestamp_pb from \"google-protobuf/google/protobuf/timestamp_pb\";\n\nexport default function Run({\n  navigation,\n  route,\n}: NativeStackScreenProps<RootHomeTabsParamList, \"RunHome\">) {\n  const theme = useAppTheme();\n\n  const [coordinates, setCoordinates] = useState<Array<TrackPoint.AsObject>>([\n    {\n      latitude: 0,\n      longtitude: 0,\n      isStopPoint: false,\n      altitude: 0,\n      createdAt: {\n        seconds: 0,\n        nanos: 0,\n      },\n    },\n  ]);\n\n  const [location, setLocation] = useState<TrackPoint.AsObject>({\n    latitude: 0,\n    longtitude: 0,\n    isStopPoint: false,\n    altitude: 0,\n    createdAt: {\n      seconds: 0,\n      nanos: 0,\n    },\n  });\n\n  // focus mode\n  const [focusMode, setFocusMode] = useState(false);\n\n  // some info\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [totalTime, setTotalTime] = useState(0); // seconds\n  const [userState, setUserState] = useState(\"ready\"); // ready, running, paused, stopped\n  const [pace, setPace] = useState(0); // seconds per km\n  const [startTime, setStartTime] =\n    useState<google_protobuf_timestamp_pb.Timestamp.AsObject>({\n      seconds: 0,\n      nanos: 0,\n    });\n\n  // dialog\n  const [visible, setVisible] = useState(false);\n\n  const showDialog = () => {\n    setVisible(true);\n  };\n\n  const hideDialog = () => {\n    setVisible(false);\n  };\n\n  useEffect(() => {\n    if (\n      coordinates.length == 1 &&\n      coordinates[0].latitude == 0 &&\n      coordinates[0].longtitude == 0\n    ) {\n      // set location as first coordinate\n      setCoordinates([\n        {\n          latitude: location.latitude,\n          longtitude: location.longtitude,\n          isStopPoint: true,\n          altitude: 0,\n          createdAt: location.createdAt,\n        },\n      ]);\n    } else if (userState == \"running\") {\n      setCoordinates([...coordinates, location]);\n\n      // calculate distance from 2 points\n      if (\n        coordinates.length > 1 &&\n        !coordinates[coordinates.length - 2].isStopPoint\n      ) {\n        const pointA = {\n          latitude: coordinates[coordinates.length - 2].latitude,\n          longitude: coordinates[coordinates.length - 2].longtitude,\n        };\n        const pointB = {\n          latitude: coordinates[coordinates.length - 1].latitude,\n          longitude: coordinates[coordinates.length - 1].longtitude,\n        };\n\n        const distance = getDistance(pointA, pointB);\n        setTotalDistance(totalDistance + distance);\n      }\n    }\n\n    console.log(\"=>>>> Distance: \", totalDistance);\n    console.log(\"State: \", userState);\n\n    if (focusMode) {\n      getLocation(); // move the map to current location\n    }\n  }, [location]);\n\n  // time calculation every 1 second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (userState == \"running\") {\n        // calculate pace\n        if (totalDistance == 0) setPace(0);\n        else {\n          const pace = (totalTime / totalDistance) * 1000;\n          setPace(Math.floor(pace)); // seconds per km\n        }\n\n        setTotalTime(totalTime + 1);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [totalTime, userState]);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        console.log(\"Permission to access location was denied\");\n        return;\n      }\n\n      await Location.watchPositionAsync(\n        {\n          accuracy: Location.Accuracy.High,\n          distanceInterval: 1,\n        },\n        (location) => {\n          const timeNow = new google_protobuf_timestamp_pb.Timestamp();\n          timeNow.fromDate(new Date());\n\n          setLocation({\n            latitude: location.coords.latitude,\n            longtitude: location.coords.longitude,\n            isStopPoint: false,\n            altitude: 0,\n            createdAt: {\n              seconds: timeNow.getSeconds(),\n              nanos: timeNow.getNanos(),\n            },\n          });\n        }\n      );\n    })();\n  }, []);\n\n  // center map to current location\n  const mapRef = useRef<MapView>(null);\n\n  const getLocation = () => {\n    if (mapRef.current) {\n      mapRef.current.animateToRegion({\n        latitude: location.latitude,\n        longitude: location.longtitude,\n        latitudeDelta: 0.002,\n        longitudeDelta: 0.003,\n      });\n    }\n  };\n\n  // state control\n  const startOrPause = () => {\n    if (userState == \"ready\") {\n      setUserState(\"running\");\n\n      // save start time\n      const timeNow = new google_protobuf_timestamp_pb.Timestamp();\n      timeNow.fromDate(new Date());\n      setStartTime({\n        seconds: timeNow.getSeconds(),\n        nanos: timeNow.getNanos(),\n      });\n    } else if (userState == \"running\") {\n      setUserState(\"paused\");\n\n      if(coordinates.length > 0) {\n        // set last coordinate as stop point\n        let lastCoordinate: TrackPoint.AsObject = {\n          latitude: coordinates[coordinates.length - 1].latitude,\n          longtitude: coordinates[coordinates.length - 1].longtitude,\n          isStopPoint: true,\n          altitude: 0,\n          createdAt: coordinates[coordinates.length - 1].createdAt,\n        };\n        setCoordinates([...coordinates, lastCoordinate]);\n      }\n    } else if (userState == \"paused\") {\n      setUserState(\"running\");\n    }\n  };\n\n  const stopRun = () => {\n    setUserState(\"paused\");\n    // get end time first\n    const timeNow = new google_protobuf_timestamp_pb.Timestamp();\n    timeNow.fromDate(new Date());\n\n    navigation.navigate(\"RunResult\", {\n      display: {\n        distance: formatForDisplay(\"distance-km\", totalDistance),\n        time: formatForDisplay(\"time\", totalTime),\n        pace: formatForDisplay(\"pace\", pace),\n        kcal: \"0\",\n      },\n      savingInfo: {\n        duration: totalTime,\n        kcal: 0,\n        totalDistance: totalDistance,\n        routeList: coordinates,\n        startTime: {\n          seconds: startTime.seconds,\n          nanos: startTime.nanos,\n        },\n        endTime: {\n          seconds: timeNow.getSeconds(),\n          nanos: timeNow.getNanos(),\n        },\n      },\n      resetRunInfo: resetRunInfo,\n    });\n  };\n\n  // convert array of coordinates to multi polyline\n  const arrayToMultiPolyline = (coordinates: any) => {\n    const multiPolyline = [];\n    let polyline: any = [];\n    coordinates.forEach((coordinate: any) => {\n      if (!coordinate.isStopPoint) {\n        polyline.push({\n          latitude: coordinate.latitude,\n          longitude: coordinate.longtitude,\n        });\n      } else {\n        multiPolyline.push(polyline);\n        polyline = [];\n      }\n    });\n    multiPolyline.push(polyline);\n    return multiPolyline;\n  };\n\n  // format convert\n  const formatForDisplay = (type: string, value: number) => {\n    if (type == \"time\") {\n      const timeMin =\n        Math.floor(value / 60) < 10\n          ? \"0\" + Math.floor(value / 60)\n          : Math.floor(value / 60);\n      const timeSec = (\"0\" + (value % 60)).slice(-2);\n      return timeMin + \":\" + timeSec;\n    } else if (type == \"distance\") {\n      return value / 1000 < 10\n        ? \"0\" + (value / 1000).toFixed(2).replace(\".\", \":\")\n        : (value / 1000).toFixed(2).replace(\".\", \":\");\n    } else if (type == \"distance-km\") {\n      return (value / 1000).toFixed(2);\n    } else if (type == \"pace\") {\n      if(value == 0) return \"00:00\";\n\n      const paceMin =\n        Math.floor(value / 60) < 10\n          ? \"0\" + Math.floor(value / 60)\n          : Math.floor(value / 60);\n      const paceSec = (\"0\" + (value % 60)).slice(-2);\n      return paceMin + \":\" + paceSec;\n    }\n    return \"Wrong type\";\n  };\n\n  // reset\n  const resetRunInfo = () => {\n    setTotalTime(0);\n    setTotalDistance(0);\n    setPace(0);\n    setCoordinates([]);\n    setUserState(\"ready\");\n    setStartTime({\n      seconds: 0,\n      nanos: 0,\n    });\n    setFocusMode(false);\n    setVisible(false);\n  };\n\n  return (\n    <View style={styles(theme).container}>\n      <Portal>\n        <Dialog visible={visible} onDismiss={hideDialog}>\n          <Dialog.Title>Alert</Dialog.Title>\n          <Dialog.Content>\n            <Text>Do you want to restart your activity ?</Text>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={resetRunInfo}> Yes </Button>\n            <Button onPress={hideDialog}> No </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n      <Monitor\n        userState={\n          userState == \"ready\"\n            ? \"Ready\"\n            : userState == \"running\"\n            ? \"Running\"\n            : \"Paused\"\n        }\n        displayTime={formatForDisplay(\"time\", totalTime)}\n        displayDistance={formatForDisplay(\"distance\", totalDistance)}\n        displayPace={formatForDisplay(\"pace\", pace)}\n        displayKcal={0}\n      />\n      <Divider style={{ height: 1 }} />\n      <MapView\n        ref={mapRef}\n        style={styles(theme).map}\n        initialRegion={{\n          latitude: 10.87839,\n          longitude: 106.80632,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421,\n        }}\n      >\n        <Marker\n          coordinate={{\n            latitude: location.latitude,\n            longitude: location.longtitude,\n          }}\n          title=\"Your Location\"\n          pinColor=\"purple\"\n        />\n        {arrayToMultiPolyline(coordinates).map((polyline, index) => (\n          <Polyline\n            key={index}\n            coordinates={polyline}\n            strokeColor=\"#f00\"\n            strokeWidth={4}\n          />\n        ))}\n      </MapView>\n\n      <IconButton // reset button\n        style={styles(theme).resetBtn}\n        disabled={userState == \"ready\"}\n        icon={userState == \"ready\" ? \"restart-off\" : \"restart\"}\n        mode=\"outlined\"\n        size={26}\n        iconColor={\"black\"}\n        containerColor=\"white\"\n        onPress={() => showDialog()}\n      />\n\n      <IconButton // focus button\n        style={styles(theme).focusBtn}\n        icon=\"image-filter-center-focus-strong\"\n        mode=\"outlined\"\n        size={26}\n        iconColor={focusMode ? \"red\" : \"black\"}\n        containerColor=\"white\"\n        onPress={() => setFocusMode(!focusMode)}\n      />\n\n      <IconButton // get location button\n        style={styles(theme).getLocationBtn}\n        icon=\"crosshairs-gps\"\n        mode=\"outlined\"\n        size={26}\n        iconColor=\"black\"\n        containerColor=\"white\"\n        onPress={() => getLocation()}\n      />\n\n      <IconButton // start button\n        style={styles(theme).startBtn}\n        icon={\n          userState == \"ready\" || userState == \"paused\"\n            ? \"arrow-right-drop-circle\"\n            : \"pause-circle\"\n        }\n        mode=\"outlined\"\n        size={36}\n        iconColor=\"green\"\n        containerColor=\"white\"\n        onPress={() => startOrPause()}\n      />\n      {userState == \"paused\" ? (\n        <IconButton // paused button\n          style={styles(theme).stopBtn}\n          icon=\"stop\"\n          mode=\"outlined\"\n          size={36}\n          iconColor=\"red\"\n          containerColor=\"white\"\n          onPress={() => stopRun()}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    map: {\n      flex: 1,\n    },\n    getLocationBtn: {\n      position: \"absolute\",\n      bottom: \"10%\",\n      right: \"1%\",\n      alignSelf: \"flex-end\", // for align to right\n    },\n    startBtn: {\n      position: \"absolute\",\n      bottom: \"10%\",\n      left: \"1%\",\n      alignSelf: \"flex-start\", // for align to left\n    },\n    stopBtn: {\n      position: \"absolute\",\n      bottom: \"10%\",\n      left: \"15%\",\n      alignSelf: \"flex-start\", // for align to left\n    },\n    focusBtn: {\n      position: \"absolute\",\n      bottom: \"20%\",\n      right: \"1%\",\n      alignSelf: \"flex-end\", // for align to right\n    },\n    resetBtn: {\n      position: \"absolute\",\n      bottom: \"50%\",\n      right: \"1%\",\n      alignSelf: \"flex-end\", // for align to right\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}