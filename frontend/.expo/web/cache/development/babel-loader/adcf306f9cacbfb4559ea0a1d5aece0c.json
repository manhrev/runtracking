{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport _ from \"lodash\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { G, Rect, Svg, Text } from \"react-native-svg\";\nimport AbstractChart from \"../AbstractChart\";\nimport { mapValue } from \"../Utils\";\nimport { convertToDate, getBeginningTimeForDate, shiftDate } from \"./DateHelpers\";\nimport { DAYS_IN_WEEK, MILLISECONDS_IN_ONE_DAY, MONTH_LABELS } from \"./constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SQUARE_SIZE = 20;\nvar MONTH_LABEL_GUTTER_SIZE = 8;\nvar paddingLeft = 32;\nvar ContributionGraph = function (_super) {\n  __extends(ContributionGraph, _super);\n  function ContributionGraph(props) {\n    var _this = _super.call(this, props) || this;\n    var _a = _this.getValueCache(props.values),\n      maxValue = _a.maxValue,\n      minValue = _a.minValue,\n      valueCache = _a.valueCache;\n    _this.state = {\n      maxValue: maxValue,\n      minValue: minValue,\n      valueCache: valueCache\n    };\n    return _this;\n  }\n  ContributionGraph.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    var _a = this.getValueCache(nextProps.values),\n      maxValue = _a.maxValue,\n      minValue = _a.minValue,\n      valueCache = _a.valueCache;\n    this.setState({\n      maxValue: maxValue,\n      minValue: minValue,\n      valueCache: valueCache\n    });\n  };\n  ContributionGraph.prototype.getSquareSizeWithGutter = function () {\n    return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n  };\n  ContributionGraph.prototype.getMonthLabelSize = function () {\n    var _a = this.props.squareSize,\n      squareSize = _a === void 0 ? SQUARE_SIZE : _a;\n    if (!this.props.showMonthLabels) {\n      return 0;\n    }\n    if (this.props.horizontal) {\n      return squareSize + MONTH_LABEL_GUTTER_SIZE;\n    }\n    return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n  };\n  ContributionGraph.prototype.getStartDate = function () {\n    return shiftDate(this.getEndDate(), -this.props.numDays + 1);\n  };\n  ContributionGraph.prototype.getEndDate = function () {\n    return getBeginningTimeForDate(convertToDate(this.props.endDate));\n  };\n  ContributionGraph.prototype.getStartDateWithEmptyDays = function () {\n    return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n  };\n  ContributionGraph.prototype.getNumEmptyDaysAtStart = function () {\n    return this.getStartDate().getDay();\n  };\n  ContributionGraph.prototype.getNumEmptyDaysAtEnd = function () {\n    return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n  };\n  ContributionGraph.prototype.getWeekCount = function () {\n    var numDaysRoundedToWeek = this.props.numDays + this.getNumEmptyDaysAtStart() + this.getNumEmptyDaysAtEnd();\n    return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n  };\n  ContributionGraph.prototype.getWeekWidth = function () {\n    return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n  };\n  ContributionGraph.prototype.getWidth = function () {\n    return this.getWeekCount() * this.getSquareSizeWithGutter() - this.props.gutterSize;\n  };\n  ContributionGraph.prototype.getHeight = function () {\n    return this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize);\n  };\n  ContributionGraph.prototype.getValueCache = function (values) {\n    var _this = this;\n    var minValue = Infinity,\n      maxValue = -Infinity;\n    return {\n      valueCache: values.reduce(function (memo, value) {\n        var date = convertToDate(value.date);\n        var index = Math.floor((date.valueOf() - _this.getStartDateWithEmptyDays().valueOf()) / MILLISECONDS_IN_ONE_DAY);\n        minValue = Math.min(value[_this.props.accessor], minValue);\n        maxValue = Math.max(value[_this.props.accessor], maxValue);\n        memo[index] = {\n          value: value,\n          title: _this.props.titleForValue ? _this.props.titleForValue(value) : null,\n          tooltipDataAttrs: _this.getTooltipDataAttrsForValue(value)\n        };\n        return memo;\n      }, {}),\n      minValue: minValue,\n      maxValue: maxValue\n    };\n  };\n  ContributionGraph.prototype.getValueForIndex = function (index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].value;\n    }\n    return null;\n  };\n  ContributionGraph.prototype.getClassNameForIndex = function (index) {\n    if (this.state.valueCache[index]) {\n      if (this.state.valueCache[index].value) {\n        var count = this.state.valueCache[index].value[this.props.accessor];\n        if (count) {\n          var opacity = mapValue(count, this.state.maxValue === this.state.minValue ? 0 : this.state.minValue, isNaN(this.state.maxValue) ? 1 : this.state.maxValue, 0.15 + 0.05, 1);\n          return this.props.chartConfig.color(opacity);\n        }\n      }\n    }\n    return this.props.chartConfig.color(0.15);\n  };\n  ContributionGraph.prototype.getTitleForIndex = function (index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].title;\n    }\n    return this.props.titleForValue ? this.props.titleForValue(null) : null;\n  };\n  ContributionGraph.prototype.getTooltipDataAttrsForIndex = function (index) {\n    var _a;\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].tooltipDataAttrs;\n    }\n    return this.getTooltipDataAttrsForValue((_a = {\n      date: null\n    }, _a[this.props.accessor] = null, _a));\n  };\n  ContributionGraph.prototype.getTooltipDataAttrsForValue = function (value) {\n    var tooltipDataAttrs = this.props.tooltipDataAttrs;\n    if (typeof tooltipDataAttrs === \"function\") {\n      return tooltipDataAttrs(value);\n    }\n    return tooltipDataAttrs;\n  };\n  ContributionGraph.prototype.getTransformForWeek = function (weekIndex) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), 50];\n    }\n    return [10, weekIndex * this.getSquareSizeWithGutter()];\n  };\n  ContributionGraph.prototype.getTransformForMonthLabels = function () {\n    if (this.props.horizontal) {\n      return null;\n    }\n    return this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE + \", 0\";\n  };\n  ContributionGraph.prototype.getTransformForAllWeeks = function () {\n    if (this.props.horizontal) {\n      return \"0, \" + (this.getMonthLabelSize() - 100);\n    }\n    return null;\n  };\n  ContributionGraph.prototype.getViewBox = function () {\n    if (this.props.horizontal) {\n      return this.getWidth() + \" \" + this.getHeight();\n    }\n    return this.getHeight() + \" \" + this.getWidth();\n  };\n  ContributionGraph.prototype.getSquareCoordinates = function (dayIndex) {\n    if (this.props.horizontal) {\n      return [0, dayIndex * this.getSquareSizeWithGutter()];\n    }\n    return [dayIndex * this.getSquareSizeWithGutter(), 0];\n  };\n  ContributionGraph.prototype.getMonthLabelCoordinates = function (weekIndex) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE];\n    }\n    var verticalOffset = -2;\n    return [0, (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset];\n  };\n  ContributionGraph.prototype.renderSquare = function (dayIndex, index) {\n    var _this = this;\n    var indexOutOfRange = index < this.getNumEmptyDaysAtStart() || index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n    if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n      return null;\n    }\n    var _a = this.getSquareCoordinates(dayIndex),\n      x = _a[0],\n      y = _a[1];\n    var _b = this.props.squareSize,\n      squareSize = _b === void 0 ? SQUARE_SIZE : _b;\n    return _jsx(Rect, _objectSpread({\n      width: squareSize,\n      height: squareSize,\n      x: x + paddingLeft,\n      y: y,\n      title: this.getTitleForIndex(index),\n      fill: this.getClassNameForIndex(index),\n      onPress: function onPress() {\n        _this.handleDayPress(index);\n      }\n    }, this.getTooltipDataAttrsForIndex(index)), index);\n  };\n  ContributionGraph.prototype.handleDayPress = function (index) {\n    var _a;\n    if (!this.props.onDayPress) {\n      return;\n    }\n    this.props.onDayPress(this.state.valueCache[index] && this.state.valueCache[index].value ? this.state.valueCache[index].value : (_a = {}, _a[this.props.accessor] = 0, _a.date = new Date(this.getStartDate().valueOf() + index * MILLISECONDS_IN_ONE_DAY), _a));\n  };\n  ContributionGraph.prototype.renderWeek = function (weekIndex) {\n    var _this = this;\n    var _a = this.getTransformForWeek(weekIndex),\n      x = _a[0],\n      y = _a[1];\n    return _jsx(G, {\n      x: x,\n      y: y,\n      children: _.range(DAYS_IN_WEEK).map(function (dayIndex) {\n        return _this.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex);\n      })\n    }, weekIndex);\n  };\n  ContributionGraph.prototype.renderAllWeeks = function () {\n    var _this = this;\n    return _.range(this.getWeekCount()).map(function (weekIndex) {\n      return _this.renderWeek(weekIndex);\n    });\n  };\n  ContributionGraph.prototype.renderMonthLabels = function () {\n    var _this = this;\n    if (!this.props.showMonthLabels) {\n      return null;\n    }\n    var weekRange = _.range(this.getWeekCount() - 1);\n    return weekRange.map(function (weekIndex) {\n      var endOfWeek = shiftDate(_this.getStartDateWithEmptyDays(), (weekIndex + 1) * DAYS_IN_WEEK);\n      var _a = _this.getMonthLabelCoordinates(weekIndex),\n        x = _a[0],\n        y = _a[1];\n      return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? _jsx(Text, _objectSpread(_objectSpread({\n        x: x + paddingLeft,\n        y: y + 8\n      }, _this.getPropsForLabels()), {}, {\n        children: _this.props.getMonthLabel ? _this.props.getMonthLabel(endOfWeek.getMonth()) : MONTH_LABELS[endOfWeek.getMonth()]\n      }), weekIndex) : null;\n    });\n  };\n  ContributionGraph.prototype.render = function () {\n    var style = this.props.style;\n    var _a = style.borderRadius,\n      borderRadius = _a === void 0 ? 0 : _a;\n    if (!borderRadius && this.props.chartConfig.style) {\n      var stupidXo = this.props.chartConfig.style.borderRadius;\n      borderRadius = stupidXo;\n    }\n    return _jsx(View, {\n      style: style,\n      children: _jsxs(Svg, {\n        height: this.props.height,\n        width: this.props.width,\n        children: [this.renderDefs(__assign({\n          width: this.props.width,\n          height: this.props.height\n        }, this.props.chartConfig)), _jsx(Rect, {\n          width: \"100%\",\n          height: this.props.height,\n          rx: borderRadius,\n          ry: borderRadius,\n          fill: \"url(#backgroundGradient)\"\n        }), _jsx(G, {\n          children: this.renderMonthLabels()\n        }), _jsx(G, {\n          children: this.renderAllWeeks()\n        })]\n      })\n    });\n  };\n  ContributionGraph.defaultProps = {\n    numDays: 200,\n    endDate: new Date(),\n    gutterSize: 1,\n    squareSize: SQUARE_SIZE,\n    horizontal: true,\n    showMonthLabels: true,\n    showOutOfRangeDays: false,\n    accessor: \"count\",\n    classForValue: function classForValue(value) {\n      return value ? \"black\" : \"#8cc665\";\n    },\n    style: {}\n  };\n  return ContributionGraph;\n}(AbstractChart);\nexport default ContributionGraph;","map":{"version":3,"sources":["../../src/contribution-graph/ContributionGraph.tsx"],"names":[],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { G, Rect, RectProps, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart from \"../AbstractChart\";\nimport { mapValue } from \"../Utils\";\nimport {\n  convertToDate,\n  getBeginningTimeForDate,\n  shiftDate\n} from \"./DateHelpers\";\nimport {\n  DAYS_IN_WEEK,\n  MILLISECONDS_IN_ONE_DAY,\n  MONTH_LABELS\n} from \"./constants\";\nimport { ContributionGraphProps, ContributionGraphState } from \".\";\n\nconst SQUARE_SIZE = 20;\nconst MONTH_LABEL_GUTTER_SIZE = 8;\nconst paddingLeft = 32;\n\nexport type ContributionChartValue = {\n  value: number;\n  title: string;\n  tooltipDataAttrs: TooltipDataAttrs;\n  date: Date;\n};\n\nexport type TooltipDataAttrs = (\n  value: ContributionChartValue\n) => Partial<RectProps> | Partial<RectProps>;\n\nclass ContributionGraph extends AbstractChart<\n  ContributionGraphProps,\n  ContributionGraphState\n> {\n  constructor(props: ContributionGraphProps) {\n    super(props);\n\n    let { maxValue, minValue, valueCache } = this.getValueCache(props.values);\n\n    this.state = {\n      maxValue,\n      minValue,\n      valueCache\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: ContributionGraphProps) {\n    let { maxValue, minValue, valueCache } = this.getValueCache(\n      nextProps.values\n    );\n\n    this.setState({\n      maxValue,\n      minValue,\n      valueCache\n    });\n  }\n\n  getSquareSizeWithGutter() {\n    return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n  }\n\n  getMonthLabelSize() {\n    let { squareSize = SQUARE_SIZE } = this.props;\n    if (!this.props.showMonthLabels) {\n      return 0;\n    }\n    if (this.props.horizontal) {\n      return squareSize + MONTH_LABEL_GUTTER_SIZE;\n    }\n    return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n  }\n\n  getStartDate() {\n    return shiftDate(this.getEndDate(), -this.props.numDays + 1); // +1 because endDate is inclusive\n  }\n\n  getEndDate() {\n    return getBeginningTimeForDate(convertToDate(this.props.endDate));\n  }\n\n  getStartDateWithEmptyDays() {\n    return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n  }\n\n  getNumEmptyDaysAtStart() {\n    return this.getStartDate().getDay();\n  }\n\n  getNumEmptyDaysAtEnd() {\n    return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n  }\n\n  getWeekCount() {\n    const numDaysRoundedToWeek =\n      this.props.numDays +\n      this.getNumEmptyDaysAtStart() +\n      this.getNumEmptyDaysAtEnd();\n    return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n  }\n\n  getWeekWidth() {\n    return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n  }\n\n  getWidth() {\n    return (\n      this.getWeekCount() * this.getSquareSizeWithGutter() -\n      this.props.gutterSize\n    );\n  }\n\n  getHeight() {\n    return (\n      this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize)\n    );\n  }\n\n  getValueCache(values: ContributionChartValue[]) {\n    let minValue = Infinity,\n      maxValue = -Infinity;\n\n    return {\n      valueCache: values.reduce((memo, value) => {\n        const date = convertToDate(value.date);\n\n        const index = Math.floor(\n          (date.valueOf() - this.getStartDateWithEmptyDays().valueOf()) /\n            MILLISECONDS_IN_ONE_DAY\n        );\n\n        minValue = Math.min(value[this.props.accessor], minValue);\n        maxValue = Math.max(value[this.props.accessor], maxValue);\n\n        memo[index] = {\n          value,\n          title: this.props.titleForValue\n            ? this.props.titleForValue(value)\n            : null,\n          tooltipDataAttrs: this.getTooltipDataAttrsForValue(value)\n        };\n\n        return memo;\n      }, {}),\n      minValue,\n      maxValue\n    };\n  }\n\n  getValueForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].value;\n    }\n    return null;\n  }\n\n  getClassNameForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      if (this.state.valueCache[index].value) {\n        const count = this.state.valueCache[index].value[this.props.accessor];\n\n        if (count) {\n          const opacity = mapValue(\n            count,\n            this.state.maxValue === this.state.minValue ? 0: this.state.minValue,\n            isNaN(this.state.maxValue) ? 1 : this.state.maxValue,\n            0.15 + 0.05, // + 0.05 to make smaller values a bit more visible\n            1\n          );\n\n          return this.props.chartConfig.color(opacity);\n        }\n      }\n    }\n\n    return this.props.chartConfig.color(0.15);\n  }\n\n  getTitleForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].title;\n    }\n\n    return this.props.titleForValue ? this.props.titleForValue(null) : null;\n  }\n\n  getTooltipDataAttrsForIndex(index: number) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].tooltipDataAttrs;\n    }\n\n    return this.getTooltipDataAttrsForValue({\n      date: null,\n      [this.props.accessor]: null\n    } as ContributionChartValue);\n  }\n\n  getTooltipDataAttrsForValue(value: ContributionChartValue) {\n    const { tooltipDataAttrs } = this.props;\n\n    if (typeof tooltipDataAttrs === \"function\") {\n      return tooltipDataAttrs(value);\n    }\n\n    return tooltipDataAttrs;\n  }\n\n  getTransformForWeek(weekIndex: number) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), 50];\n    }\n    return [10, weekIndex * this.getSquareSizeWithGutter()];\n  }\n\n  getTransformForMonthLabels() {\n    if (this.props.horizontal) {\n      return null;\n    }\n    return `${this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE}, 0`;\n  }\n\n  getTransformForAllWeeks() {\n    if (this.props.horizontal) {\n      return `0, ${this.getMonthLabelSize() - 100}`;\n    }\n    return null;\n  }\n\n  getViewBox() {\n    if (this.props.horizontal) {\n      return `${this.getWidth()} ${this.getHeight()}`;\n    }\n    return `${this.getHeight()} ${this.getWidth()}`;\n  }\n\n  getSquareCoordinates(dayIndex: number) {\n    if (this.props.horizontal) {\n      return [0, dayIndex * this.getSquareSizeWithGutter()];\n    }\n    return [dayIndex * this.getSquareSizeWithGutter(), 0];\n  }\n\n  getMonthLabelCoordinates(weekIndex: number) {\n    if (this.props.horizontal) {\n      return [\n        weekIndex * this.getSquareSizeWithGutter(),\n        this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE\n      ];\n    }\n    const verticalOffset = -2;\n    return [\n      0,\n      (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset\n    ];\n  }\n\n  renderSquare(dayIndex: number, index: number) {\n    const indexOutOfRange =\n      index < this.getNumEmptyDaysAtStart() ||\n      index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n\n    if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n      return null;\n    }\n\n    const [x, y] = this.getSquareCoordinates(dayIndex);\n    const { squareSize = SQUARE_SIZE } = this.props;\n\n    return (\n      <Rect\n        key={index}\n        width={squareSize}\n        height={squareSize}\n        x={x + paddingLeft}\n        y={y}\n        title={this.getTitleForIndex(index)}\n        fill={this.getClassNameForIndex(index)}\n        onPress={() => {\n          this.handleDayPress(index);\n        }}\n        {...this.getTooltipDataAttrsForIndex(index)}\n      />\n    );\n  }\n\n  handleDayPress(index: number) {\n    if (!this.props.onDayPress) {\n      return;\n    }\n\n    this.props.onDayPress(\n      this.state.valueCache[index] && this.state.valueCache[index].value\n        ? this.state.valueCache[index].value\n        : {\n            [this.props.accessor]: 0,\n            date: new Date(\n              this.getStartDate().valueOf() + index * MILLISECONDS_IN_ONE_DAY\n            )\n          }\n    );\n  }\n\n  renderWeek(weekIndex: number) {\n    const [x, y] = this.getTransformForWeek(weekIndex);\n    return (\n      <G key={weekIndex} x={x} y={y}>\n        {_.range(DAYS_IN_WEEK).map(dayIndex =>\n          this.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex)\n        )}\n      </G>\n    );\n  }\n\n  renderAllWeeks() {\n    return _.range(this.getWeekCount()).map(weekIndex =>\n      this.renderWeek(weekIndex)\n    );\n  }\n\n  renderMonthLabels() {\n    if (!this.props.showMonthLabels) {\n      return null;\n    }\n\n    const weekRange = _.range(this.getWeekCount() - 1); // don't render for last week, because label will be cut off\n\n    return weekRange.map(weekIndex => {\n      const endOfWeek = shiftDate(\n        this.getStartDateWithEmptyDays(),\n        (weekIndex + 1) * DAYS_IN_WEEK\n      );\n\n      const [x, y] = this.getMonthLabelCoordinates(weekIndex);\n\n      return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? (\n        <Text\n          key={weekIndex}\n          x={x + paddingLeft}\n          y={y + 8}\n          {...this.getPropsForLabels()}\n        >\n          {this.props.getMonthLabel\n            ? this.props.getMonthLabel(endOfWeek.getMonth())\n            : MONTH_LABELS[endOfWeek.getMonth()]}\n        </Text>\n      ) : null;\n    });\n  }\n\n  public static defaultProps = {\n    numDays: 200,\n    endDate: new Date(),\n    gutterSize: 1,\n    squareSize: SQUARE_SIZE,\n    horizontal: true,\n    showMonthLabels: true,\n    showOutOfRangeDays: false,\n    accessor: \"count\",\n    classForValue: value => (value ? \"black\" : \"#8cc665\"),\n    style: {}\n  };\n\n  render() {\n    const { style } = this.props;\n\n    let { borderRadius = 0 } = style;\n\n    if (!borderRadius && this.props.chartConfig.style) {\n      const stupidXo = this.props.chartConfig.style.borderRadius;\n      borderRadius = stupidXo;\n    }\n\n    return (\n      <View style={style}>\n        <Svg height={this.props.height} width={this.props.width}>\n          {this.renderDefs({\n            width: this.props.width,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>{this.renderMonthLabels()}</G>\n          <G>{this.renderAllWeeks()}</G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default ContributionGraph;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}