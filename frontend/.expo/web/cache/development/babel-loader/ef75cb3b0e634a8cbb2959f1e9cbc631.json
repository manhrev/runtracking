{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nimport React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = 0.75;\nvar AbstractChart = function (_super) {\n  __extends(AbstractChart, _super);\n  function AbstractChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.calcScaler = function (data) {\n      if (_this.props.fromZero && _this.props.fromNumber) {\n        return Math.max.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else if (_this.props.fromZero) {\n        return Math.max.apply(Math, __spreadArrays(data, [0])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else if (_this.props.fromNumber) {\n        return Math.max.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) - Math.min.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) || 1;\n      } else {\n        return Math.max.apply(Math, data) - Math.min.apply(Math, data) || 1;\n      }\n    };\n    _this.calcBaseHeight = function (data, height) {\n      var min = Math.min.apply(Math, data);\n      var max = Math.max.apply(Math, data);\n      if (min >= 0 && max >= 0) {\n        return height;\n      } else if (min < 0 && max <= 0) {\n        return 0;\n      } else if (min < 0 && max > 0) {\n        return height * max / _this.calcScaler(data);\n      }\n    };\n    _this.calcHeight = function (val, data, height) {\n      var max = Math.max.apply(Math, data);\n      var min = Math.min.apply(Math, data);\n      if (min < 0 && max > 0) {\n        return height * (val / _this.calcScaler(data));\n      } else if (min >= 0 && max >= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - min) / _this.calcScaler(data));\n      } else if (min < 0 && max <= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - max) / _this.calcScaler(data));\n      }\n    };\n    _this.renderHorizontalLines = function (config) {\n      var count = config.count,\n        width = config.width,\n        height = config.height,\n        paddingTop = config.paddingTop,\n        paddingRight = config.paddingRight,\n        _a = config.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _a === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _a;\n      var basePosition = height * verticalLabelsHeightPercentage;\n      return __spreadArrays(new Array(count + 1)).map(function (_, i) {\n        var y = basePosition / count * i + paddingTop;\n        return _jsx(Line, _objectSpread({\n          x1: paddingRight,\n          y1: y,\n          x2: width,\n          y2: y\n        }, _this.getPropsForBackgroundLines()), Math.random());\n      });\n    };\n    _this.renderHorizontalLine = function (config) {\n      var width = config.width,\n        height = config.height,\n        paddingTop = config.paddingTop,\n        paddingRight = config.paddingRight,\n        _a = config.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _a === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _a;\n      return _jsx(Line, _objectSpread({\n        x1: paddingRight,\n        y1: height * verticalLabelsHeightPercentage + paddingTop,\n        x2: width,\n        y2: height * verticalLabelsHeightPercentage + paddingTop\n      }, _this.getPropsForBackgroundLines()), Math.random());\n    };\n    _this.renderHorizontalLabels = function (config) {\n      var count = config.count,\n        data = config.data,\n        height = config.height,\n        paddingTop = config.paddingTop,\n        paddingRight = config.paddingRight,\n        _a = config.horizontalLabelRotation,\n        horizontalLabelRotation = _a === void 0 ? 0 : _a,\n        _b = config.decimalPlaces,\n        decimalPlaces = _b === void 0 ? 2 : _b,\n        _c = config.formatYLabel,\n        formatYLabel = _c === void 0 ? function (yLabel) {\n          return yLabel;\n        } : _c,\n        _d = config.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _d === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _d;\n      var _e = _this.props,\n        _f = _e.yAxisLabel,\n        yAxisLabel = _f === void 0 ? \"\" : _f,\n        _g = _e.yAxisSuffix,\n        yAxisSuffix = _g === void 0 ? \"\" : _g,\n        _h = _e.yLabelsOffset,\n        yLabelsOffset = _h === void 0 ? 12 : _h;\n      return new Array(count === 1 ? 1 : count + 1).fill(1).map(function (_, i) {\n        var yLabel = String(i * count);\n        if (count === 1) {\n          yLabel = \"\" + yAxisLabel + formatYLabel(data[0].toFixed(decimalPlaces)) + yAxisSuffix;\n        } else {\n          var label = _this.props.fromZero ? _this.calcScaler(data) / count * i + Math.min.apply(Math, __spreadArrays(data, [0])) : _this.calcScaler(data) / count * i + Math.min.apply(Math, data);\n          yLabel = \"\" + yAxisLabel + formatYLabel(label.toFixed(decimalPlaces)) + yAxisSuffix;\n        }\n        var basePosition = height * verticalLabelsHeightPercentage;\n        var x = paddingRight - yLabelsOffset;\n        var y = count === 1 && _this.props.fromZero ? paddingTop + 4 : height * verticalLabelsHeightPercentage - basePosition / count * i + paddingTop;\n        return _jsx(Text, _objectSpread(_objectSpread(_objectSpread({\n          rotation: horizontalLabelRotation,\n          origin: x + \", \" + y,\n          x: x,\n          textAnchor: \"end\",\n          y: y\n        }, _this.getPropsForLabels()), _this.getPropsForHorizontalLabels()), {}, {\n          children: yLabel\n        }), Math.random());\n      });\n    };\n    _this.renderVerticalLabels = function (_a) {\n      var _b = _a.labels,\n        labels = _b === void 0 ? [] : _b,\n        width = _a.width,\n        height = _a.height,\n        paddingRight = _a.paddingRight,\n        paddingTop = _a.paddingTop,\n        _c = _a.horizontalOffset,\n        horizontalOffset = _c === void 0 ? 0 : _c,\n        _d = _a.stackedBar,\n        stackedBar = _d === void 0 ? false : _d,\n        _e = _a.verticalLabelRotation,\n        verticalLabelRotation = _e === void 0 ? 0 : _e,\n        _f = _a.formatXLabel,\n        formatXLabel = _f === void 0 ? function (xLabel) {\n          return xLabel;\n        } : _f,\n        _g = _a.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _g === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _g;\n      var _h = _this.props,\n        _j = _h.xAxisLabel,\n        xAxisLabel = _j === void 0 ? \"\" : _j,\n        _k = _h.xLabelsOffset,\n        xLabelsOffset = _k === void 0 ? 0 : _k,\n        _l = _h.hidePointsAtIndex,\n        hidePointsAtIndex = _l === void 0 ? [] : _l;\n      var fontSize = 12;\n      var fac = 1;\n      if (stackedBar) {\n        fac = 0.71;\n      }\n      return labels.map(function (label, i) {\n        if (hidePointsAtIndex.includes(i)) {\n          return null;\n        }\n        var x = ((width - paddingRight) / labels.length * i + paddingRight + horizontalOffset) * fac;\n        var y = height * verticalLabelsHeightPercentage + paddingTop + fontSize * 2 + xLabelsOffset;\n        return _jsx(Text, _objectSpread(_objectSpread(_objectSpread({\n          origin: x + \", \" + y,\n          rotation: verticalLabelRotation,\n          x: x,\n          y: y,\n          textAnchor: verticalLabelRotation === 0 ? \"middle\" : \"start\"\n        }, _this.getPropsForLabels()), _this.getPropsForVerticalLabels()), {}, {\n          children: \"\" + formatXLabel(label) + xAxisLabel\n        }), Math.random());\n      });\n    };\n    _this.renderVerticalLines = function (_a) {\n      var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight,\n        _b = _a.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _b === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _b;\n      var _c = _this.props.yAxisInterval,\n        yAxisInterval = _c === void 0 ? 1 : _c;\n      return __spreadArrays(new Array(Math.ceil(data.length / yAxisInterval))).map(function (_, i) {\n        return _jsx(Line, _objectSpread({\n          x1: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y1: 0,\n          x2: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y2: height * verticalLabelsHeightPercentage + paddingTop\n        }, _this.getPropsForBackgroundLines()), Math.random());\n      });\n    };\n    _this.renderVerticalLine = function (_a) {\n      var height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight,\n        _b = _a.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _b === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _b;\n      return _jsx(Line, _objectSpread({\n        x1: Math.floor(paddingRight),\n        y1: 0,\n        x2: Math.floor(paddingRight),\n        y2: height * verticalLabelsHeightPercentage + paddingTop\n      }, _this.getPropsForBackgroundLines()), Math.random());\n    };\n    _this.renderDefs = function (config) {\n      var width = config.width,\n        height = config.height,\n        backgroundGradientFrom = config.backgroundGradientFrom,\n        backgroundGradientTo = config.backgroundGradientTo,\n        useShadowColorFromDataset = config.useShadowColorFromDataset,\n        data = config.data;\n      var fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\") ? config.backgroundGradientFromOpacity : 1.0;\n      var toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\") ? config.backgroundGradientToOpacity : 1.0;\n      var fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\") ? config.fillShadowGradient : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientOpacity = config.hasOwnProperty(\"fillShadowGradientOpacity\") ? config.fillShadowGradientOpacity : 0.1;\n      var fillShadowGradientFrom = config.hasOwnProperty(\"fillShadowGradientFrom\") ? config.fillShadowGradientFrom : fillShadowGradient;\n      var fillShadowGradientFromOpacity = config.hasOwnProperty(\"fillShadowGradientFromOpacity\") ? config.fillShadowGradientFromOpacity : fillShadowGradientOpacity;\n      var fillShadowGradientFromOffset = config.hasOwnProperty(\"fillShadowGradientFromOffset\") ? config.fillShadowGradientFromOffset : 0;\n      var fillShadowGradientTo = config.hasOwnProperty(\"fillShadowGradientTo\") ? config.fillShadowGradientTo : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientToOpacity = config.hasOwnProperty(\"fillShadowGradientToOpacity\") ? config.fillShadowGradientToOpacity : 0.1;\n      var fillShadowGradientToOffset = config.hasOwnProperty(\"fillShadowGradientToOffset\") ? config.fillShadowGradientToOffset : 1;\n      return _jsxs(Defs, {\n        children: [_jsxs(LinearGradient, {\n          id: \"backgroundGradient\",\n          x1: 0,\n          y1: height,\n          x2: width,\n          y2: 0,\n          gradientUnits: \"userSpaceOnUse\",\n          children: [_jsx(Stop, {\n            offset: \"0\",\n            stopColor: backgroundGradientFrom,\n            stopOpacity: fromOpacity\n          }), _jsx(Stop, {\n            offset: \"1\",\n            stopColor: backgroundGradientTo,\n            stopOpacity: toOpacity\n          })]\n        }), useShadowColorFromDataset ? data.map(function (dataset, index) {\n          return _jsxs(LinearGradient, {\n            id: \"fillShadowGradientFrom_\" + index,\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: height,\n            gradientUnits: \"userSpaceOnUse\",\n            children: [_jsx(Stop, {\n              offset: fillShadowGradientFromOffset,\n              stopColor: dataset.color ? dataset.color(1.0) : fillShadowGradientFrom,\n              stopOpacity: fillShadowGradientFromOpacity\n            }), _jsx(Stop, {\n              offset: fillShadowGradientToOffset,\n              stopColor: dataset.color ? dataset.color(fillShadowGradientFromOpacity) : fillShadowGradientFrom,\n              stopOpacity: fillShadowGradientToOpacity || 0\n            })]\n          }, \"\" + index);\n        }) : _jsxs(LinearGradient, {\n          id: \"fillShadowGradientFrom\",\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: height,\n          gradientUnits: \"userSpaceOnUse\",\n          children: [_jsx(Stop, {\n            offset: fillShadowGradientFromOffset,\n            stopColor: fillShadowGradientFrom,\n            stopOpacity: fillShadowGradientFromOpacity\n          }), _jsx(Stop, {\n            offset: fillShadowGradientToOffset,\n            stopColor: fillShadowGradientTo || fillShadowGradientFrom,\n            stopOpacity: fillShadowGradientToOpacity || 0\n          })]\n        })]\n      });\n    };\n    return _this;\n  }\n  AbstractChart.prototype.getPropsForBackgroundLines = function () {\n    var _a = this.props.chartConfig.propsForBackgroundLines,\n      propsForBackgroundLines = _a === void 0 ? {} : _a;\n    return __assign({\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1\n    }, propsForBackgroundLines);\n  };\n  AbstractChart.prototype.getPropsForLabels = function () {\n    var _a = this.props.chartConfig,\n      _b = _a.propsForLabels,\n      propsForLabels = _b === void 0 ? {} : _b,\n      color = _a.color,\n      _c = _a.labelColor,\n      labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fontSize: 12,\n      fill: labelColor(0.8)\n    }, propsForLabels);\n  };\n  AbstractChart.prototype.getPropsForVerticalLabels = function () {\n    var _a = this.props.chartConfig,\n      _b = _a.propsForVerticalLabels,\n      propsForVerticalLabels = _b === void 0 ? {} : _b,\n      color = _a.color,\n      _c = _a.labelColor,\n      labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForVerticalLabels);\n  };\n  AbstractChart.prototype.getPropsForHorizontalLabels = function () {\n    var _a = this.props.chartConfig,\n      _b = _a.propsForHorizontalLabels,\n      propsForHorizontalLabels = _b === void 0 ? {} : _b,\n      color = _a.color,\n      _c = _a.labelColor,\n      labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForHorizontalLabels);\n  };\n  return AbstractChart;\n}(Component);\nexport default AbstractChart;","map":{"version":3,"sources":["../src/AbstractChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\n\nimport { ChartConfig, Dataset, PartialBy } from \"./HelperTypes\";\n\nexport interface AbstractChartProps {\n  fromZero?: boolean;\n  fromNumber?: number;\n  chartConfig?: AbstractChartConfig;\n  yAxisLabel?: string;\n  yAxisSuffix?: string;\n  yLabelsOffset?: number;\n  yAxisInterval?: number;\n  xAxisLabel?: string;\n  xLabelsOffset?: number;\n  hidePointsAtIndex?: number[];\n}\n\nexport interface AbstractChartConfig extends ChartConfig {\n  count?: number;\n  data?: Dataset[];\n  width?: number;\n  height?: number;\n  paddingTop?: number;\n  paddingRight?: number;\n  horizontalLabelRotation?: number;\n  formatYLabel?: (yLabel: string) => string;\n  labels?: string[];\n  horizontalOffset?: number;\n  stackedBar?: boolean;\n  verticalLabelRotation?: number;\n  formatXLabel?: (xLabel: string) => string;\n  verticalLabelsHeightPercentage?: number;\n  formatTopBarValue?: (topBarValue: number) => string | number;\n}\n\nexport type AbstractChartState = {};\n\nexport const DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = 0.75;\n\nclass AbstractChart<\n  IProps extends AbstractChartProps,\n  IState extends AbstractChartState\n> extends Component<AbstractChartProps & IProps, AbstractChartState & IState> {\n  calcScaler = (data: number[]) => {\n    if (this.props.fromZero && this.props.fromNumber) {\n      return Math.max(...data, this.props.fromNumber) - Math.min(...data, 0) || 1;\n    } else if (this.props.fromZero) {\n      return Math.max(...data, 0) - Math.min(...data, 0) || 1;\n    } else if (this.props.fromNumber) {\n      return (\n        Math.max(...data, this.props.fromNumber) -\n          Math.min(...data, this.props.fromNumber) || 1\n      );\n    } else {\n      return Math.max(...data) - Math.min(...data) || 1;\n    }\n  };\n\n  calcBaseHeight = (data: number[], height: number) => {\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    if (min >= 0 && max >= 0) {\n      return height;\n    } else if (min < 0 && max <= 0) {\n      return 0;\n    } else if (min < 0 && max > 0) {\n      return (height * max) / this.calcScaler(data);\n    }\n  };\n\n  calcHeight = (val: number, data: number[], height: number) => {\n    const max = Math.max(...data);\n    const min = Math.min(...data);\n\n    if (min < 0 && max > 0) {\n      return height * (val / this.calcScaler(data));\n    } else if (min >= 0 && max >= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - min) / this.calcScaler(data));\n    } else if (min < 0 && max <= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - max) / this.calcScaler(data));\n    }\n  };\n\n  getPropsForBackgroundLines() {\n    const { propsForBackgroundLines = {} } = this.props.chartConfig;\n    return {\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1,\n      ...propsForBackgroundLines\n    };\n  }\n\n  getPropsForLabels() {\n    const {\n      propsForLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fontSize: 12,\n      fill: labelColor(0.8),\n      ...propsForLabels\n    };\n  }\n\n  getPropsForVerticalLabels() {\n    const {\n      propsForVerticalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForVerticalLabels\n    };\n  }\n\n  getPropsForHorizontalLabels() {\n    const {\n      propsForHorizontalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForHorizontalLabels\n    };\n  }\n\n  renderHorizontalLines = config => {\n    const {\n      count,\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n    const basePosition = height * verticalLabelsHeightPercentage;\n\n    return [...new Array(count + 1)].map((_, i) => {\n      const y = (basePosition / count) * i + paddingTop;\n      return (\n        <Line\n          key={Math.random()}\n          x1={paddingRight}\n          y1={y}\n          x2={width}\n          y2={y}\n          {...this.getPropsForBackgroundLines()}\n        />\n      );\n    });\n  };\n\n  renderHorizontalLine = config => {\n    const {\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n    return (\n      <Line\n        key={Math.random()}\n        x1={paddingRight}\n        y1={height * verticalLabelsHeightPercentage + paddingTop}\n        x2={width}\n        y2={height * verticalLabelsHeightPercentage + paddingTop}\n        {...this.getPropsForBackgroundLines()}\n      />\n    );\n  };\n\n  renderHorizontalLabels = (\n    config: Omit<AbstractChartConfig, \"data\"> & { data: number[] }\n  ) => {\n    const {\n      count,\n      data,\n      height,\n      paddingTop,\n      paddingRight,\n      horizontalLabelRotation = 0,\n      decimalPlaces = 2,\n      formatYLabel = (yLabel: string) => yLabel,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n\n    const {\n      yAxisLabel = \"\",\n      yAxisSuffix = \"\",\n      yLabelsOffset = 12\n    } = this.props;\n    return new Array(count === 1 ? 1 : count + 1).fill(1).map((_, i) => {\n      let yLabel = String(i * count);\n\n      if (count === 1) {\n        yLabel = `${yAxisLabel}${formatYLabel(\n          data[0].toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      } else {\n        const label = this.props.fromZero\n          ? (this.calcScaler(data) / count) * i + Math.min(...data, 0)\n          : (this.calcScaler(data) / count) * i + Math.min(...data);\n        yLabel = `${yAxisLabel}${formatYLabel(\n          label.toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      }\n\n      const basePosition = height * verticalLabelsHeightPercentage;\n      const x = paddingRight - yLabelsOffset;\n      const y =\n        count === 1 && this.props.fromZero\n          ? paddingTop + 4\n          : height * verticalLabelsHeightPercentage -\n            (basePosition / count) * i +\n            paddingTop;\n      return (\n        <Text\n          rotation={horizontalLabelRotation}\n          origin={`${x}, ${y}`}\n          key={Math.random()}\n          x={x}\n          textAnchor=\"end\"\n          y={y}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForHorizontalLabels()}\n        >\n          {yLabel}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLabels = ({\n    labels = [],\n    width,\n    height,\n    paddingRight,\n    paddingTop,\n    horizontalOffset = 0,\n    stackedBar = false,\n    verticalLabelRotation = 0,\n    formatXLabel = xLabel => xLabel,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Pick<\n    AbstractChartConfig,\n    | \"labels\"\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"horizontalOffset\"\n    | \"stackedBar\"\n    | \"verticalLabelRotation\"\n    | \"formatXLabel\"\n    | \"verticalLabelsHeightPercentage\"\n  >) => {\n    const {\n      xAxisLabel = \"\",\n      xLabelsOffset = 0,\n      hidePointsAtIndex = []\n    } = this.props;\n\n    const fontSize = 12;\n\n    let fac = 1;\n    if (stackedBar) {\n      fac = 0.71;\n    }\n\n    return labels.map((label, i) => {\n      if (hidePointsAtIndex.includes(i)) {\n        return null;\n      }\n\n      const x =\n        (((width - paddingRight) / labels.length) * i +\n          paddingRight +\n          horizontalOffset) *\n        fac;\n\n      const y =\n        height * verticalLabelsHeightPercentage +\n        paddingTop +\n        fontSize * 2 +\n        xLabelsOffset;\n\n      return (\n        <Text\n          origin={`${x}, ${y}`}\n          rotation={verticalLabelRotation}\n          key={Math.random()}\n          x={x}\n          y={y}\n          textAnchor={verticalLabelRotation === 0 ? \"middle\" : \"start\"}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForVerticalLabels()}\n        >\n          {`${formatXLabel(label)}${xAxisLabel}`}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLines = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Omit<\n    Pick<\n      AbstractChartConfig,\n      | \"data\"\n      | \"width\"\n      | \"height\"\n      | \"paddingRight\"\n      | \"paddingTop\"\n      | \"verticalLabelsHeightPercentage\"\n    >,\n    \"data\"\n  > & { data: number[] }) => {\n    const { yAxisInterval = 1 } = this.props;\n\n    return [...new Array(Math.ceil(data.length / yAxisInterval))].map(\n      (_, i) => {\n        return (\n          <Line\n            key={Math.random()}\n            x1={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y1={0}\n            x2={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y2={height * verticalLabelsHeightPercentage + paddingTop}\n            {...this.getPropsForBackgroundLines()}\n          />\n        );\n      }\n    );\n  };\n\n  renderVerticalLine = ({\n    height,\n    paddingTop,\n    paddingRight,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Pick<\n    AbstractChartConfig,\n    \"height\" | \"paddingRight\" | \"paddingTop\" | \"verticalLabelsHeightPercentage\"\n  >) => (\n    <Line\n      key={Math.random()}\n      x1={Math.floor(paddingRight)}\n      y1={0}\n      x2={Math.floor(paddingRight)}\n      y2={height * verticalLabelsHeightPercentage + paddingTop}\n      {...this.getPropsForBackgroundLines()}\n    />\n  );\n\n  renderDefs = (\n    config: Pick<\n      PartialBy<\n        AbstractChartConfig,\n        | \"backgroundGradientFromOpacity\"\n        | \"backgroundGradientToOpacity\"\n        | \"fillShadowGradient\"\n        | \"fillShadowGradientOpacity\"\n        | \"fillShadowGradientFrom\"\n        | \"fillShadowGradientFromOpacity\"\n        | \"fillShadowGradientFromOffset\"\n        | \"fillShadowGradientTo\"\n        | \"fillShadowGradientToOpacity\"\n        | \"fillShadowGradientToOffset\"\n      >,\n      | \"width\"\n      | \"height\"\n      | \"backgroundGradientFrom\"\n      | \"backgroundGradientTo\"\n      | \"useShadowColorFromDataset\"\n      | \"data\"\n      | \"backgroundGradientFromOpacity\"\n      | \"backgroundGradientToOpacity\"\n      | \"fillShadowGradient\"\n      | \"fillShadowGradientOpacity\"\n      | \"fillShadowGradientFrom\"\n      | \"fillShadowGradientFromOpacity\"\n      | \"fillShadowGradientFromOffset\"\n      | \"fillShadowGradientTo\"\n      | \"fillShadowGradientToOpacity\"\n      | \"fillShadowGradientToOffset\"\n    >\n  ) => {\n    const {\n      width,\n      height,\n      backgroundGradientFrom,\n      backgroundGradientTo,\n      useShadowColorFromDataset,\n      data\n    } = config;\n\n    const fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\")\n      ? config.backgroundGradientFromOpacity\n      : 1.0;\n    const toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\")\n      ? config.backgroundGradientToOpacity\n      : 1.0;\n\n    const fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\")\n      ? config.fillShadowGradient\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientOpacity = config.hasOwnProperty(\n      \"fillShadowGradientOpacity\"\n    )\n      ? config.fillShadowGradientOpacity\n      : 0.1;\n\n    const fillShadowGradientFrom = config.hasOwnProperty(\n      \"fillShadowGradientFrom\"\n    )\n      ? config.fillShadowGradientFrom\n      : fillShadowGradient;\n\n    const fillShadowGradientFromOpacity = config.hasOwnProperty(\n      \"fillShadowGradientFromOpacity\"\n    )\n      ? config.fillShadowGradientFromOpacity\n      : fillShadowGradientOpacity;\n\n    const fillShadowGradientFromOffset = config.hasOwnProperty(\n      \"fillShadowGradientFromOffset\"\n    )\n      ? config.fillShadowGradientFromOffset\n      : 0;\n\n    const fillShadowGradientTo = config.hasOwnProperty(\"fillShadowGradientTo\")\n      ? config.fillShadowGradientTo\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientToOpacity = config.hasOwnProperty(\n      \"fillShadowGradientToOpacity\"\n    )\n      ? config.fillShadowGradientToOpacity\n      : 0.1;\n\n    const fillShadowGradientToOffset = config.hasOwnProperty(\n      \"fillShadowGradientToOffset\"\n    )\n      ? config.fillShadowGradientToOffset\n      : 1;\n\n    return (\n      <Defs>\n        <LinearGradient\n          id=\"backgroundGradient\"\n          x1={0}\n          y1={height}\n          x2={width}\n          y2={0}\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <Stop\n            offset=\"0\"\n            stopColor={backgroundGradientFrom}\n            stopOpacity={fromOpacity}\n          />\n          <Stop\n            offset=\"1\"\n            stopColor={backgroundGradientTo}\n            stopOpacity={toOpacity}\n          />\n        </LinearGradient>\n        {useShadowColorFromDataset ? (\n          data.map((dataset, index) => (\n            <LinearGradient\n              id={`fillShadowGradientFrom_${index}`}\n              key={`${index}`}\n              x1={0}\n              y1={0}\n              x2={0}\n              y2={height}\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <Stop\n                offset={fillShadowGradientFromOffset}\n                stopColor={\n                  dataset.color ? dataset.color(1.0) : fillShadowGradientFrom\n                }\n                stopOpacity={fillShadowGradientFromOpacity}\n              />\n              <Stop\n                offset={fillShadowGradientToOffset}\n                stopColor={\n                  dataset.color\n                    ? dataset.color(fillShadowGradientFromOpacity)\n                    : fillShadowGradientFrom\n                }\n                stopOpacity={fillShadowGradientToOpacity || 0}\n              />\n            </LinearGradient>\n          ))\n        ) : (\n          <LinearGradient\n            id=\"fillShadowGradientFrom\"\n            x1={0}\n            y1={0}\n            x2={0}\n            y2={height}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop\n              offset={fillShadowGradientFromOffset}\n              stopColor={fillShadowGradientFrom}\n              stopOpacity={fillShadowGradientFromOpacity}\n            />\n            <Stop\n              offset={fillShadowGradientToOffset}\n              stopColor={fillShadowGradientTo || fillShadowGradientFrom}\n              stopOpacity={fillShadowGradientToOpacity || 0}\n            />\n          </LinearGradient>\n        )}\n      </Defs>\n    );\n  };\n}\n\nexport default AbstractChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}