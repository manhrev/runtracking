{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { selectUserSlice } from \"../../redux/features/user/slice\";\nimport { useAppSelector } from \"../../redux/store\";\nimport { useAppTheme } from \"../../theme\";\nimport SettingItem from \"./comp/SettingItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileSetting(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var theme = useAppTheme();\n  var _useAppSelector = useAppSelector(selectUserSlice),\n    displayName = _useAppSelector.displayName,\n    email = _useAppSelector.email,\n    height = _useAppSelector.height,\n    phoneNumber = _useAppSelector.phoneNumber,\n    username = _useAppSelector.username,\n    weight = _useAppSelector.weight;\n  return _jsxs(View, {\n    style: styles(theme).container,\n    children: [_jsxs(View, {\n      style: styles(theme).settingGroup,\n      children: [_jsx(SettingItem, {\n        left: \"Fullname\",\n        right: displayName,\n        topDivider: true,\n        onPress: function onPress() {}\n      }), _jsx(SettingItem, {\n        left: \"Username\",\n        right: username,\n        onPress: function onPress() {}\n      }), _jsx(SettingItem, {\n        left: \"Phone number\",\n        right: phoneNumber,\n        onPress: function onPress() {}\n      }), _jsx(SettingItem, {\n        left: \"Email\",\n        right: email,\n        onPress: function onPress() {}\n      })]\n    }), _jsxs(View, {\n      style: styles(theme).settingGroup,\n      children: [_jsx(SettingItem, {\n        left: \"Height\",\n        right: height.toString() + \" cm\",\n        topDivider: true,\n        onPress: function onPress() {}\n      }), _jsx(SettingItem, {\n        left: \"Weight\",\n        right: weight.toString() + \" kg\",\n        onPress: function onPress() {}\n      })]\n    })]\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.surfaceVariant\n    },\n    settingGroup: {\n      marginTop: 20\n    }\n  });\n};","map":{"version":3,"names":["selectUserSlice","useAppSelector","useAppTheme","SettingItem","ProfileSetting","navigation","route","theme","displayName","email","height","phoneNumber","username","weight","styles","container","settingGroup","toString","StyleSheet","create","flex","backgroundColor","colors","surfaceVariant","marginTop"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Profile/ProfileSetting.tsx"],"sourcesContent":["import { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { StyleSheet, View } from \"react-native\";\nimport { RootBaseStackParamList } from \"../../navigators/BaseStack\";\nimport { selectUserSlice } from \"../../redux/features/user/slice\";\nimport { useAppSelector } from \"../../redux/store\";\nimport { AppTheme, useAppTheme } from \"../../theme\";\nimport SettingItem from \"./comp/SettingItem\";\n\nexport default function ProfileSetting({\n  navigation,\n  route,\n}: NativeStackScreenProps<RootBaseStackParamList, \"ProfileSetting\">) {\n  const theme = useAppTheme();\n  const { displayName, email, height, phoneNumber, username, weight } =\n    useAppSelector(selectUserSlice);\n  return (\n    <View style={styles(theme).container}>\n      <View style={styles(theme).settingGroup}>\n        <SettingItem\n          left=\"Fullname\"\n          right={displayName}\n          topDivider\n          onPress={() => {}}\n        />\n        <SettingItem left=\"Username\" right={username} onPress={() => {}} />\n        <SettingItem\n          left=\"Phone number\"\n          right={phoneNumber}\n          onPress={() => {}}\n        />\n        <SettingItem left=\"Email\" right={email} onPress={() => {}} />\n      </View>\n      <View style={styles(theme).settingGroup}>\n        <SettingItem\n          left=\"Height\"\n          right={height.toString() + \" cm\"}\n          topDivider={true}\n          onPress={() => {}}\n        />\n        <SettingItem\n          left=\"Weight\"\n          right={weight.toString() + \" kg\"}\n          onPress={() => {}}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.surfaceVariant,\n    },\n    settingGroup: {\n      marginTop: 20,\n    },\n  });\n"],"mappings":";;AAGA,SAASA,eAAe;AACxB,SAASC,cAAc;AACvB,SAAmBC,WAAW;AAC9B,OAAOC,WAAW;AAA2B;AAAA;AAE7C,eAAe,SAASC,cAAc,OAG+B;EAAA,IAFnEC,UAAU,QAAVA,UAAU;IACVC,KAAK,QAALA,KAAK;EAEL,IAAMC,KAAK,GAAGL,WAAW,EAAE;EAC3B,sBACED,cAAc,CAACD,eAAe,CAAC;IADzBQ,WAAW,mBAAXA,WAAW;IAAEC,KAAK,mBAALA,KAAK;IAAEC,MAAM,mBAANA,MAAM;IAAEC,WAAW,mBAAXA,WAAW;IAAEC,QAAQ,mBAARA,QAAQ;IAAEC,MAAM,mBAANA,MAAM;EAEjE,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACP,KAAK,CAAC,CAACQ,SAAU;IAAA,WACnC,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACP,KAAK,CAAC,CAACS,YAAa;MAAA,WACtC,KAAC,WAAW;QACV,IAAI,EAAC,UAAU;QACf,KAAK,EAAER,WAAY;QACnB,UAAU;QACV,OAAO,EAAE,mBAAM,CAAC;MAAE,EAClB,EACF,KAAC,WAAW;QAAC,IAAI,EAAC,UAAU;QAAC,KAAK,EAAEI,QAAS;QAAC,OAAO,EAAE,mBAAM,CAAC;MAAE,EAAG,EACnE,KAAC,WAAW;QACV,IAAI,EAAC,cAAc;QACnB,KAAK,EAAED,WAAY;QACnB,OAAO,EAAE,mBAAM,CAAC;MAAE,EAClB,EACF,KAAC,WAAW;QAAC,IAAI,EAAC,OAAO;QAAC,KAAK,EAAEF,KAAM;QAAC,OAAO,EAAE,mBAAM,CAAC;MAAE,EAAG;IAAA,EACxD,EACP,MAAC,IAAI;MAAC,KAAK,EAAEK,MAAM,CAACP,KAAK,CAAC,CAACS,YAAa;MAAA,WACtC,KAAC,WAAW;QACV,IAAI,EAAC,QAAQ;QACb,KAAK,EAAEN,MAAM,CAACO,QAAQ,EAAE,GAAG,KAAM;QACjC,UAAU,EAAE,IAAK;QACjB,OAAO,EAAE,mBAAM,CAAC;MAAE,EAClB,EACF,KAAC,WAAW;QACV,IAAI,EAAC,QAAQ;QACb,KAAK,EAAEJ,MAAM,CAACI,QAAQ,EAAE,GAAG,KAAM;QACjC,OAAO,EAAE,mBAAM,CAAC;MAAE,EAClB;IAAA,EACG;EAAA,EACF;AAEX;AAEA,IAAMH,MAAM,GAAG,SAATA,MAAM,CAAIP,KAAe;EAAA,OAC7BW,UAAU,CAACC,MAAM,CAAC;IAChBJ,SAAS,EAAE;MACTK,IAAI,EAAE,CAAC;MACPC,eAAe,EAAEd,KAAK,CAACe,MAAM,CAACC;IAChC,CAAC;IACDP,YAAY,EAAE;MACZQ,SAAS,EAAE;IACb;EACF,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module"}