{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Divider, Text, TouchableRipple, Avatar } from \"react-native-paper\";\nimport { useAppTheme } from \"../../../theme\";\nimport { Swipeable, GestureHandlerRootView } from 'react-native-gesture-handler';\nimport RightSwipe from \"./RightSwipe\";\nimport { formatDateNotification } from \"../../../utils/helpers\";\nimport { deleteNotificationInfoThunk, updateNotificationInfoThunk } from \"../../../redux/features/notification/thunk\";\nimport { useAppDispatch } from \"../../../redux/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function NotificationListItem(props) {\n  var theme = useAppTheme();\n  var notificationInfo = props.notificationInfo;\n  var id = notificationInfo.id,\n    image = notificationInfo.image,\n    isSeen = notificationInfo.isSeen,\n    message = notificationInfo.message,\n    referenceId = notificationInfo.referenceId,\n    type = notificationInfo.type,\n    time = notificationInfo.time;\n  var dispatch = useAppDispatch();\n  var onPressDelete = function () {\n    var _ref = _asyncToGenerator(function* (id) {\n      yield dispatch(deleteNotificationInfoThunk({\n        id: id\n      }));\n    });\n    return function onPressDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var rightSwipeActions = function rightSwipeActions() {\n    return RightSwipe(theme, function () {\n      onPressDelete(id);\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Divider, {\n      bold: true\n    }), _jsx(GestureHandlerRootView, {\n      children: _jsx(Swipeable, {\n        renderRightActions: rightSwipeActions,\n        children: _jsx(TouchableRipple, {\n          onPress: function onPress() {\n            dispatch(updateNotificationInfoThunk({\n              id: id,\n              isSeen: true\n            }));\n          },\n          children: _jsxs(View, {\n            style: styles(theme).listItemContainer,\n            children: [_jsx(Avatar.Image, {\n              size: 60,\n              source: require(\"../../../../assets/icon.png\")\n            }), _jsxs(View, {\n              style: styles(theme).listItemContent,\n              children: [_jsx(Text, {\n                variant: \"bodyMedium\",\n                style: [styles(theme).listItemValue, {\n                  fontWeight: isSeen ? \"500\" : \"bold\"\n                }],\n                children: message\n              }), _jsx(Text, {\n                variant: \"labelSmall\",\n                style: {\n                  color: theme.colors.secondary,\n                  fontWeight: isSeen ? \"500\" : \"bold\"\n                },\n                children: formatDateNotification(time)\n              })]\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    listItemContainer: {\n      paddingVertical: 10,\n      paddingHorizontal: 10,\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignContent: \"center\"\n    },\n    listItemContent: {\n      marginLeft: 20\n    },\n    listItemValue: {\n      paddingBottom: 10\n    }\n  });\n};","map":{"version":3,"names":["Divider","Text","TouchableRipple","Avatar","useAppTheme","Swipeable","GestureHandlerRootView","RightSwipe","formatDateNotification","deleteNotificationInfoThunk","updateNotificationInfoThunk","useAppDispatch","NotificationListItem","props","theme","notificationInfo","id","image","isSeen","message","referenceId","type","time","dispatch","onPressDelete","rightSwipeActions","styles","listItemContainer","require","listItemContent","listItemValue","fontWeight","color","colors","secondary","StyleSheet","create","paddingVertical","paddingHorizontal","display","flexDirection","alignContent","marginLeft","paddingBottom"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Profile/comp/NotificationListItem.tsx"],"sourcesContent":["import { View,  StyleSheet} from \"react-native\";\nimport { Divider, Text, TouchableRipple, Avatar } from \"react-native-paper\";\nimport { useAppTheme, AppTheme } from \"../../../theme\";\nimport {Swipeable, GestureHandlerRootView} from 'react-native-gesture-handler';\nimport RightSwipe from \"./RightSwipe\";\nimport { NotificationInfo } from \"../../../lib/notification/notification_pb\";\nimport {\n  formatDate,\n  formatDateNotification,\n  getIconWithActivityType,\n  getNameWithActivityType,\n  minutesPerKilometer,\n  secondsToMinutes,\n} from \"../../../utils/helpers\";\nimport { deleteNotificationInfoThunk, updateNotificationInfoThunk } from \"../../../redux/features/notification/thunk\";\nimport { useAppDispatch } from \"../../../redux/store\";\n\ninterface NotificationListItemProps {\n  notificationInfo: NotificationInfo.AsObject;\n}\n\n\nexport default function NotificationListItem(props: NotificationListItemProps) {\n  const theme = useAppTheme();\n//   const { left, right, topDivider, color, onPress } = props;\n  \n\n  \n  const { notificationInfo } = props\n  const {id, image, isSeen, message,referenceId, type, time} = notificationInfo\n  const dispatch = useAppDispatch()\n  \n  const onPressDelete = async (id: number) => {\n    await dispatch(deleteNotificationInfoThunk({id: id}))\n  }\n\n  const rightSwipeActions = () => RightSwipe(theme, () => {onPressDelete(id)})\n\n  return (\n    <>\n     <Divider bold />\n     {/* <TouchableRipple> */}\n     <GestureHandlerRootView>\n     <Swipeable \n        renderRightActions={rightSwipeActions}\n     >\n        <TouchableRipple onPress={() => {\n          dispatch(updateNotificationInfoThunk({id: id, isSeen: true}))\n        }}>\n                <View style={styles(theme).listItemContainer}>\n                <Avatar.Image  size={60} source={require('../../../../assets/icon.png')} />\n                        <View style={styles(theme).listItemContent}>\n                            \n                            <Text variant=\"bodyMedium\"  style={[styles(theme).listItemValue,\n                            {fontWeight: (isSeen) ? \"500\" : \"bold\"}\n                            \n                            ]}>\n                                {message} \n                            </Text>\n                            <Text\n                                variant=\"labelSmall\"\n                                style={{\n                                    // textAlign: \"right\",\n                                    color: theme.colors.secondary,\n                                    fontWeight: (isSeen) ? \"500\" : \"bold\"\n                                }}>\n                                {formatDateNotification(time)}\n                            </Text>\n                        </View>\n                </View>\n                </TouchableRipple>\n    </Swipeable>\n      </GestureHandlerRootView>\n    </>\n  );\n}\n\n\nconst styles = (theme: AppTheme) =>\n  StyleSheet.create({\n    listItemContainer: {\n      paddingVertical: 10,\n      paddingHorizontal: 10,\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignContent: \"center\"\n    },\n    listItemContent: {\n        marginLeft: 20\n    },\n    listItemValue: {\n        paddingBottom: 10\n    },\n\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}