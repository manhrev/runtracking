{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Defs, G, LinearGradient, Rect, Stop, Svg, Text } from \"react-native-svg\";\nimport AbstractChart from \"./AbstractChart\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar barWidth = 32;\nvar BarChart = function (_super) {\n  __extends(BarChart, _super);\n  function BarChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.getBarPercentage = function () {\n      var _a = _this.props.chartConfig.barPercentage,\n        barPercentage = _a === void 0 ? 1 : _a;\n      return barPercentage;\n    };\n    _this.renderBars = function (_a) {\n      var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight,\n        barRadius = _a.barRadius,\n        withCustomBarColorFromData = _a.withCustomBarColorFromData;\n      var baseHeight = _this.calcBaseHeight(data, height);\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n        var barWidth = 32 * _this.getBarPercentage();\n        return _jsx(Rect, {\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4 * 3 + paddingTop,\n          rx: barRadius,\n          width: barWidth,\n          height: Math.abs(barHeight) / 4 * 3,\n          fill: withCustomBarColorFromData ? \"url(#customColor_0_\" + i + \")\" : \"url(#fillShadowGradientFrom)\"\n        }, Math.random());\n      });\n    };\n    _this.renderBarTops = function (_a) {\n      var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight;\n      var baseHeight = _this.calcBaseHeight(data, height);\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n        var barWidth = 32 * _this.getBarPercentage();\n        return _jsx(Rect, {\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 2,\n          y: (baseHeight - barHeight) / 4 * 3 + paddingTop,\n          width: barWidth,\n          height: 2,\n          fill: _this.props.chartConfig.color(0.6)\n        }, Math.random());\n      });\n    };\n    _this.renderColors = function (_a) {\n      var data = _a.data,\n        flatColor = _a.flatColor;\n      return data.map(function (dataset, index) {\n        var _a, _b;\n        return _jsx(Defs, {\n          children: (_b = dataset.colors) === null || _b === void 0 ? void 0 : _b.map(function (color, colorIndex) {\n            var highOpacityColor = color(1.0);\n            var lowOpacityColor = color(0.1);\n            return _jsxs(LinearGradient, {\n              id: \"customColor_\" + index + \"_\" + colorIndex,\n              x1: 0,\n              y1: 0,\n              x2: 0,\n              y2: 1,\n              children: [_jsx(Stop, {\n                offset: \"0\",\n                stopColor: highOpacityColor,\n                stopOpacity: \"1\"\n              }), flatColor ? _jsx(Stop, {\n                offset: \"1\",\n                stopColor: highOpacityColor,\n                stopOpacity: \"1\"\n              }) : _jsx(Stop, {\n                offset: \"1\",\n                stopColor: lowOpacityColor,\n                stopOpacity: \"0\"\n              })]\n            }, index + \"_\" + colorIndex);\n          })\n        }, (_a = dataset.key) !== null && _a !== void 0 ? _a : index);\n      });\n    };\n    _this.renderValuesOnTopOfBars = function (_a) {\n      var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight;\n      var baseHeight = _this.calcBaseHeight(data, height);\n      var renderLabel = function renderLabel(value) {\n        if (_this.props.chartConfig.formatTopBarValue) {\n          return _this.props.chartConfig.formatTopBarValue(value);\n        } else {\n          return value;\n        }\n      };\n      return data.map(function (x, i) {\n        var barHeight = _this.calcHeight(x, data, height);\n        var barWidth = 32 * _this.getBarPercentage();\n        return _jsx(Text, {\n          x: paddingRight + i * (width - paddingRight) / data.length + barWidth / 1,\n          y: (baseHeight - barHeight) / 4 * 3 + paddingTop - 1,\n          fill: _this.props.chartConfig.color(0.6),\n          fontSize: \"12\",\n          textAnchor: \"middle\",\n          children: renderLabel(data[i])\n        }, Math.random());\n      });\n    };\n    return _this;\n  }\n  BarChart.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      width = _b.width,\n      height = _b.height,\n      data = _b.data,\n      _c = _b.style,\n      style = _c === void 0 ? {} : _c,\n      _d = _b.withHorizontalLabels,\n      withHorizontalLabels = _d === void 0 ? true : _d,\n      _e = _b.withVerticalLabels,\n      withVerticalLabels = _e === void 0 ? true : _e,\n      _f = _b.verticalLabelRotation,\n      verticalLabelRotation = _f === void 0 ? 0 : _f,\n      _g = _b.horizontalLabelRotation,\n      horizontalLabelRotation = _g === void 0 ? 0 : _g,\n      _h = _b.withInnerLines,\n      withInnerLines = _h === void 0 ? true : _h,\n      _j = _b.showBarTops,\n      showBarTops = _j === void 0 ? true : _j,\n      _k = _b.withCustomBarColorFromData,\n      withCustomBarColorFromData = _k === void 0 ? false : _k,\n      _l = _b.showValuesOnTopOfBars,\n      showValuesOnTopOfBars = _l === void 0 ? false : _l,\n      _m = _b.flatColor,\n      flatColor = _m === void 0 ? false : _m,\n      _o = _b.segments,\n      segments = _o === void 0 ? 4 : _o;\n    var _p = style.borderRadius,\n      borderRadius = _p === void 0 ? 0 : _p,\n      _q = style.paddingTop,\n      paddingTop = _q === void 0 ? 16 : _q,\n      _r = style.paddingRight,\n      paddingRight = _r === void 0 ? 64 : _r;\n    var config = {\n      width: width,\n      height: height,\n      verticalLabelRotation: verticalLabelRotation,\n      horizontalLabelRotation: horizontalLabelRotation,\n      barRadius: this.props.chartConfig && this.props.chartConfig.barRadius || 0,\n      decimalPlaces: (_a = this.props.chartConfig && this.props.chartConfig.decimalPlaces) !== null && _a !== void 0 ? _a : 2,\n      formatYLabel: this.props.chartConfig && this.props.chartConfig.formatYLabel || function (label) {\n        return label;\n      },\n      formatXLabel: this.props.chartConfig && this.props.chartConfig.formatXLabel || function (label) {\n        return label;\n      }\n    };\n    return _jsx(View, {\n      style: style,\n      children: _jsxs(Svg, {\n        height: height,\n        width: width,\n        children: [this.renderDefs(__assign(__assign({}, config), this.props.chartConfig)), this.renderColors(__assign(__assign({}, this.props.chartConfig), {\n          flatColor: flatColor,\n          data: this.props.data.datasets\n        })), _jsx(Rect, {\n          width: \"100%\",\n          height: height,\n          rx: borderRadius,\n          ry: borderRadius,\n          fill: \"url(#backgroundGradient)\"\n        }), _jsx(G, {\n          children: withInnerLines ? this.renderHorizontalLines(__assign(__assign({}, config), {\n            count: segments,\n            paddingTop: paddingTop\n          })) : null\n        }), _jsx(G, {\n          children: withHorizontalLabels ? this.renderHorizontalLabels(__assign(__assign({}, config), {\n            count: segments,\n            data: data.datasets[0].data,\n            paddingTop: paddingTop,\n            paddingRight: paddingRight\n          })) : null\n        }), _jsx(G, {\n          children: withVerticalLabels ? this.renderVerticalLabels(__assign(__assign({}, config), {\n            labels: data.labels,\n            paddingRight: paddingRight,\n            paddingTop: paddingTop,\n            horizontalOffset: barWidth * this.getBarPercentage()\n          })) : null\n        }), _jsx(G, {\n          children: this.renderBars(__assign(__assign({}, config), {\n            data: data.datasets[0].data,\n            paddingTop: paddingTop,\n            paddingRight: paddingRight,\n            withCustomBarColorFromData: withCustomBarColorFromData\n          }))\n        }), _jsx(G, {\n          children: showValuesOnTopOfBars && this.renderValuesOnTopOfBars(__assign(__assign({}, config), {\n            data: data.datasets[0].data,\n            paddingTop: paddingTop,\n            paddingRight: paddingRight\n          }))\n        }), _jsx(G, {\n          children: showBarTops && this.renderBarTops(__assign(__assign({}, config), {\n            data: data.datasets[0].data,\n            paddingTop: paddingTop,\n            paddingRight: paddingRight\n          }))\n        })]\n      })\n    });\n  };\n  return BarChart;\n}(AbstractChart);\nexport default BarChart;","map":{"version":3,"sources":["../src/BarChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport {\n  Defs,\n  G,\n  LinearGradient,\n  Rect,\n  Stop,\n  Svg,\n  Text\n} from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps\n} from \"./AbstractChart\";\nimport { ChartData } from \"./HelperTypes\";\n\nconst barWidth = 32;\n\nexport interface BarChartProps extends AbstractChartProps {\n  data: ChartData;\n  width: number;\n  height: number;\n  fromZero?: boolean;\n  withInnerLines?: boolean;\n  yAxisLabel: string;\n  yAxisSuffix: string;\n  chartConfig: AbstractChartConfig;\n  style?: Partial<ViewStyle>;\n  horizontalLabelRotation?: number;\n  verticalLabelRotation?: number;\n  /**\n   * Show vertical labels - default: True.\n   */\n  withVerticalLabels?: boolean;\n  /**\n   * Show horizontal labels - default: True.\n   */\n  withHorizontalLabels?: boolean;\n  /**\n   * The number of horizontal lines\n   */\n  segments?: number;\n  showBarTops?: boolean;\n  showValuesOnTopOfBars?: boolean;\n  withCustomBarColorFromData?: boolean;\n  flatColor?: boolean;\n  \n}\n\ntype BarChartState = {};\n\nclass BarChart extends AbstractChart<BarChartProps, BarChartState> {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  renderBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    barRadius,\n    withCustomBarColorFromData\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\" | \"barRadius\"\n  > & {\n    data: number[];\n    withCustomBarColorFromData: boolean;\n  }) => {\n    const baseHeight = this.calcBaseHeight(data, height);\n\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={\n            ((barHeight > 0 ? baseHeight - barHeight : baseHeight) / 4) * 3 +\n            paddingTop\n          }\n          rx={barRadius}\n          width={barWidth}\n          height={(Math.abs(barHeight) / 4) * 3}\n          fill={\n            withCustomBarColorFromData\n              ? `url(#customColor_0_${i})`\n              : \"url(#fillShadowGradientFrom)\"\n          }\n        />\n      );\n    });\n  };\n\n  renderBarTops = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\"\n  > & {\n    data: number[];\n  }) => {\n    const baseHeight = this.calcBaseHeight(data, height);\n\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Rect\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2\n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop}\n          width={barWidth}\n          height={2}\n          fill={this.props.chartConfig.color(0.6)}\n        />\n      );\n    });\n  };\n\n  renderColors = ({\n    data,\n    flatColor\n  }: Pick<AbstractChartConfig, \"data\"> & {\n    flatColor: boolean;\n  }) => {\n    return data.map((dataset, index) => (\n      <Defs key={dataset.key ?? index}>\n        {dataset.colors?.map((color, colorIndex) => {\n          const highOpacityColor = color(1.0);\n          const lowOpacityColor = color(0.1);\n\n          return (\n            <LinearGradient\n              id={`customColor_${index}_${colorIndex}`}\n              key={`${index}_${colorIndex}`}\n              x1={0}\n              y1={0}\n              x2={0}\n              y2={1}\n            >\n              <Stop offset=\"0\" stopColor={highOpacityColor} stopOpacity=\"1\" />\n              {flatColor ? (\n                <Stop offset=\"1\" stopColor={highOpacityColor} stopOpacity=\"1\" />\n              ) : (\n                  <Stop offset=\"1\" stopColor={lowOpacityColor} stopOpacity=\"0\" />\n                )}\n            </LinearGradient>\n          );\n        })}\n      </Defs>\n    ));\n  };\n\n  renderValuesOnTopOfBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    \"width\" | \"height\" | \"paddingRight\" | \"paddingTop\"\n  > & {\n    data: number[];\n  }) => {\n    const baseHeight = this.calcBaseHeight(data, height);\n\n    const renderLabel = (value: number) => {\n      if(this.props.chartConfig.formatTopBarValue) {\n        return this.props.chartConfig.formatTopBarValue(value)\n      }\n      else {\n        return value\n      }\n    }\n    return data.map((x, i) => {\n      const barHeight = this.calcHeight(x, data, height);\n      const barWidth = 32 * this.getBarPercentage();\n      return (\n        <Text\n          key={Math.random()}\n          x={\n            paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 1\n            \n          }\n          y={((baseHeight - barHeight) / 4) * 3 + paddingTop - 1}\n          fill={this.props.chartConfig.color(0.6)}\n          fontSize=\"12\"\n          textAnchor=\"middle\"\n        >\n          {renderLabel(data[i])}\n        </Text>\n      );\n    });\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      data,\n      style = {},\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      verticalLabelRotation = 0,\n      horizontalLabelRotation = 0,\n      withInnerLines = true,\n      showBarTops = true,\n      withCustomBarColorFromData = false,\n      showValuesOnTopOfBars = false,\n      flatColor = false,\n      segments = 4\n    } = this.props;\n\n    const { borderRadius = 0, paddingTop = 16, paddingRight = 64 } = style;\n\n    const config = {\n      width,\n      height,\n      verticalLabelRotation,\n      horizontalLabelRotation,\n      barRadius:\n        (this.props.chartConfig && this.props.chartConfig.barRadius) || 0,\n      decimalPlaces:\n        (this.props.chartConfig && this.props.chartConfig.decimalPlaces) ?? 2,\n      formatYLabel:\n        (this.props.chartConfig && this.props.chartConfig.formatYLabel) ||\n        function (label) {\n          return label;\n        },\n      formatXLabel:\n        (this.props.chartConfig && this.props.chartConfig.formatXLabel) ||\n        function (label) {\n          return label;\n        }\n    };\n\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          {this.renderColors({\n            ...this.props.chartConfig,\n            flatColor: flatColor,\n            data: this.props.data.datasets\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {withInnerLines\n              ? this.renderHorizontalLines({\n                ...config,\n                count: segments,\n                paddingTop\n              })\n              : null}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                ...config,\n                count: segments,\n                data: data.datasets[0].data,\n                paddingTop: paddingTop as number,\n                paddingRight: paddingRight as number\n              })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                ...config,\n                labels: data.labels,\n                paddingRight: paddingRight as number,\n                paddingTop: paddingTop as number,\n                horizontalOffset: barWidth * this.getBarPercentage()\n              })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.datasets[0].data,\n              paddingTop: paddingTop as number,\n              paddingRight: paddingRight as number,\n              withCustomBarColorFromData: withCustomBarColorFromData\n            })}\n          </G>\n          <G>\n            {showValuesOnTopOfBars &&\n              this.renderValuesOnTopOfBars({\n                ...config,\n                data: data.datasets[0].data,\n                paddingTop: paddingTop as number,\n                paddingRight: paddingRight as number\n              })}\n          </G>\n          <G>\n            {showBarTops &&\n              this.renderBarTops({\n                ...config,\n                data: data.datasets[0].data,\n                paddingTop: paddingTop as number,\n                paddingRight: paddingRight as number\n              })}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default BarChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}