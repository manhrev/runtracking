{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useRef, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from \"react-native-paper\";\nimport { isNotificationListLoading, selectNotificationList } from \"../../redux/features/notification/slice\";\nimport { listLastNotificationInfoThunk, listMoreNotificationInfoThunk, listNotificationInfoThunk } from \"../../redux/features/notification/thunk\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { useAppTheme } from \"../../theme\";\nimport NotificationListItem from \"./comp/NotificationListItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NotificationList(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var theme = useAppTheme();\n  var dispatch = useAppDispatch();\n  var _useAppSelector = useAppSelector(selectNotificationList),\n    notificationList = _useAppSelector.notificationList;\n  var isLoading = useAppSelector(isNotificationListLoading);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentOffset = _useState2[0],\n    setCurrentOffset = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    canLoadmore = _useState4[0],\n    setCanLoadmore = _useState4[1];\n  var notificationListener = useRef();\n  var fetchNotificationList = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$dispatch$unwra = yield dispatch(listNotificationInfoThunk({\n          limit: 10,\n          offset: 0\n        })).unwrap(),\n        response = _yield$dispatch$unwra.response;\n      if (response) {\n        if (response.notificationListList.length >= 10) setCanLoadmore(true);else setCanLoadmore(false);\n      } else setCanLoadmore(false);\n    });\n    return function fetchNotificationList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchLastNotificationInfo = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var res = yield dispatch(listLastNotificationInfoThunk({\n        limit: 1,\n        offset: 0\n      }));\n      if (!res.payload.error) {\n        setCurrentOffset(currentOffset + 1);\n      }\n    });\n    return function fetchLastNotificationInfo() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchMore = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var res = yield dispatch(listMoreNotificationInfoThunk({\n        limit: 10,\n        offset: currentOffset + 10\n      }));\n      if (!res.payload.error) {\n        if (currentOffset + 20 > notificationList.length) {\n          setCanLoadmore(false);\n        }\n        setCurrentOffset(currentOffset + 10);\n      }\n    });\n    return function fetchMore() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchNotificationList();\n  }, []);\n  return _jsxs(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: [notificationList.map(function (notification) {\n      return _jsx(NotificationListItem, {\n        notificationInfo: notification\n      }, notification.id);\n    }), _jsx(Button, {\n      style: {\n        marginTop: 10,\n        marginBottom: 60\n      },\n      mode: \"elevated\",\n      onPress: fetchMore,\n      loading: isLoading,\n      disabled: !canLoadmore,\n      children: \"Load more\"\n    })]\n  });\n}\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.surfaceVariant\n    },\n    itemTitle: {}\n  });\n};","map":{"version":3,"names":["useEffect","useRef","useState","Button","isNotificationListLoading","selectNotificationList","listLastNotificationInfoThunk","listMoreNotificationInfoThunk","listNotificationInfoThunk","useAppDispatch","useAppSelector","useAppTheme","NotificationListItem","NotificationList","navigation","route","theme","dispatch","notificationList","isLoading","currentOffset","setCurrentOffset","canLoadmore","setCanLoadmore","notificationListener","fetchNotificationList","limit","offset","unwrap","response","notificationListList","length","fetchLastNotificationInfo","res","payload","error","fetchMore","map","notification","id","marginTop","marginBottom","styles","StyleSheet","create","container","flex","backgroundColor","colors","surfaceVariant","itemTitle"],"sources":["/home/ngoalong/PhuMinh/HK221/dacn/curent/runtracking/frontend/src/screens/Profile/NotificationList.tsx"],"sourcesContent":["import { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {  ScrollView, StyleSheet, View } from \"react-native\";\nimport { Card, List, TouchableRipple, Text, Button } from \"react-native-paper\";\nimport { RootBaseStackParamList } from \"../../navigators/BaseStack\";\nimport { isNotificationListLoading, selectNotificationList } from \"../../redux/features/notification/slice\";\nimport { listLastNotificationInfoThunk, listMoreNotificationInfoThunk, listNotificationInfoThunk } from \"../../redux/features/notification/thunk\";\nimport { selectUserSlice } from \"../../redux/features/user/slice\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { AppTheme, useAppTheme } from \"../../theme\";\nimport NotificationListItem from \"./comp/NotificationListItem\";\nimport * as Notifications from \"expo-notifications\";\nimport { Subscription } from 'expo-modules-core';\n\nexport default function NotificationList({\n    navigation,\n    route,\n}: NativeStackScreenProps<RootBaseStackParamList, \"NotificationList\">) {\n    const theme = useAppTheme();\n    const dispatch = useAppDispatch()\n    const {notificationList} = useAppSelector(selectNotificationList)\n    const isLoading = useAppSelector(isNotificationListLoading)\n    const [currentOffset, setCurrentOffset] = useState(0);\n    const [canLoadmore, setCanLoadmore] = useState(true);\n\n    const notificationListener = useRef<Subscription>();\n\n    // notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n    //         fetchLastNotificationInfo()\n    //         console.log(\"listener\")\n    // });\n\n    const fetchNotificationList = async () => {\n        const { response } = await dispatch(\n          listNotificationInfoThunk({\n            limit: 10,\n            offset: 0,\n          })\n        ).unwrap();\n\n        if (response) {\n            if (response.notificationListList.length >= 10) setCanLoadmore(true);\n            else setCanLoadmore(false);\n          } else setCanLoadmore(false);\n    }\n\n    const fetchLastNotificationInfo = async() => {\n      const res: any = await dispatch(listLastNotificationInfoThunk({\n        limit: 1,\n        offset: 0\n      }))\n\n      if(!res.payload.error){\n          setCurrentOffset(currentOffset + 1)\n      }\n    }\n\n    const fetchMore = async () => {\n        const res: any = await dispatch(\n          listMoreNotificationInfoThunk({\n            limit: 10,\n            offset: currentOffset + 10,\n          })\n        );\n        \n        if (!res.payload.error) {\n            if (currentOffset + 20 > notificationList.length) {\n              setCanLoadmore(false);\n            }\n            setCurrentOffset(currentOffset + 10);\n          }\n    }\n\n    useEffect(() => {\n        fetchNotificationList()\n    }, [])\n    \n\n    return (\n        <ScrollView \n            showsVerticalScrollIndicator={false}\n        >\n            {notificationList.map((notification) => {\n                return <NotificationListItem \n                    key={notification.id}\n                    notificationInfo={notification}\n                />\n            })}\n            \n            <Button\n            style={{ marginTop: 10, marginBottom: 60 }}\n            mode=\"elevated\"\n            onPress={fetchMore}\n            loading={isLoading}\n            disabled={!canLoadmore}\n          >\n            Load more\n          </Button>\n        </ScrollView>\n    );\n}\n\nconst styles = (theme: AppTheme) =>\n    StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: theme.colors.surfaceVariant,\n        },\n        itemTitle: {\n\n        }\n    });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}