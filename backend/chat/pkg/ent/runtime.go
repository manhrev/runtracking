// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/manhrev/runtracking/backend/chat/pkg/ent/message"
	"github.com/manhrev/runtracking/backend/chat/pkg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescIsSeenFromUserID is the schema descriptor for is_seen_from_user_id field.
	messageDescIsSeenFromUserID := messageFields[4].Descriptor()
	// message.DefaultIsSeenFromUserID holds the default value on creation for the is_seen_from_user_id field.
	message.DefaultIsSeenFromUserID = messageDescIsSeenFromUserID.Default.(bool)
	// messageDescIsSeenToUserID is the schema descriptor for is_seen_to_user_id field.
	messageDescIsSeenToUserID := messageFields[5].Descriptor()
	// message.DefaultIsSeenToUserID holds the default value on creation for the is_seen_to_user_id field.
	message.DefaultIsSeenToUserID = messageDescIsSeenToUserID.Default.(bool)
	// messageDescSoftDeleteFromUserID is the schema descriptor for soft_delete_from_user_id field.
	messageDescSoftDeleteFromUserID := messageFields[6].Descriptor()
	// message.DefaultSoftDeleteFromUserID holds the default value on creation for the soft_delete_from_user_id field.
	message.DefaultSoftDeleteFromUserID = messageDescSoftDeleteFromUserID.Default.(bool)
	// messageDescSoftDeleteToUserID is the schema descriptor for soft_delete_to_user_id field.
	messageDescSoftDeleteToUserID := messageFields[7].Descriptor()
	// message.DefaultSoftDeleteToUserID holds the default value on creation for the soft_delete_to_user_id field.
	message.DefaultSoftDeleteToUserID = messageDescSoftDeleteToUserID.Default.(bool)
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[8].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
}
