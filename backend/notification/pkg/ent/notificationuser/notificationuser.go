// Code generated by ent, DO NOT EDIT.

package notificationuser

import (
	"time"
)

const (
	// Label holds the string label denoting the notificationuser type in the database.
	Label = "notification_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldIsSeen holds the string denoting the is_seen field in the database.
	FieldIsSeen = "is_seen"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeNotification holds the string denoting the notification edge name in mutations.
	EdgeNotification = "notification"
	// Table holds the table name of the notificationuser in the database.
	Table = "notification_users"
	// NotificationTable is the table that holds the notification relation/edge.
	NotificationTable = "notification_users"
	// NotificationInverseTable is the table name for the Notification entity.
	// It exists in this package in order to avoid circular dependency with the "notification" package.
	NotificationInverseTable = "notifications"
	// NotificationColumn is the table column denoting the notification relation/edge.
	NotificationColumn = "notification_notification_users"
)

// Columns holds all SQL columns for notificationuser fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldIsSeen,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "notification_users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"notification_notification_users",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
