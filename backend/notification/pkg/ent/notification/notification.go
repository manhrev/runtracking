// Code generated by ent, DO NOT EDIT.

package notification

const (
	// Label holds the string label denoting the notification type in the database.
	Label = "notification"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldReceivedID holds the string denoting the received_id field in the database.
	FieldReceivedID = "received_id"
	// FieldScheduledTime holds the string denoting the scheduled_time field in the database.
	FieldScheduledTime = "scheduled_time"
	// EdgeNotificationUsers holds the string denoting the notification_users edge name in mutations.
	EdgeNotificationUsers = "notification_users"
	// Table holds the table name of the notification in the database.
	Table = "notifications"
	// NotificationUsersTable is the table that holds the notification_users relation/edge.
	NotificationUsersTable = "notification_users"
	// NotificationUsersInverseTable is the table name for the NotificationUser entity.
	// It exists in this package in order to avoid circular dependency with the "notificationuser" package.
	NotificationUsersInverseTable = "notification_users"
	// NotificationUsersColumn is the table column denoting the notification_users relation/edge.
	NotificationUsersColumn = "notification_notification_users"
)

// Columns holds all SQL columns for notification fields.
var Columns = []string{
	FieldID,
	FieldMessage,
	FieldType,
	FieldReceivedID,
	FieldScheduledTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
