// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NotificationsColumns holds the columns for the "notifications" table.
	NotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "message", Type: field.TypeString, Nullable: true},
		{Name: "source_type", Type: field.TypeInt64, Nullable: true},
		{Name: "source_id", Type: field.TypeInt64, Nullable: true},
		{Name: "source_image", Type: field.TypeString, Default: "https://www.chameleon.io/assets/blog/app-notification-smartphone.png"},
		{Name: "receive_ids", Type: field.TypeJSON, Nullable: true},
		{Name: "scheduled_time", Type: field.TypeTime, Nullable: true},
	}
	// NotificationsTable holds the schema information for the "notifications" table.
	NotificationsTable = &schema.Table{
		Name:       "notifications",
		Columns:    NotificationsColumns,
		PrimaryKey: []*schema.Column{NotificationsColumns[0]},
	}
	// NotificationUsersColumns holds the columns for the "notification_users" table.
	NotificationUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "is_seen", Type: field.TypeBool, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "notification_notification_users", Type: field.TypeInt64, Nullable: true},
	}
	// NotificationUsersTable holds the schema information for the "notification_users" table.
	NotificationUsersTable = &schema.Table{
		Name:       "notification_users",
		Columns:    NotificationUsersColumns,
		PrimaryKey: []*schema.Column{NotificationUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notification_users_notifications_notification_users",
				Columns:    []*schema.Column{NotificationUsersColumns[4]},
				RefColumns: []*schema.Column{NotificationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserDevicesColumns holds the columns for the "user_devices" table.
	UserDevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "expo_push_token", Type: field.TypeString, Nullable: true},
	}
	// UserDevicesTable holds the schema information for the "user_devices" table.
	UserDevicesTable = &schema.Table{
		Name:       "user_devices",
		Columns:    UserDevicesColumns,
		PrimaryKey: []*schema.Column{UserDevicesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userdevice_user_id_expo_push_token",
				Unique:  true,
				Columns: []*schema.Column{UserDevicesColumns[1], UserDevicesColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NotificationsTable,
		NotificationUsersTable,
		UserDevicesTable,
	}
)

func init() {
	NotificationUsersTable.ForeignKeys[0].RefTable = NotificationsTable
}
