// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/activity.proto

package activity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityType int32

const (
	ActivityType_ACTIVITY_TYPE_UNSPECIFIED ActivityType = 0
	ActivityType_ACTIVITY_TYPE_RUNNING     ActivityType = 1
	ActivityType_ACTIVITY_TYPE_CYCLING     ActivityType = 2
	ActivityType_ACTIVITY_TYPE_WALKING     ActivityType = 3
)

// Enum value maps for ActivityType.
var (
	ActivityType_name = map[int32]string{
		0: "ACTIVITY_TYPE_UNSPECIFIED",
		1: "ACTIVITY_TYPE_RUNNING",
		2: "ACTIVITY_TYPE_CYCLING",
		3: "ACTIVITY_TYPE_WALKING",
	}
	ActivityType_value = map[string]int32{
		"ACTIVITY_TYPE_UNSPECIFIED": 0,
		"ACTIVITY_TYPE_RUNNING":     1,
		"ACTIVITY_TYPE_CYCLING":     2,
		"ACTIVITY_TYPE_WALKING":     3,
	}
)

func (x ActivityType) Enum() *ActivityType {
	p := new(ActivityType)
	*p = x
	return p
}

func (x ActivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_activity_proto_enumTypes[0].Descriptor()
}

func (ActivityType) Type() protoreflect.EnumType {
	return &file_api_activity_proto_enumTypes[0]
}

func (x ActivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityType.Descriptor instead.
func (ActivityType) EnumDescriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{0}
}

type ActivitySortBy int32

const (
	ActivitySortBy_ACTIVITY_SORT_BY_UNSPECIFIED    ActivitySortBy = 0
	ActivitySortBy_ACTIVITY_SORT_BY_END_TIME       ActivitySortBy = 1 // Same as Date created
	ActivitySortBy_ACTIVITY_SORT_BY_TOTAL_DISTANCE ActivitySortBy = 2
	ActivitySortBy_ACTIVITY_SORT_BY_ENERGY         ActivitySortBy = 3
	ActivitySortBy_ACTIVITY_SORT_BY_DURATION       ActivitySortBy = 4
)

// Enum value maps for ActivitySortBy.
var (
	ActivitySortBy_name = map[int32]string{
		0: "ACTIVITY_SORT_BY_UNSPECIFIED",
		1: "ACTIVITY_SORT_BY_END_TIME",
		2: "ACTIVITY_SORT_BY_TOTAL_DISTANCE",
		3: "ACTIVITY_SORT_BY_ENERGY",
		4: "ACTIVITY_SORT_BY_DURATION",
	}
	ActivitySortBy_value = map[string]int32{
		"ACTIVITY_SORT_BY_UNSPECIFIED":    0,
		"ACTIVITY_SORT_BY_END_TIME":       1,
		"ACTIVITY_SORT_BY_TOTAL_DISTANCE": 2,
		"ACTIVITY_SORT_BY_ENERGY":         3,
		"ACTIVITY_SORT_BY_DURATION":       4,
	}
)

func (x ActivitySortBy) Enum() *ActivitySortBy {
	p := new(ActivitySortBy)
	*p = x
	return p
}

func (x ActivitySortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivitySortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_activity_proto_enumTypes[1].Descriptor()
}

func (ActivitySortBy) Type() protoreflect.EnumType {
	return &file_api_activity_proto_enumTypes[1]
}

func (x ActivitySortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivitySortBy.Descriptor instead.
func (ActivitySortBy) EnumDescriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{1}
}

type GetActivityStatisticRequest_GroupBy int32

const (
	GetActivityStatisticRequest_GROUP_BY_UNSPECIFIED GetActivityStatisticRequest_GroupBy = 0
	GetActivityStatisticRequest_GROUP_BY_DAY         GetActivityStatisticRequest_GroupBy = 1 // show each day in week (mon, tues,...), show each day in month (1,2,...30)
	GetActivityStatisticRequest_GROUP_BY_WEEK        GetActivityStatisticRequest_GroupBy = 2 // show each week in quater (week1.Aug ...)
	GetActivityStatisticRequest_GORUP_BY_MONTH       GetActivityStatisticRequest_GroupBy = 3 // show each month in year (jan, feb, march ...)
	GetActivityStatisticRequest_GORUP_BY_YEAR        GetActivityStatisticRequest_GroupBy = 5 // show each year (2022, 2023...)
)

// Enum value maps for GetActivityStatisticRequest_GroupBy.
var (
	GetActivityStatisticRequest_GroupBy_name = map[int32]string{
		0: "GROUP_BY_UNSPECIFIED",
		1: "GROUP_BY_DAY",
		2: "GROUP_BY_WEEK",
		3: "GORUP_BY_MONTH",
		5: "GORUP_BY_YEAR",
	}
	GetActivityStatisticRequest_GroupBy_value = map[string]int32{
		"GROUP_BY_UNSPECIFIED": 0,
		"GROUP_BY_DAY":         1,
		"GROUP_BY_WEEK":        2,
		"GORUP_BY_MONTH":       3,
		"GORUP_BY_YEAR":        5,
	}
)

func (x GetActivityStatisticRequest_GroupBy) Enum() *GetActivityStatisticRequest_GroupBy {
	p := new(GetActivityStatisticRequest_GroupBy)
	*p = x
	return p
}

func (x GetActivityStatisticRequest_GroupBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetActivityStatisticRequest_GroupBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_activity_proto_enumTypes[2].Descriptor()
}

func (GetActivityStatisticRequest_GroupBy) Type() protoreflect.EnumType {
	return &file_api_activity_proto_enumTypes[2]
}

func (x GetActivityStatisticRequest_GroupBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetActivityStatisticRequest_GroupBy.Descriptor instead.
func (GetActivityStatisticRequest_GroupBy) EnumDescriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{8, 0}
}

type TrackPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longtitude  float64                `protobuf:"fixed64,1,opt,name=longtitude,proto3" json:"longtitude,omitempty"`
	Latitude    float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Altitude    float64                `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsStopPoint bool                   `protobuf:"varint,5,opt,name=is_stop_point,json=isStopPoint,proto3" json:"is_stop_point,omitempty"`
}

func (x *TrackPoint) Reset() {
	*x = TrackPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPoint) ProtoMessage() {}

func (x *TrackPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPoint.ProtoReflect.Descriptor instead.
func (*TrackPoint) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{0}
}

func (x *TrackPoint) GetLongtitude() float64 {
	if x != nil {
		return x.Longtitude
	}
	return 0
}

func (x *TrackPoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *TrackPoint) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *TrackPoint) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TrackPoint) GetIsStopPoint() bool {
	if x != nil {
		return x.IsStopPoint
	}
	return false
}

type ActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,11,opt,name=id,proto3" json:"id,omitempty"`
	Type          ActivityType           `protobuf:"varint,1,opt,name=type,proto3,enum=activity.ActivityType" json:"type,omitempty"`
	TotalDistance float64                `protobuf:"fixed64,2,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"` // meters
	Kcal          float32                `protobuf:"fixed32,3,opt,name=kcal,proto3" json:"kcal,omitempty"`                                        // kcal
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration      uint64                 `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"` // seconds
	Route         []*TrackPoint          `protobuf:"bytes,8,rep,name=route,proto3" json:"route,omitempty"`
	ActivityName  string                 `protobuf:"bytes,9,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	ActivityNote  string                 `protobuf:"bytes,10,opt,name=activity_note,json=activityNote,proto3" json:"activity_note,omitempty"`
}

func (x *ActivityInfo) Reset() {
	*x = ActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfo) ProtoMessage() {}

func (x *ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfo.ProtoReflect.Descriptor instead.
func (*ActivityInfo) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityInfo) GetType() ActivityType {
	if x != nil {
		return x.Type
	}
	return ActivityType_ACTIVITY_TYPE_UNSPECIFIED
}

func (x *ActivityInfo) GetTotalDistance() float64 {
	if x != nil {
		return x.TotalDistance
	}
	return 0
}

func (x *ActivityInfo) GetKcal() float32 {
	if x != nil {
		return x.Kcal
	}
	return 0
}

func (x *ActivityInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ActivityInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ActivityInfo) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ActivityInfo) GetRoute() []*TrackPoint {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *ActivityInfo) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ActivityInfo) GetActivityNote() string {
	if x != nil {
		return x.ActivityNote
	}
	return ""
}

type CreateActivityInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityInfo *ActivityInfo `protobuf:"bytes,1,opt,name=activity_info,json=activityInfo,proto3" json:"activity_info,omitempty"`
}

func (x *CreateActivityInfoRequest) Reset() {
	*x = CreateActivityInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityInfoRequest) ProtoMessage() {}

func (x *CreateActivityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateActivityInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{2}
}

func (x *CreateActivityInfoRequest) GetActivityInfo() *ActivityInfo {
	if x != nil {
		return x.ActivityInfo
	}
	return nil
}

type CreateActivityInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateActivityInfoReply) Reset() {
	*x = CreateActivityInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivityInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivityInfoReply) ProtoMessage() {}

func (x *CreateActivityInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivityInfoReply.ProtoReflect.Descriptor instead.
func (*CreateActivityInfoReply) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{3}
}

type ListActivityInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit        uint32                 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       uint64                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Ascending    bool                   `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	SortBy       ActivitySortBy         `protobuf:"varint,4,opt,name=sort_by,json=sortBy,proto3,enum=activity.ActivitySortBy" json:"sort_by,omitempty"`
	ActivityType ActivityType           `protobuf:"varint,5,opt,name=activity_type,json=activityType,proto3,enum=activity.ActivityType" json:"activity_type,omitempty"` // only get activity with this type, to get all, pass ACTIVITY_TYPE_UNSPECIFIED
	From         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	To           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListActivityInfoRequest) Reset() {
	*x = ListActivityInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivityInfoRequest) ProtoMessage() {}

func (x *ListActivityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivityInfoRequest.ProtoReflect.Descriptor instead.
func (*ListActivityInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{4}
}

func (x *ListActivityInfoRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListActivityInfoRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListActivityInfoRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListActivityInfoRequest) GetSortBy() ActivitySortBy {
	if x != nil {
		return x.SortBy
	}
	return ActivitySortBy_ACTIVITY_SORT_BY_UNSPECIFIED
}

func (x *ListActivityInfoRequest) GetActivityType() ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return ActivityType_ACTIVITY_TYPE_UNSPECIFIED
}

func (x *ListActivityInfoRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListActivityInfoRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type ListActivityInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityList []*ActivityInfo `protobuf:"bytes,1,rep,name=activity_list,json=activityList,proto3" json:"activity_list,omitempty"`
	Total        int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListActivityInfoReply) Reset() {
	*x = ListActivityInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActivityInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActivityInfoReply) ProtoMessage() {}

func (x *ListActivityInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActivityInfoReply.ProtoReflect.Descriptor instead.
func (*ListActivityInfoReply) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{5}
}

func (x *ListActivityInfoReply) GetActivityList() []*ActivityInfo {
	if x != nil {
		return x.ActivityList
	}
	return nil
}

func (x *ListActivityInfoReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteActivityInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdsToDelete []int64 `protobuf:"varint,1,rep,packed,name=ids_to_delete,json=idsToDelete,proto3" json:"ids_to_delete,omitempty"`
}

func (x *DeleteActivityInfoRequest) Reset() {
	*x = DeleteActivityInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityInfoRequest) ProtoMessage() {}

func (x *DeleteActivityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteActivityInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteActivityInfoRequest) GetIdsToDelete() []int64 {
	if x != nil {
		return x.IdsToDelete
	}
	return nil
}

type DeleteActivityInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteActivityInfoReply) Reset() {
	*x = DeleteActivityInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActivityInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActivityInfoReply) ProtoMessage() {}

func (x *DeleteActivityInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActivityInfoReply.ProtoReflect.Descriptor instead.
func (*DeleteActivityInfoReply) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{7}
}

type GetActivityStatisticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ActivityType                        `protobuf:"varint,5,opt,name=type,proto3,enum=activity.ActivityType" json:"type,omitempty"`
	From    *timestamppb.Timestamp              `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // from day a
	To      *timestamppb.Timestamp              `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`     // to day b
	GroupBy GetActivityStatisticRequest_GroupBy `protobuf:"varint,4,opt,name=group_by,json=groupBy,proto3,enum=activity.GetActivityStatisticRequest_GroupBy" json:"group_by,omitempty"`
	Tz      uint32                              `protobuf:"varint,6,opt,name=tz,proto3" json:"tz,omitempty"` // timezone
}

func (x *GetActivityStatisticRequest) Reset() {
	*x = GetActivityStatisticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityStatisticRequest) ProtoMessage() {}

func (x *GetActivityStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityStatisticRequest.ProtoReflect.Descriptor instead.
func (*GetActivityStatisticRequest) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{8}
}

func (x *GetActivityStatisticRequest) GetType() ActivityType {
	if x != nil {
		return x.Type
	}
	return ActivityType_ACTIVITY_TYPE_UNSPECIFIED
}

func (x *GetActivityStatisticRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetActivityStatisticRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *GetActivityStatisticRequest) GetGroupBy() GetActivityStatisticRequest_GroupBy {
	if x != nil {
		return x.GroupBy
	}
	return GetActivityStatisticRequest_GROUP_BY_UNSPECIFIED
}

func (x *GetActivityStatisticRequest) GetTz() uint32 {
	if x != nil {
		return x.Tz
	}
	return 0
}

type GetActivityStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ActivityStatisticData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetActivityStatisticReply) Reset() {
	*x = GetActivityStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityStatisticReply) ProtoMessage() {}

func (x *GetActivityStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityStatisticReply.ProtoReflect.Descriptor instead.
func (*GetActivityStatisticReply) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{9}
}

func (x *GetActivityStatisticReply) GetData() []*ActivityStatisticData {
	if x != nil {
		return x.Data
	}
	return nil
}

// data for each week/month/year
type ActivityStatisticData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	TotalDistance      uint64                 `protobuf:"varint,2,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"` // meters
	TotalDuration      uint64                 `protobuf:"varint,3,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"` // seconds
	NumberOfActivities uint32                 `protobuf:"varint,4,opt,name=number_of_activities,json=numberOfActivities,proto3" json:"number_of_activities,omitempty"`
}

func (x *ActivityStatisticData) Reset() {
	*x = ActivityStatisticData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_activity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityStatisticData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityStatisticData) ProtoMessage() {}

func (x *ActivityStatisticData) ProtoReflect() protoreflect.Message {
	mi := &file_api_activity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityStatisticData.ProtoReflect.Descriptor instead.
func (*ActivityStatisticData) Descriptor() ([]byte, []int) {
	return file_api_activity_proto_rawDescGZIP(), []int{10}
}

func (x *ActivityStatisticData) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *ActivityStatisticData) GetTotalDistance() uint64 {
	if x != nil {
		return x.TotalDistance
	}
	return 0
}

func (x *ActivityStatisticData) GetTotalDuration() uint64 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

func (x *ActivityStatisticData) GetNumberOfActivities() uint32 {
	if x != nil {
		return x.NumberOfActivities
	}
	return 0
}

var File_api_activity_proto protoreflect.FileDescriptor

var file_api_activity_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc3, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x70,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x89, 0x03, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x63, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6b, 0x63, 0x61, 0x6c, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x74,
	0x65, 0x22, 0x58, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb1, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x31,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x64, 0x73, 0x54,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xf0, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x48, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x74, 0x7a, 0x22, 0x6f, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12,
	0x18, 0x0a, 0x14, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x47, 0x4f, 0x52, 0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x4f, 0x52, 0x55, 0x50, 0x5f, 0x42, 0x59, 0x5f, 0x59,
	0x45, 0x41, 0x52, 0x10, 0x05, 0x22, 0x50, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2a, 0x7e, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x57, 0x41, 0x4c, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x2a, 0xb2, 0x01, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x1c,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d,
	0x0a, 0x19, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f,
	0x42, 0x59, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x23, 0x0a,
	0x1f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42,
	0x59, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x44, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x45, 0x4e, 0x45, 0x52, 0x47, 0x59, 0x10, 0x03, 0x12,
	0x1d, 0x0a, 0x19, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x52, 0x54,
	0x5f, 0x42, 0x59, 0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x32, 0x82,
	0x03, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x25, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x68, 0x72, 0x65, 0x76, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_activity_proto_rawDescOnce sync.Once
	file_api_activity_proto_rawDescData = file_api_activity_proto_rawDesc
)

func file_api_activity_proto_rawDescGZIP() []byte {
	file_api_activity_proto_rawDescOnce.Do(func() {
		file_api_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_activity_proto_rawDescData)
	})
	return file_api_activity_proto_rawDescData
}

var file_api_activity_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_activity_proto_goTypes = []interface{}{
	(ActivityType)(0),                        // 0: activity.ActivityType
	(ActivitySortBy)(0),                      // 1: activity.ActivitySortBy
	(GetActivityStatisticRequest_GroupBy)(0), // 2: activity.GetActivityStatisticRequest.GroupBy
	(*TrackPoint)(nil),                       // 3: activity.TrackPoint
	(*ActivityInfo)(nil),                     // 4: activity.ActivityInfo
	(*CreateActivityInfoRequest)(nil),        // 5: activity.CreateActivityInfoRequest
	(*CreateActivityInfoReply)(nil),          // 6: activity.CreateActivityInfoReply
	(*ListActivityInfoRequest)(nil),          // 7: activity.ListActivityInfoRequest
	(*ListActivityInfoReply)(nil),            // 8: activity.ListActivityInfoReply
	(*DeleteActivityInfoRequest)(nil),        // 9: activity.DeleteActivityInfoRequest
	(*DeleteActivityInfoReply)(nil),          // 10: activity.DeleteActivityInfoReply
	(*GetActivityStatisticRequest)(nil),      // 11: activity.GetActivityStatisticRequest
	(*GetActivityStatisticReply)(nil),        // 12: activity.GetActivityStatisticReply
	(*ActivityStatisticData)(nil),            // 13: activity.ActivityStatisticData
	(*timestamppb.Timestamp)(nil),            // 14: google.protobuf.Timestamp
}
var file_api_activity_proto_depIdxs = []int32{
	14, // 0: activity.TrackPoint.created_at:type_name -> google.protobuf.Timestamp
	0,  // 1: activity.ActivityInfo.type:type_name -> activity.ActivityType
	14, // 2: activity.ActivityInfo.start_time:type_name -> google.protobuf.Timestamp
	14, // 3: activity.ActivityInfo.end_time:type_name -> google.protobuf.Timestamp
	3,  // 4: activity.ActivityInfo.route:type_name -> activity.TrackPoint
	4,  // 5: activity.CreateActivityInfoRequest.activity_info:type_name -> activity.ActivityInfo
	1,  // 6: activity.ListActivityInfoRequest.sort_by:type_name -> activity.ActivitySortBy
	0,  // 7: activity.ListActivityInfoRequest.activity_type:type_name -> activity.ActivityType
	14, // 8: activity.ListActivityInfoRequest.from:type_name -> google.protobuf.Timestamp
	14, // 9: activity.ListActivityInfoRequest.to:type_name -> google.protobuf.Timestamp
	4,  // 10: activity.ListActivityInfoReply.activity_list:type_name -> activity.ActivityInfo
	0,  // 11: activity.GetActivityStatisticRequest.type:type_name -> activity.ActivityType
	14, // 12: activity.GetActivityStatisticRequest.from:type_name -> google.protobuf.Timestamp
	14, // 13: activity.GetActivityStatisticRequest.to:type_name -> google.protobuf.Timestamp
	2,  // 14: activity.GetActivityStatisticRequest.group_by:type_name -> activity.GetActivityStatisticRequest.GroupBy
	13, // 15: activity.GetActivityStatisticReply.data:type_name -> activity.ActivityStatisticData
	14, // 16: activity.ActivityStatisticData.datetime:type_name -> google.protobuf.Timestamp
	5,  // 17: activity.Activity.CreateActivityInfo:input_type -> activity.CreateActivityInfoRequest
	7,  // 18: activity.Activity.ListActivityInfo:input_type -> activity.ListActivityInfoRequest
	9,  // 19: activity.Activity.DeleteActivityInfo:input_type -> activity.DeleteActivityInfoRequest
	11, // 20: activity.Activity.GetActivityStatistic:input_type -> activity.GetActivityStatisticRequest
	6,  // 21: activity.Activity.CreateActivityInfo:output_type -> activity.CreateActivityInfoReply
	8,  // 22: activity.Activity.ListActivityInfo:output_type -> activity.ListActivityInfoReply
	10, // 23: activity.Activity.DeleteActivityInfo:output_type -> activity.DeleteActivityInfoReply
	12, // 24: activity.Activity.GetActivityStatistic:output_type -> activity.GetActivityStatisticReply
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_activity_proto_init() }
func file_api_activity_proto_init() {
	if File_api_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivityInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivityInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActivityInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteActivityInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityStatisticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_activity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityStatisticData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_activity_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_activity_proto_goTypes,
		DependencyIndexes: file_api_activity_proto_depIdxs,
		EnumInfos:         file_api_activity_proto_enumTypes,
		MessageInfos:      file_api_activity_proto_msgTypes,
	}.Build()
	File_api_activity_proto = out.File
	file_api_activity_proto_rawDesc = nil
	file_api_activity_proto_goTypes = nil
	file_api_activity_proto_depIdxs = nil
}
