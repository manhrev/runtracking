// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChallengesColumns holds the columns for the "challenges" table.
	ChallengesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "start_time", Type: field.TypeTime, Nullable: true},
		{Name: "picture", Type: field.TypeString, Default: "https://img.freepik.com/free-vector/modern-running-background_1017-7491.jpg?w=2000"},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "type_id", Type: field.TypeInt64},
		{Name: "is_active", Type: field.TypeBool, Default: false},
		{Name: "groupz_challenges", Type: field.TypeInt64, Nullable: true},
		{Name: "completed_first_member_id", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// ChallengesTable holds the schema information for the "challenges" table.
	ChallengesTable = &schema.Table{
		Name:       "challenges",
		Columns:    ChallengesColumns,
		PrimaryKey: []*schema.Column{ChallengesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "challenges_groupzs_challenges",
				Columns:    []*schema.Column{ChallengesColumns[9]},
				RefColumns: []*schema.Column{GroupzsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "challenges_members_challenge",
				Columns:    []*schema.Column{ChallengesColumns[10]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ChallengeMembersColumns holds the columns for the "challenge_members" table.
	ChallengeMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "point", Type: field.TypeInt64, Default: 0},
		{Name: "is_completed", Type: field.TypeBool, Default: false},
		{Name: "time_completed", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "challenge_id", Type: field.TypeInt64},
		{Name: "member_id", Type: field.TypeInt64},
	}
	// ChallengeMembersTable holds the schema information for the "challenge_members" table.
	ChallengeMembersTable = &schema.Table{
		Name:       "challenge_members",
		Columns:    ChallengeMembersColumns,
		PrimaryKey: []*schema.Column{ChallengeMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "challenge_members_challenges_challenge_members",
				Columns:    []*schema.Column{ChallengeMembersColumns[6]},
				RefColumns: []*schema.Column{ChallengesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "challenge_members_members_challenge_members",
				Columns:    []*schema.Column{ChallengeMembersColumns[7]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "challengemember_member_id_challenge_id",
				Unique:  true,
				Columns: []*schema.Column{ChallengeMembersColumns[7], ChallengeMembersColumns[6]},
			},
		},
	}
	// ChallengeMemberRulesColumns holds the columns for the "challenge_member_rules" table.
	ChallengeMemberRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "total", Type: field.TypeInt64, Default: 0},
		{Name: "rule_id", Type: field.TypeInt64},
		{Name: "is_completed", Type: field.TypeBool, Default: false},
		{Name: "time_completed", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "challenge_member_challenge_member_rules", Type: field.TypeInt64, Nullable: true},
		{Name: "challenge_rule_challenge_member_rules", Type: field.TypeInt64, Nullable: true},
	}
	// ChallengeMemberRulesTable holds the schema information for the "challenge_member_rules" table.
	ChallengeMemberRulesTable = &schema.Table{
		Name:       "challenge_member_rules",
		Columns:    ChallengeMemberRulesColumns,
		PrimaryKey: []*schema.Column{ChallengeMemberRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "challenge_member_rules_challenge_members_challenge_member_rules",
				Columns:    []*schema.Column{ChallengeMemberRulesColumns[6]},
				RefColumns: []*schema.Column{ChallengeMembersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "challenge_member_rules_challenge_rules_challenge_member_rules",
				Columns:    []*schema.Column{ChallengeMemberRulesColumns[7]},
				RefColumns: []*schema.Column{ChallengeRulesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "challengememberrule_rule_id_challenge_member_challenge_member_rules",
				Unique:  true,
				Columns: []*schema.Column{ChallengeMemberRulesColumns[2], ChallengeMemberRulesColumns[6]},
			},
		},
	}
	// ChallengeRulesColumns holds the columns for the "challenge_rules" table.
	ChallengeRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "goal", Type: field.TypeInt64, Default: 0},
		{Name: "rule_id", Type: field.TypeInt64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "challenge_challenge_rules", Type: field.TypeInt64, Nullable: true},
	}
	// ChallengeRulesTable holds the schema information for the "challenge_rules" table.
	ChallengeRulesTable = &schema.Table{
		Name:       "challenge_rules",
		Columns:    ChallengeRulesColumns,
		PrimaryKey: []*schema.Column{ChallengeRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "challenge_rules_challenges_challenge_rules",
				Columns:    []*schema.Column{ChallengeRulesColumns[4]},
				RefColumns: []*schema.Column{ChallengesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "challengerule_rule_id_challenge_challenge_rules",
				Unique:  true,
				Columns: []*schema.Column{ChallengeRulesColumns[2], ChallengeRulesColumns[4]},
			},
		},
	}
	// GroupzsColumns holds the columns for the "groupzs" table.
	GroupzsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "group_picture", Type: field.TypeString, Default: "https://img.freepik.com/free-vector/modern-running-background_1017-7491.jpg?w=2000"},
		{Name: "background_picture", Type: field.TypeString, Default: "https://img.freepik.com/free-vector/modern-running-background_1017-7491.jpg?w=2000"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "leader_id", Type: field.TypeInt64},
	}
	// GroupzsTable holds the schema information for the "groupzs" table.
	GroupzsTable = &schema.Table{
		Name:       "groupzs",
		Columns:    GroupzsColumns,
		PrimaryKey: []*schema.Column{GroupzsColumns[0]},
	}
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "status", Type: field.TypeUint32, Default: 0},
		{Name: "joining_at", Type: field.TypeTime, Nullable: true},
		{Name: "point", Type: field.TypeInt64, Default: 0},
		{Name: "completed_challenge_count", Type: field.TypeInt64, Default: 0},
		{Name: "groupz_members", Type: field.TypeInt64, Nullable: true},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:       "members",
		Columns:    MembersColumns,
		PrimaryKey: []*schema.Column{MembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "members_groupzs_members",
				Columns:    []*schema.Column{MembersColumns[7]},
				RefColumns: []*schema.Column{GroupzsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "member_user_id_groupz_members",
				Unique:  true,
				Columns: []*schema.Column{MembersColumns[2], MembersColumns[7]},
			},
		},
	}
	// SeasonsColumns holds the columns for the "seasons" table.
	SeasonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "picture", Type: field.TypeString, Default: "https://img.freepik.com/free-vector/modern-running-background_1017-7491.jpg?w=2000"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: false},
	}
	// SeasonsTable holds the schema information for the "seasons" table.
	SeasonsTable = &schema.Table{
		Name:       "seasons",
		Columns:    SeasonsColumns,
		PrimaryKey: []*schema.Column{SeasonsColumns[0]},
	}
	// SeasonMembersColumns holds the columns for the "season_members" table.
	SeasonMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "point", Type: field.TypeInt64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "member_id", Type: field.TypeInt64},
		{Name: "season_id", Type: field.TypeInt64},
	}
	// SeasonMembersTable holds the schema information for the "season_members" table.
	SeasonMembersTable = &schema.Table{
		Name:       "season_members",
		Columns:    SeasonMembersColumns,
		PrimaryKey: []*schema.Column{SeasonMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "season_members_members_season_members",
				Columns:    []*schema.Column{SeasonMembersColumns[4]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "season_members_seasons_season_members",
				Columns:    []*schema.Column{SeasonMembersColumns[5]},
				RefColumns: []*schema.Column{SeasonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "seasonmember_member_id_season_id",
				Unique:  true,
				Columns: []*schema.Column{SeasonMembersColumns[4], SeasonMembersColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChallengesTable,
		ChallengeMembersTable,
		ChallengeMemberRulesTable,
		ChallengeRulesTable,
		GroupzsTable,
		MembersTable,
		SeasonsTable,
		SeasonMembersTable,
	}
)

func init() {
	ChallengesTable.ForeignKeys[0].RefTable = GroupzsTable
	ChallengesTable.ForeignKeys[1].RefTable = MembersTable
	ChallengeMembersTable.ForeignKeys[0].RefTable = ChallengesTable
	ChallengeMembersTable.ForeignKeys[1].RefTable = MembersTable
	ChallengeMemberRulesTable.ForeignKeys[0].RefTable = ChallengeMembersTable
	ChallengeMemberRulesTable.ForeignKeys[1].RefTable = ChallengeRulesTable
	ChallengeRulesTable.ForeignKeys[0].RefTable = ChallengesTable
	MembersTable.ForeignKeys[0].RefTable = GroupzsTable
	SeasonMembersTable.ForeignKeys[0].RefTable = MembersTable
	SeasonMembersTable.ForeignKeys[1].RefTable = SeasonsTable
}
