// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/manhrev/runtracking/backend/group/pkg/ent/group"
	"github.com/manhrev/runtracking/backend/group/pkg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescBackgroundPicture is the schema descriptor for background_picture field.
	groupDescBackgroundPicture := groupFields[3].Descriptor()
	// group.DefaultBackgroundPicture holds the default value on creation for the background_picture field.
	group.DefaultBackgroundPicture = groupDescBackgroundPicture.Default.(string)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[4].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescLeaderID is the schema descriptor for leader_id field.
	groupDescLeaderID := groupFields[5].Descriptor()
	// group.DefaultLeaderID holds the default value on creation for the leader_id field.
	group.DefaultLeaderID = groupDescLeaderID.Default.(func() uuid.UUID)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupFields[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() uuid.UUID)
}
