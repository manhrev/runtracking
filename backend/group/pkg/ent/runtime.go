// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/manhrev/runtracking/backend/group/pkg/ent/challenge"
	"github.com/manhrev/runtracking/backend/group/pkg/ent/group"
	"github.com/manhrev/runtracking/backend/group/pkg/ent/member"
	"github.com/manhrev/runtracking/backend/group/pkg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	challengeFields := schema.Challenge{}.Fields()
	_ = challengeFields
	// challengeDescCreatedAt is the schema descriptor for created_at field.
	challengeDescCreatedAt := challengeFields[1].Descriptor()
	// challenge.DefaultCreatedAt holds the default value on creation for the created_at field.
	challenge.DefaultCreatedAt = challengeDescCreatedAt.Default.(func() time.Time)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescBackgroundPicture is the schema descriptor for background_picture field.
	groupDescBackgroundPicture := groupFields[3].Descriptor()
	// group.DefaultBackgroundPicture holds the default value on creation for the background_picture field.
	group.DefaultBackgroundPicture = groupDescBackgroundPicture.Default.(string)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[4].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescCreatedAt is the schema descriptor for created_at field.
	memberDescCreatedAt := memberFields[1].Descriptor()
	// member.DefaultCreatedAt holds the default value on creation for the created_at field.
	member.DefaultCreatedAt = memberDescCreatedAt.Default.(func() time.Time)
}
