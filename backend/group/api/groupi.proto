syntax = "proto3";

package group;

option go_package = "github.com/manhrev/runtracking/backend/group/pkg/api;group";

import "google/protobuf/timestamp.proto";

service GroupI {
    rpc UpdateChallengeProgress(UpdateChallengeProgressRequest) returns (UpdateChallengeProgressReply);

    // for intermediary, cloud schedule check daily progress -> call intermediary -> call groupi
    rpc CheckDailyProgressChallenge(CheckDailyProgressChallengeRequest) returns (CheckDailyProgressChallengeReply);
    rpc CheckDailyProgressSeason(CheckDailyProgressSeasonRequest) returns (CheckDailyProgressSeasonReply);
}

message CheckDailyProgressSeasonRequest{
    google.protobuf.Timestamp time_check = 3;
}

message CheckDailyProgressSeasonReply{

}

message CheckDailyProgressChallengeRequest{
    google.protobuf.Timestamp time_check = 3;
}

message CheckDailyProgressChallengeReply{

}

message UpdateChallengeProgressRequest {
    int64 challenge_id = 1;
    google.protobuf.Timestamp time = 3;
    ActivityRecord activityRecord = 4;
}

// Including increment values needed to update challenge member rules
message ActivityRecord{
    int64 calories_value = 1;
    int64 time_spend_value = 2;
    int64 distance_value = 3;
}

message UpdateChallengeProgressReply {
}

// message CheckDailyRequest {
//     google.protobuf.Timestamp time_check = 3;
// }

// message CheckDailyReply {
// }