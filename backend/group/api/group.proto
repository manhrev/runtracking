syntax = "proto3";

package group;

option go_package = "github.com/manhrev/runtracking/backend/group/pkg/api;group";

import "google/protobuf/timestamp.proto";

service Group {
    rpc CreateGroup(CreateGroupRequest) returns(CreateGroupReply){};
    rpc ListGroup(ListGroupRequest) returns(ListGroupReply){};
    rpc GetGroup(GetGroupRequest) returns(GetGroupReply){};
    rpc UpdateGroup(UpdateGroupRequest) returns(UpdateGroupReply){};
    rpc DeleteGroup(DeleteGroupRequest) returns(DeleteGroupReply){};
    rpc ListMembersOfGroup(ListMembersOfGroupRequest) returns(ListMembersOfGroupReply) {};
    rpc JoinGroup(JoinGroupRequest) returns(JoinGroupReply){};
    rpc AcceptMember(AcceptMemberRequest) returns(AcceptMemberReply) {};
    rpc BanMember(BanMemberRequest) returns (BanMemberReply) {};
    rpc LeaveGroup(LeaveGroupRequest) returns(LeaveGroupReply){};
    
    // API for challenge
    rpc CreateChallenge(CreateChallengeRequest) returns(CreateChallengeReply){};
    rpc ListChallenge(ListChallengeRequest) returns(ListChallengeReply) {};
    rpc UpdateChallenge(UpdateChallengeRequest) returns(UpdateChallengeReply) {};
    rpc DeleteChallenge(DeleteChallengeRequest) returns(DeleteChallengeReply) {};
    rpc ListUserRanking(List)
}

message LeaveGroupRequest{
    int64 group_id = 1;
}
message LeaveGroupReply{
}
message BanMemberRequest{
    int64 member_id = 1;
    int64 group_id = 2;
} 

message BanMemberReply{

}

message AcceptMemberRequest{
    int64 group_id = 1;
    int64 member_id = 2;
}

message AcceptMemberReply{}

message JoinGroupRequest{
    int64 group_id = 1;
}

message JoinGroupReply{
    
}


message CreateGroupRequest{
    GroupInfo group_info = 1;
}

message CreateGroupReply{}

message ListMembersOfGroupRequest{
    uint32 limit = 1;
    uint64 offset = 2;
    bool ascending = 3;
    int64 group_id = 6;
    MOGSortBy sort_by = 4;
    string search_by_name = 5;
    Member.Status status = 7;

    enum MOGSortBy{
        MOG_SORT_BY_UNSPECIFIED = 0;
        MOG_SORT_BY_CREATED_TIME = 1; // Sort by time joined
        MOG_SORT_BY_NAME = 2;
    }
}

message ListMembersOfGroupReply{
    repeated Member members = 1;
    int64 total = 2;
}

message ListGroupRequest{
    uint32 limit = 1;
    uint64 offset = 2;
    bool ascending = 3;
    
    string search_by_name = 5;
    FilterBy filter_by = 6;
    
    enum FilterBy{
        FILTER_BY_UNSPECIFIED = 0;
        FILTER_BY_IS_MEMBER = 1;
        FILTER_BY_IS_NOT_MEMBER = 2;
        FILTER_BY_IS_ADMIN = 3;
    }
    GroupSortBy sort_by = 4;
}

message ListGroupReply{
    repeated GroupInfo group_list = 1;
    int64 total = 2;
}

message GroupInfo{
    int64 id = 1;
    string name = 2;
    string description = 3;
    string background_picture = 4;
    int64 leader_id = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;

    //Member status of current user with this group
    Member.Status member_status = 8;

    //number active
    int64 num_of_members = 9;
    int64 num_of_challenge = 10;


    //waiting until event service implemented
    int64 num_of_event_participated = 11;
}

message GetGroupRequest{
    int64 group_id = 1;
}

message GetGroupReply{
    GroupInfo groupInfo = 1;
    repeated Member members = 2;
    repeated ChallengeInfo challenges = 3;
    repeated EventInfo events = 4;
}


message UpdateGroupRequest{
    GroupInfo groupInfo = 1;
}

message UpdateGroupReply{}

message DeleteGroupRequest{
    int64 id_to_delete = 1;
}

message DeleteGroupReply{}

enum Rule {
    RULE_UNSPECIFIED = 0;
    RULE_TOTAL_DISTANCE = 1;
    RULE_TOTAL_TIME = 2;
    RULE_TOTAL_CALORIES = 3;
}

enum ActivityType {
    ACTIVITY_TYPE_UNSPECIFIED = 0;
    ACTIVITY_TYPE_RUNNING = 1;
    ACTIVITY_TYPE_CYCLING = 2;
    ACTIVITY_TYPE_WALKING = 3;
}

enum GroupSortBy {
    GROUP_SORT_BY_UNSPECIFIED = 0;
    GROUP_SORT_BY_CREATED_TIME = 1; // Sort by time created Group
    GROUP_SORT_BY_NAME = 2;
}

message Member{
    int64 user_id = 1;
    int64 member_id = 9;
    string display_name = 7;
    string username = 2;
    string email = 3;
    google.protobuf.Timestamp created_at = 6;

    // Joining group status 
    Status status = 8;
    bool is_admin = 10;

    enum Status{
        MEMBER_STATUS_UNSPECIFIED = 0;
        MEMBER_STATUS_WAITING = 1;
        MEMBER_STATUS_BANNED = 2;
        MEMBER_STATUS_ACTIVE = 3;
        MEMBER_STATUS_REJECTED = 4;
}
}



message ChallengeInfo{
    int64 id = 1;
    string name = 2;
    string description = 3;
    repeated Rule rules = 8;
    ActivityType type = 9;
    int64 goal = 10;
    int64 total = 11;
    google.protobuf.Timestamp from = 6;
    google.protobuf.Timestamp to = 7;
}


message EventInfo{
    int64 id = 1;
    string name = 2;
    string description = 3;
    repeated Rule rules = 8;
    ActivityType type = 9;
    int64 goal = 10;
    int64 total = 11;
    google.protobuf.Timestamp from = 6;
    google.protobuf.Timestamp to = 7;
}



