static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                use_remote_address: true
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: "/dev/stdout"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: grpc-status,grpc-message
                      routes:
                        - match:
                            prefix: /auth.Auth/Login
                          route:
                            cluster: auth_cluster
                            timeout: 0s
                            host_rewrite_literal: auth-jzg35jprna-as.a.run.app
                            max_stream_duration:
                              grpc_timeout_header_max: 0s

                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /auth.Auth/SignUp
                          route:
                            cluster: auth_cluster
                            timeout: 0s
                            host_rewrite_literal: auth-jzg35jprna-as.a.run.app
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true

                        - match:
                            prefix: /auth.
                          route:
                            cluster: auth_cluster
                            timeout: 0s
                            host_rewrite_literal: auth-jzg35jprna-as.a.run.app
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true

                        # - match:
                        #     prefix: /group.Group
                        #   route:
                        #     cluster: group_cluster
                        # - match:
                        #     prefix: /notification.Notification
                        #   route:
                        #     cluster: notification_cluster
                        # - match:
                        #     prefix: /notification
                        #   route:
                        #     cluster: notification_http_cluster

                        # - match:
                        #     prefix: /activity.Activity/
                        #   route:
                        #     cluster: activity_cluster

                        # - match:
                        #     prefix: /plan.Plan/
                        #   route:
                        #     cluster: plan_cluster

                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                  # - name: envoy.filters.http.health_check
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                  #     pass_through_mode: false
                  #     headers:
                  #       - exact_match: /status
                  #         name: :path
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      grpc_service:
                        envoy_grpc:
                          cluster_name: auth_cluster
                        timeout: 0.250s

                      failure_mode_allow: false
                      transport_api_version: V3
                  - name: envoy.filters.http.router

  clusters:
    - name: auth_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: auth_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth-jzg35jprna-as.a.run.app
                      port_value: 443
      dns_lookup_family: V4_ONLY
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            alpn_protocols: h2

    # - name: group_cluster
    #   connect_timeout: 1s
    #   type: logical_dns
    #   http2_protocol_options: {}
    #   lb_policy: round_robin
    #   load_assignment:
    #     cluster_name: group_cluster
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: group
    #                   port_value: 8080
    # - name: notification_cluster
    #   connect_timeout: 1s
    #   type: logical_dns
    #   http2_protocol_options: {}
    #   lb_policy: round_robin
    #   load_assignment:
    #     cluster_name: notification_cluster
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: notification
    #                   port_value: 8080

    # - name: notification_http_cluster
    #   connect_timeout: 1s
    #   type: logical_dns
    #   typed_extension_protocol_options:
    #     envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
    #       "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
    #       explicit_http_config:
    #         http_protocol_options:
    #           header_key_format:
    #             stateful_formatter:
    #               name: notification_http_cluster
    #               typed_config:
    #                 "@type": type.googleapis.com/envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig
    #   load_assignment:
    #     cluster_name: notification_http_cluster
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: notification
    #                   port_value: 8000

    # - name: activity_cluster
    #   connect_timeout: 1s
    #   type: logical_dns
    #   http2_protocol_options: {}
    #   lb_policy: round_robin
    #   load_assignment:
    #     cluster_name: activity_cluster
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: activity
    #                   port_value: 8080

    # - name: plan_cluster
    #   connect_timeout: 1s
    #   type: logical_dns
    #   http2_protocol_options: {}
    #   lb_policy: round_robin
    #   load_assignment:
    #     cluster_name: plan_cluster
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: plan
    #                   port_value: 8080
